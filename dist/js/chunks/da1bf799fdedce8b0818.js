(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{207:function(module,exports,__webpack_require__){eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 60);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(33);\n\n/***/ }),\n\n/***/ 3:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(3);\n\n/***/ }),\n\n/***/ 60:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-bar.vue?vue&type=template&id=2031f33a&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", {\n    staticClass: \"el-tabs__active-bar\",\n    class: \"is-\" + _vm.rootTabs.tabPosition,\n    style: _vm.barStyle\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue?vue&type=template&id=2031f33a&\n\n// EXTERNAL MODULE: external \"element-ui/lib/utils/util\"\nvar util_ = __webpack_require__(3);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-bar.vue?vue&type=script&lang=js&\n//\n//\n//\n\n\n/* harmony default export */ var tab_barvue_type_script_lang_js_ = ({\n  name: 'TabBar',\n\n  props: {\n    tabs: Array\n  },\n\n  inject: ['rootTabs'],\n\n  computed: {\n    barStyle: {\n      get: function get() {\n        var _this = this;\n\n        var style = {};\n        var offset = 0;\n        var tabSize = 0;\n        var sizeName = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';\n        var sizeDir = sizeName === 'width' ? 'x' : 'y';\n        var firstUpperCase = function firstUpperCase(str) {\n          return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {\n            return L.toUpperCase();\n          });\n        };\n        this.tabs.every(function (tab, index) {\n          var $el = Object(util_[\"arrayFind\"])(_this.$parent.$refs.tabs || [], function (t) {\n            return t.id.replace('tab-', '') === tab.paneName;\n          });\n          if (!$el) {\n            return false;\n          }\n\n          if (!tab.active) {\n            offset += $el['client' + firstUpperCase(sizeName)];\n            return true;\n          } else {\n            tabSize = $el['client' + firstUpperCase(sizeName)];\n            var tabStyles = window.getComputedStyle($el);\n            if (sizeName === 'width' && _this.tabs.length > 1) {\n              tabSize -= parseFloat(tabStyles.paddingLeft) + parseFloat(tabStyles.paddingRight);\n            }\n            if (sizeName === 'width') {\n              offset += parseFloat(tabStyles.paddingLeft);\n            }\n            return false;\n          }\n        });\n\n        var transform = 'translate' + firstUpperCase(sizeDir) + '(' + offset + 'px)';\n        style[sizeName] = tabSize + 'px';\n        style.transform = transform;\n        style.msTransform = transform;\n        style.webkitTransform = transform;\n\n        return style;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_tab_barvue_type_script_lang_js_ = (tab_barvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./packages/tabs/src/tab-bar.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  src_tab_barvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"packages/tabs/src/tab-bar.vue\"\n/* harmony default export */ var tab_bar = (component.exports);\n// EXTERNAL MODULE: external \"element-ui/lib/utils/resize-event\"\nvar resize_event_ = __webpack_require__(16);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tab-nav.vue?vue&type=script&lang=js&\n\n\n\n\nfunction noop() {}\nvar tab_navvue_type_script_lang_js_firstUpperCase = function firstUpperCase(str) {\n  return str.toLowerCase().replace(/( |^)[a-z]/g, function (L) {\n    return L.toUpperCase();\n  });\n};\n\n/* harmony default export */ var tab_navvue_type_script_lang_js_ = ({\n  name: 'TabNav',\n\n  components: {\n    TabBar: tab_bar\n  },\n\n  inject: ['rootTabs'],\n\n  props: {\n    panes: Array,\n    currentName: String,\n    editable: Boolean,\n    onTabClick: {\n      type: Function,\n      default: noop\n    },\n    onTabRemove: {\n      type: Function,\n      default: noop\n    },\n    type: String,\n    stretch: Boolean\n  },\n\n  data: function data() {\n    return {\n      scrollable: false,\n      navOffset: 0,\n      isFocus: false,\n      focusable: true\n    };\n  },\n\n\n  computed: {\n    navStyle: function navStyle() {\n      var dir = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'X' : 'Y';\n      return {\n        transform: 'translate' + dir + '(-' + this.navOffset + 'px)'\n      };\n    },\n    sizeName: function sizeName() {\n      return ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';\n    }\n  },\n\n  methods: {\n    scrollPrev: function scrollPrev() {\n      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];\n      var currentOffset = this.navOffset;\n\n      if (!currentOffset) return;\n\n      var newOffset = currentOffset > containerSize ? currentOffset - containerSize : 0;\n\n      this.navOffset = newOffset;\n    },\n    scrollNext: function scrollNext() {\n      var navSize = this.$refs.nav['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];\n      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(this.sizeName)];\n      var currentOffset = this.navOffset;\n\n      if (navSize - currentOffset <= containerSize) return;\n\n      var newOffset = navSize - currentOffset > containerSize * 2 ? currentOffset + containerSize : navSize - containerSize;\n\n      this.navOffset = newOffset;\n    },\n    scrollToActiveTab: function scrollToActiveTab() {\n      if (!this.scrollable) return;\n      var nav = this.$refs.nav;\n      var activeTab = this.$el.querySelector('.is-active');\n      if (!activeTab) return;\n      var navScroll = this.$refs.navScroll;\n      var isHorizontal = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1;\n      var activeTabBounding = activeTab.getBoundingClientRect();\n      var navScrollBounding = navScroll.getBoundingClientRect();\n      var maxOffset = isHorizontal ? nav.offsetWidth - navScrollBounding.width : nav.offsetHeight - navScrollBounding.height;\n      var currentOffset = this.navOffset;\n      var newOffset = currentOffset;\n\n      if (isHorizontal) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset = currentOffset - (navScrollBounding.top - activeTabBounding.top);\n        }\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset = currentOffset + (activeTabBounding.bottom - navScrollBounding.bottom);\n        }\n      }\n      newOffset = Math.max(newOffset, 0);\n      this.navOffset = Math.min(newOffset, maxOffset);\n    },\n    update: function update() {\n      if (!this.$refs.nav) return;\n      var sizeName = this.sizeName;\n      var navSize = this.$refs.nav['offset' + tab_navvue_type_script_lang_js_firstUpperCase(sizeName)];\n      var containerSize = this.$refs.navScroll['offset' + tab_navvue_type_script_lang_js_firstUpperCase(sizeName)];\n      var currentOffset = this.navOffset;\n\n      if (containerSize < navSize) {\n        var _currentOffset = this.navOffset;\n        this.scrollable = this.scrollable || {};\n        this.scrollable.prev = _currentOffset;\n        this.scrollable.next = _currentOffset + containerSize < navSize;\n        if (navSize - _currentOffset < containerSize) {\n          this.navOffset = navSize - containerSize;\n        }\n      } else {\n        this.scrollable = false;\n        if (currentOffset > 0) {\n          this.navOffset = 0;\n        }\n      }\n    },\n    changeTab: function changeTab(e) {\n      var keyCode = e.keyCode;\n      var nextIndex = void 0;\n      var currentIndex = void 0,\n          tabList = void 0;\n      if ([37, 38, 39, 40].indexOf(keyCode) !== -1) {\n        // 左右上下键更换tab\n        tabList = e.currentTarget.querySelectorAll('[role=tab]');\n        currentIndex = Array.prototype.indexOf.call(tabList, e.target);\n      } else {\n        return;\n      }\n      if (keyCode === 37 || keyCode === 38) {\n        // left\n        if (currentIndex === 0) {\n          // first\n          nextIndex = tabList.length - 1;\n        } else {\n          nextIndex = currentIndex - 1;\n        }\n      } else {\n        // right\n        if (currentIndex < tabList.length - 1) {\n          // not last\n          nextIndex = currentIndex + 1;\n        } else {\n          nextIndex = 0;\n        }\n      }\n      tabList[nextIndex].focus(); // 改变焦点元素\n      tabList[nextIndex].click(); // 选中下一个tab\n      this.setFocus();\n    },\n    setFocus: function setFocus() {\n      if (this.focusable) {\n        this.isFocus = true;\n      }\n    },\n    removeFocus: function removeFocus() {\n      this.isFocus = false;\n    },\n    visibilityChangeHandler: function visibilityChangeHandler() {\n      var _this = this;\n\n      var visibility = document.visibilityState;\n      if (visibility === 'hidden') {\n        this.focusable = false;\n      } else if (visibility === 'visible') {\n        setTimeout(function () {\n          _this.focusable = true;\n        }, 50);\n      }\n    },\n    windowBlurHandler: function windowBlurHandler() {\n      this.focusable = false;\n    },\n    windowFocusHandler: function windowFocusHandler() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.focusable = true;\n      }, 50);\n    }\n  },\n\n  updated: function updated() {\n    this.update();\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    var type = this.type,\n        panes = this.panes,\n        editable = this.editable,\n        stretch = this.stretch,\n        onTabClick = this.onTabClick,\n        onTabRemove = this.onTabRemove,\n        navStyle = this.navStyle,\n        scrollable = this.scrollable,\n        scrollNext = this.scrollNext,\n        scrollPrev = this.scrollPrev,\n        changeTab = this.changeTab,\n        setFocus = this.setFocus,\n        removeFocus = this.removeFocus;\n\n    var scrollBtn = scrollable ? [h(\n      'span',\n      { 'class': ['el-tabs__nav-prev', scrollable.prev ? '' : 'is-disabled'], on: {\n          'click': scrollPrev\n        }\n      },\n      [h('i', { 'class': 'el-icon-arrow-left' })]\n    ), h(\n      'span',\n      { 'class': ['el-tabs__nav-next', scrollable.next ? '' : 'is-disabled'], on: {\n          'click': scrollNext\n        }\n      },\n      [h('i', { 'class': 'el-icon-arrow-right' })]\n    )] : null;\n\n    var tabs = this._l(panes, function (pane, index) {\n      var _ref;\n\n      var tabName = pane.name || pane.index || index;\n      var closable = pane.isClosable || editable;\n\n      pane.index = '' + index;\n\n      var btnClose = closable ? h('span', { 'class': 'el-icon-close', on: {\n          'click': function click(ev) {\n            onTabRemove(pane, ev);\n          }\n        }\n      }) : null;\n\n      var tabLabelContent = pane.$slots.label || pane.label;\n      var tabindex = pane.active ? 0 : -1;\n      return h(\n        'div',\n        {\n          'class': (_ref = {\n            'el-tabs__item': true\n          }, _ref['is-' + _this3.rootTabs.tabPosition] = true, _ref['is-active'] = pane.active, _ref['is-disabled'] = pane.disabled, _ref['is-closable'] = closable, _ref['is-focus'] = _this3.isFocus, _ref),\n          attrs: { id: 'tab-' + tabName,\n\n            'aria-controls': 'pane-' + tabName,\n            role: 'tab',\n            'aria-selected': pane.active,\n\n            tabindex: tabindex\n          },\n          key: 'tab-' + tabName, ref: 'tabs', refInFor: true,\n          on: {\n            'focus': function focus() {\n              setFocus();\n            },\n            'blur': function blur() {\n              removeFocus();\n            },\n            'click': function click(ev) {\n              removeFocus();onTabClick(pane, tabName, ev);\n            },\n            'keydown': function keydown(ev) {\n              if (closable && (ev.keyCode === 46 || ev.keyCode === 8)) {\n                onTabRemove(pane, ev);\n              }\n            }\n          }\n        },\n        [tabLabelContent, btnClose]\n      );\n    });\n    return h(\n      'div',\n      { 'class': ['el-tabs__nav-wrap', scrollable ? 'is-scrollable' : '', 'is-' + this.rootTabs.tabPosition] },\n      [scrollBtn, h(\n        'div',\n        { 'class': ['el-tabs__nav-scroll'], ref: 'navScroll' },\n        [h(\n          'div',\n          {\n            'class': ['el-tabs__nav', 'is-' + this.rootTabs.tabPosition, stretch && ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'is-stretch' : ''],\n            ref: 'nav',\n            style: navStyle,\n            attrs: { role: 'tablist'\n            },\n            on: {\n              'keydown': changeTab\n            }\n          },\n          [!type ? h('tab-bar', {\n            attrs: { tabs: panes }\n          }) : null, tabs]\n        )]\n      )]\n    );\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    Object(resize_event_[\"addResizeListener\"])(this.$el, this.update);\n    document.addEventListener('visibilitychange', this.visibilityChangeHandler);\n    window.addEventListener('blur', this.windowBlurHandler);\n    window.addEventListener('focus', this.windowFocusHandler);\n    setTimeout(function () {\n      _this4.scrollToActiveTab();\n    }, 0);\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$el && this.update) Object(resize_event_[\"removeResizeListener\"])(this.$el, this.update);\n    document.removeEventListener('visibilitychange', this.visibilityChangeHandler);\n    window.removeEventListener('blur', this.windowBlurHandler);\n    window.removeEventListener('focus', this.windowFocusHandler);\n  }\n});\n// CONCATENATED MODULE: ./packages/tabs/src/tab-nav.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_tab_navvue_type_script_lang_js_ = (tab_navvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/tabs/src/tab-nav.vue\nvar tab_nav_render, tab_nav_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar tab_nav_component = Object(componentNormalizer[\"a\" /* default */])(\n  src_tab_navvue_type_script_lang_js_,\n  tab_nav_render,\n  tab_nav_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var tab_nav_api; }\ntab_nav_component.options.__file = \"packages/tabs/src/tab-nav.vue\"\n/* harmony default export */ var tab_nav = (tab_nav_component.exports);\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/tabs/src/tabs.vue?vue&type=script&lang=js&\n\n\n\n/* harmony default export */ var tabsvue_type_script_lang_js_ = ({\n  name: 'ElTabs',\n\n  components: {\n    TabNav: tab_nav\n  },\n\n  props: {\n    type: String,\n    activeName: String,\n    closable: Boolean,\n    addable: Boolean,\n    value: {},\n    editable: Boolean,\n    tabPosition: {\n      type: String,\n      default: 'top'\n    },\n    beforeLeave: Function,\n    stretch: Boolean\n  },\n\n  provide: function provide() {\n    return {\n      rootTabs: this\n    };\n  },\n  data: function data() {\n    return {\n      currentName: this.value || this.activeName,\n      panes: []\n    };\n  },\n\n\n  watch: {\n    activeName: function activeName(value) {\n      this.setCurrentName(value);\n    },\n    value: function value(_value) {\n      this.setCurrentName(_value);\n    },\n    currentName: function currentName(value) {\n      var _this = this;\n\n      if (this.$refs.nav) {\n        this.$nextTick(function () {\n          _this.$refs.nav.$nextTick(function (_) {\n            _this.$refs.nav.scrollToActiveTab();\n          });\n        });\n      }\n    }\n  },\n\n  methods: {\n    calcPaneInstances: function calcPaneInstances() {\n      var _this2 = this;\n\n      var isForceUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (this.$slots.default) {\n        var paneSlots = this.$slots.default.filter(function (vnode) {\n          return vnode.tag && vnode.componentOptions && vnode.componentOptions.Ctor.options.name === 'ElTabPane';\n        });\n        // update indeed\n        var panes = paneSlots.map(function (_ref) {\n          var componentInstance = _ref.componentInstance;\n          return componentInstance;\n        });\n        var panesChanged = !(panes.length === this.panes.length && panes.every(function (pane, index) {\n          return pane === _this2.panes[index];\n        }));\n        if (isForceUpdate || panesChanged) {\n          this.panes = panes;\n        }\n      } else if (this.panes.length !== 0) {\n        this.panes = [];\n      }\n    },\n    handleTabClick: function handleTabClick(tab, tabName, event) {\n      if (tab.disabled) return;\n      this.setCurrentName(tabName);\n      this.$emit('tab-click', tab, event);\n    },\n    handleTabRemove: function handleTabRemove(pane, ev) {\n      if (pane.disabled) return;\n      ev.stopPropagation();\n      this.$emit('edit', pane.name, 'remove');\n      this.$emit('tab-remove', pane.name);\n    },\n    handleTabAdd: function handleTabAdd() {\n      this.$emit('edit', null, 'add');\n      this.$emit('tab-add');\n    },\n    setCurrentName: function setCurrentName(value) {\n      var _this3 = this;\n\n      var changeCurrentName = function changeCurrentName() {\n        _this3.currentName = value;\n        _this3.$emit('input', value);\n      };\n      if (this.currentName !== value && this.beforeLeave) {\n        var before = this.beforeLeave(value, this.currentName);\n        if (before && before.then) {\n          before.then(function () {\n            changeCurrentName();\n            _this3.$refs.nav && _this3.$refs.nav.removeFocus();\n          }, function () {\n            // https://github.com/ElemeFE/element/pull/14816\n            // ignore promise rejection in `before-leave` hook\n          });\n        } else if (before !== false) {\n          changeCurrentName();\n        }\n      } else {\n        changeCurrentName();\n      }\n    }\n  },\n\n  render: function render(h) {\n    var _ref2;\n\n    var type = this.type,\n        handleTabClick = this.handleTabClick,\n        handleTabRemove = this.handleTabRemove,\n        handleTabAdd = this.handleTabAdd,\n        currentName = this.currentName,\n        panes = this.panes,\n        editable = this.editable,\n        addable = this.addable,\n        tabPosition = this.tabPosition,\n        stretch = this.stretch;\n\n\n    var newButton = editable || addable ? h(\n      'span',\n      {\n        'class': 'el-tabs__new-tab',\n        on: {\n          'click': handleTabAdd,\n          'keydown': function keydown(ev) {\n            if (ev.keyCode === 13) {\n              handleTabAdd();\n            }\n          }\n        },\n        attrs: {\n          tabindex: '0'\n        }\n      },\n      [h('i', { 'class': 'el-icon-plus' })]\n    ) : null;\n\n    var navData = {\n      props: {\n        currentName: currentName,\n        onTabClick: handleTabClick,\n        onTabRemove: handleTabRemove,\n        editable: editable,\n        type: type,\n        panes: panes,\n        stretch: stretch\n      },\n      ref: 'nav'\n    };\n    var header = h(\n      'div',\n      { 'class': ['el-tabs__header', 'is-' + tabPosition] },\n      [newButton, h('tab-nav', navData)]\n    );\n    var panels = h(\n      'div',\n      { 'class': 'el-tabs__content' },\n      [this.$slots.default]\n    );\n\n    return h(\n      'div',\n      { 'class': (_ref2 = {\n          'el-tabs': true,\n          'el-tabs--card': type === 'card'\n        }, _ref2['el-tabs--' + tabPosition] = true, _ref2['el-tabs--border-card'] = type === 'border-card', _ref2) },\n      [tabPosition !== 'bottom' ? [header, panels] : [panels, header]]\n    );\n  },\n  created: function created() {\n    if (!this.currentName) {\n      this.setCurrentName('0');\n    }\n\n    this.$on('tab-nav-update', this.calcPaneInstances.bind(null, true));\n  },\n  mounted: function mounted() {\n    this.calcPaneInstances();\n  },\n  updated: function updated() {\n    this.calcPaneInstances();\n  }\n});\n// CONCATENATED MODULE: ./packages/tabs/src/tabs.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_tabsvue_type_script_lang_js_ = (tabsvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/tabs/src/tabs.vue\nvar tabs_render, tabs_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar tabs_component = Object(componentNormalizer[\"a\" /* default */])(\n  src_tabsvue_type_script_lang_js_,\n  tabs_render,\n  tabs_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var tabs_api; }\ntabs_component.options.__file = \"packages/tabs/src/tabs.vue\"\n/* harmony default export */ var tabs = (tabs_component.exports);\n// CONCATENATED MODULE: ./packages/tabs/index.js\n\n\n/* istanbul ignore next */\ntabs.install = function (Vue) {\n  Vue.component(tabs.name, tabs);\n};\n\n/* harmony default export */ var packages_tabs = __webpack_exports__[\"default\"] = (tabs);\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///207\n")}}]);