(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{157:function(module,exports,__webpack_require__){eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 66);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(76);\n\n/***/ }),\n\n/***/ 14:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(75);\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(58);\n\n/***/ }),\n\n/***/ 35:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(82);\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(30);\n\n/***/ }),\n\n/***/ 66:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/main.vue?vue&type=template&id=6d9756be&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"el-calendar\" }, [\n    _c(\"div\", { staticClass: \"el-calendar__header\" }, [\n      _c(\"div\", { staticClass: \"el-calendar__title\" }, [\n        _vm._v(\"\\n      \" + _vm._s(_vm.i18nDate) + \"\\n    \")\n      ]),\n      _vm.validatedRange.length === 0\n        ? _c(\n            \"div\",\n            { staticClass: \"el-calendar__button-group\" },\n            [\n              _c(\n                \"el-button-group\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"plain\", size: \"mini\" },\n                      on: {\n                        click: function($event) {\n                          _vm.selectDate(\"prev-month\")\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(_vm.t(\"el.datepicker.prevMonth\")) +\n                          \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"plain\", size: \"mini\" },\n                      on: {\n                        click: function($event) {\n                          _vm.selectDate(\"today\")\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(_vm.t(\"el.datepicker.today\")) +\n                          \"\\n        \"\n                      )\n                    ]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"plain\", size: \"mini\" },\n                      on: {\n                        click: function($event) {\n                          _vm.selectDate(\"next-month\")\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n          \" +\n                          _vm._s(_vm.t(\"el.datepicker.nextMonth\")) +\n                          \"\\n        \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        : _vm._e()\n    ]),\n    _vm.validatedRange.length === 0\n      ? _c(\n          \"div\",\n          { key: \"no-range\", staticClass: \"el-calendar__body\" },\n          [\n            _c(\"date-table\", {\n              attrs: {\n                date: _vm.date,\n                \"selected-day\": _vm.realSelectedDay,\n                \"first-day-of-week\": _vm.realFirstDayOfWeek\n              },\n              on: { pick: _vm.pickDay }\n            })\n          ],\n          1\n        )\n      : _c(\n          \"div\",\n          { key: \"has-range\", staticClass: \"el-calendar__body\" },\n          _vm._l(_vm.validatedRange, function(range, index) {\n            return _c(\"date-table\", {\n              key: index,\n              attrs: {\n                date: range[0],\n                \"selected-day\": _vm.realSelectedDay,\n                range: range,\n                \"hide-header\": index !== 0,\n                \"first-day-of-week\": _vm.realFirstDayOfWeek\n              },\n              on: { pick: _vm.pickDay }\n            })\n          }),\n          1\n        )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/calendar/src/main.vue?vue&type=template&id=6d9756be&\n\n// EXTERNAL MODULE: external \"element-ui/lib/mixins/locale\"\nvar locale_ = __webpack_require__(6);\nvar locale_default = /*#__PURE__*/__webpack_require__.n(locale_);\n\n// EXTERNAL MODULE: external \"element-ui/lib/utils/date\"\nvar date_ = __webpack_require__(24);\nvar date_default = /*#__PURE__*/__webpack_require__.n(date_);\n\n// EXTERNAL MODULE: external \"element-ui/lib/button\"\nvar button_ = __webpack_require__(14);\nvar button_default = /*#__PURE__*/__webpack_require__.n(button_);\n\n// EXTERNAL MODULE: external \"element-ui/lib/button-group\"\nvar button_group_ = __webpack_require__(35);\nvar button_group_default = /*#__PURE__*/__webpack_require__.n(button_group_);\n\n// EXTERNAL MODULE: external \"element-ui/lib/utils/date-util\"\nvar date_util_ = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/date-table.vue?vue&type=script&lang=js&\n\n\n\n\n/* harmony default export */ var date_tablevue_type_script_lang_js_ = ({\n  props: {\n    selectedDay: String, // formated date yyyy-MM-dd\n    range: {\n      type: Array,\n      validator: function validator(val) {\n        if (!(val && val.length)) return true;\n        var start = val[0],\n            end = val[1];\n\n        return Object(date_util_[\"validateRangeInOneMonth\"])(start, end);\n      }\n    },\n    date: Date,\n    hideHeader: Boolean,\n    firstDayOfWeek: Number\n  },\n\n  inject: ['elCalendar'],\n\n  methods: {\n    toNestedArr: function toNestedArr(days) {\n      return Object(date_util_[\"range\"])(days.length / 7).map(function (_, index) {\n        var start = index * 7;\n        return days.slice(start, start + 7);\n      });\n    },\n    getFormateDate: function getFormateDate(day, type) {\n      if (!day || ['prev', 'current', 'next'].indexOf(type) === -1) {\n        throw new Error('invalid day or type');\n      }\n      var prefix = this.curMonthDatePrefix;\n      if (type === 'prev') {\n        prefix = this.prevMonthDatePrefix;\n      } else if (type === 'next') {\n        prefix = this.nextMonthDatePrefix;\n      }\n      day = ('00' + day).slice(-2);\n      return prefix + '-' + day;\n    },\n    getCellClass: function getCellClass(_ref) {\n      var text = _ref.text,\n          type = _ref.type;\n\n      var classes = [type];\n      if (type === 'current') {\n        var date = this.getFormateDate(text, type);\n        if (date === this.selectedDay) {\n          classes.push('is-selected');\n        }\n        if (date === this.formatedToday) {\n          classes.push('is-today');\n        }\n      }\n      return classes;\n    },\n    pickDay: function pickDay(_ref2) {\n      var text = _ref2.text,\n          type = _ref2.type;\n\n      var date = this.getFormateDate(text, type);\n      this.$emit('pick', date);\n    },\n    cellRenderProxy: function cellRenderProxy(_ref3) {\n      var text = _ref3.text,\n          type = _ref3.type;\n      var h = this.$createElement;\n\n      var render = this.elCalendar.$scopedSlots.dateCell;\n      if (!render) return h('span', [text]);\n\n      var day = this.getFormateDate(text, type);\n      var date = new Date(day);\n      var data = {\n        isSelected: this.selectedDay === day,\n        type: type + '-month',\n        day: day\n      };\n      return render({ date: date, data: data });\n    }\n  },\n\n  computed: {\n    WEEK_DAYS: function WEEK_DAYS() {\n      return Object(date_util_[\"getI18nSettings\"])().dayNames;\n    },\n    prevMonthDatePrefix: function prevMonthDatePrefix() {\n      var temp = new Date(this.date.getTime());\n      temp.setDate(0);\n      return date_default.a.format(temp, 'yyyy-MM');\n    },\n    curMonthDatePrefix: function curMonthDatePrefix() {\n      return date_default.a.format(this.date, 'yyyy-MM');\n    },\n    nextMonthDatePrefix: function nextMonthDatePrefix() {\n      var temp = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 1);\n      return date_default.a.format(temp, 'yyyy-MM');\n    },\n    formatedToday: function formatedToday() {\n      return this.elCalendar.formatedToday;\n    },\n    isInRange: function isInRange() {\n      return this.range && this.range.length;\n    },\n    rows: function rows() {\n      var days = [];\n      // if range exists, should render days in range.\n      if (this.isInRange) {\n        var _range = this.range,\n            start = _range[0],\n            end = _range[1];\n\n        var currentMonthRange = Object(date_util_[\"range\"])(end.getDate() - start.getDate() + 1).map(function (_, index) {\n          return {\n            text: start.getDate() + index,\n            type: 'current'\n          };\n        });\n        var remaining = currentMonthRange.length % 7;\n        remaining = remaining === 0 ? 0 : 7 - remaining;\n        var nextMonthRange = Object(date_util_[\"range\"])(remaining).map(function (_, index) {\n          return {\n            text: index + 1,\n            type: 'next'\n          };\n        });\n        days = currentMonthRange.concat(nextMonthRange);\n      } else {\n        var date = this.date;\n        var firstDay = Object(date_util_[\"getFirstDayOfMonth\"])(date);\n        firstDay = firstDay === 0 ? 7 : firstDay;\n        var firstDayOfWeek = typeof this.firstDayOfWeek === 'number' ? this.firstDayOfWeek : 1;\n        var prevMonthDays = Object(date_util_[\"getPrevMonthLastDays\"])(date, firstDay - firstDayOfWeek).map(function (day) {\n          return {\n            text: day,\n            type: 'prev'\n          };\n        });\n        var currentMonthDays = Object(date_util_[\"getMonthDays\"])(date).map(function (day) {\n          return {\n            text: day,\n            type: 'current'\n          };\n        });\n        days = [].concat(prevMonthDays, currentMonthDays);\n        var nextMonthDays = Object(date_util_[\"range\"])(42 - days.length).map(function (_, index) {\n          return {\n            text: index + 1,\n            type: 'next'\n          };\n        });\n        days = days.concat(nextMonthDays);\n      }\n      return this.toNestedArr(days);\n    },\n    weekDays: function weekDays() {\n      var start = this.firstDayOfWeek;\n      var WEEK_DAYS = this.WEEK_DAYS;\n\n\n      if (typeof start !== 'number' || start === 0) {\n        return WEEK_DAYS.slice();\n      } else {\n        return WEEK_DAYS.slice(start).concat(WEEK_DAYS.slice(0, start));\n      }\n    }\n  },\n\n  render: function render() {\n    var _this = this;\n\n    var h = arguments[0];\n\n    var thead = this.hideHeader ? null : h('thead', [this.weekDays.map(function (day) {\n      return h(\n        'th',\n        { key: day },\n        [day]\n      );\n    })]);\n    return h(\n      'table',\n      {\n        'class': {\n          'el-calendar-table': true,\n          'is-range': this.isInRange\n        },\n        attrs: { cellspacing: '0',\n          cellpadding: '0' }\n      },\n      [thead, h('tbody', [this.rows.map(function (row, index) {\n        return h(\n          'tr',\n          {\n            'class': {\n              'el-calendar-table__row': true,\n              'el-calendar-table__row--hide-border': index === 0 && _this.hideHeader\n            },\n            key: index },\n          [row.map(function (cell, key) {\n            return h(\n              'td',\n              { key: key,\n                'class': _this.getCellClass(cell),\n                on: {\n                  'click': _this.pickDay.bind(_this, cell)\n                }\n              },\n              [h(\n                'div',\n                { 'class': 'el-calendar-day' },\n                [_this.cellRenderProxy(cell)]\n              )]\n            );\n          })]\n        );\n      })])]\n    );\n  }\n});\n// CONCATENATED MODULE: ./packages/calendar/src/date-table.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_date_tablevue_type_script_lang_js_ = (date_tablevue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./packages/calendar/src/date-table.vue\nvar date_table_render, date_table_staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  src_date_tablevue_type_script_lang_js_,\n  date_table_render,\n  date_table_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"packages/calendar/src/date-table.vue\"\n/* harmony default export */ var date_table = (component.exports);\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/calendar/src/main.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\nvar validTypes = ['prev-month', 'today', 'next-month'];\nvar weekDays = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar oneDay = 86400000;\n\n/* harmony default export */ var mainvue_type_script_lang_js_ = ({\n  name: 'ElCalendar',\n\n  mixins: [locale_default.a],\n\n  components: {\n    DateTable: date_table,\n    ElButton: button_default.a,\n    ElButtonGroup: button_group_default.a\n  },\n\n  props: {\n    value: [Date, String, Number],\n    range: {\n      type: Array,\n      validator: function validator(range) {\n        if (Array.isArray(range)) {\n          return range.length === 2 && range.every(function (item) {\n            return typeof item === 'string' || typeof item === 'number' || item instanceof Date;\n          });\n        } else {\n          return true;\n        }\n      }\n    },\n    firstDayOfWeek: {\n      type: Number,\n      default: 1\n    }\n  },\n\n  provide: function provide() {\n    return {\n      elCalendar: this\n    };\n  },\n\n\n  methods: {\n    pickDay: function pickDay(day) {\n      this.realSelectedDay = day;\n    },\n    selectDate: function selectDate(type) {\n      if (validTypes.indexOf(type) === -1) {\n        throw new Error('invalid type ' + type);\n      }\n      var day = '';\n      if (type === 'prev-month') {\n        day = this.prevMonthDatePrefix + '-01';\n      } else if (type === 'next-month') {\n        day = this.nextMonthDatePrefix + '-01';\n      } else {\n        day = this.formatedToday;\n      }\n\n      if (day === this.formatedDate) return;\n      this.pickDay(day);\n    },\n    toDate: function toDate(val) {\n      if (!val) {\n        throw new Error('invalid val');\n      }\n      return val instanceof Date ? val : new Date(val);\n    },\n    rangeValidator: function rangeValidator(date, isStart) {\n      var firstDayOfWeek = this.realFirstDayOfWeek;\n      var expected = isStart ? firstDayOfWeek : firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;\n      var message = (isStart ? 'start' : 'end') + ' of range should be ' + weekDays[expected] + '.';\n      if (date.getDay() !== expected) {\n        console.warn('[ElementCalendar]', message, 'Invalid range will be ignored.');\n        return false;\n      }\n      return true;\n    }\n  },\n\n  computed: {\n    prevMonthDatePrefix: function prevMonthDatePrefix() {\n      var temp = new Date(this.date.getTime());\n      temp.setDate(0);\n      return date_default.a.format(temp, 'yyyy-MM');\n    },\n    curMonthDatePrefix: function curMonthDatePrefix() {\n      return date_default.a.format(this.date, 'yyyy-MM');\n    },\n    nextMonthDatePrefix: function nextMonthDatePrefix() {\n      var temp = new Date(this.date.getFullYear(), this.date.getMonth() + 1, 1);\n      return date_default.a.format(temp, 'yyyy-MM');\n    },\n    formatedDate: function formatedDate() {\n      return date_default.a.format(this.date, 'yyyy-MM-dd');\n    },\n    i18nDate: function i18nDate() {\n      var year = this.date.getFullYear();\n      var month = this.date.getMonth() + 1;\n      return year + ' ' + this.t('el.datepicker.year') + ' ' + this.t('el.datepicker.month' + month);\n    },\n    formatedToday: function formatedToday() {\n      return date_default.a.format(this.now, 'yyyy-MM-dd');\n    },\n\n\n    realSelectedDay: {\n      get: function get() {\n        if (!this.value) return this.selectedDay;\n        return this.formatedDate;\n      },\n      set: function set(val) {\n        this.selectedDay = val;\n        var date = new Date(val);\n        this.$emit('input', date);\n      }\n    },\n\n    date: function date() {\n      if (!this.value) {\n        if (this.realSelectedDay) {\n          var d = this.selectedDay.split('-');\n          return new Date(d[0], d[1] - 1, d[2]);\n        } else if (this.validatedRange.length) {\n          return this.validatedRange[0][0];\n        }\n        return this.now;\n      } else {\n        return this.toDate(this.value);\n      }\n    },\n\n\n    // if range is valid, we get a two-digit array\n    validatedRange: function validatedRange() {\n      var _this = this;\n\n      var range = this.range;\n      if (!range) return [];\n      range = range.reduce(function (prev, val, index) {\n        var date = _this.toDate(val);\n        if (_this.rangeValidator(date, index === 0)) {\n          prev = prev.concat(date);\n        }\n        return prev;\n      }, []);\n      if (range.length === 2) {\n        var _range = range,\n            start = _range[0],\n            end = _range[1];\n\n        if (start > end) {\n          console.warn('[ElementCalendar]end time should be greater than start time');\n          return [];\n        }\n        // start time and end time in one month\n        if (Object(date_util_[\"validateRangeInOneMonth\"])(start, end)) {\n          return [[start, end]];\n        }\n        var data = [];\n        var startDay = new Date(start.getFullYear(), start.getMonth() + 1, 1);\n        var lastDay = this.toDate(startDay.getTime() - oneDay);\n        if (!Object(date_util_[\"validateRangeInOneMonth\"])(startDay, end)) {\n          console.warn('[ElementCalendar]start time and end time interval must not exceed two months');\n          return [];\n        }\n        // 第一个月的时间范围\n        data.push([start, lastDay]);\n        // 下一月的时间范围，需要计算一下该月的第一个周起始日\n        var firstDayOfWeek = this.realFirstDayOfWeek;\n        var nextMontFirstDay = startDay.getDay();\n        var interval = 0;\n        if (nextMontFirstDay !== firstDayOfWeek) {\n          if (firstDayOfWeek === 0) {\n            interval = 7 - nextMontFirstDay;\n          } else {\n            interval = firstDayOfWeek - nextMontFirstDay;\n            interval = interval > 0 ? interval : 7 + interval;\n          }\n        }\n        startDay = this.toDate(startDay.getTime() + interval * oneDay);\n        if (startDay.getDate() < end.getDate()) {\n          data.push([startDay, end]);\n        }\n        return data;\n      }\n      return [];\n    },\n    realFirstDayOfWeek: function realFirstDayOfWeek() {\n      if (this.firstDayOfWeek < 1 || this.firstDayOfWeek > 6) {\n        return 0;\n      }\n      return Math.floor(this.firstDayOfWeek);\n    }\n  },\n\n  data: function data() {\n    return {\n      selectedDay: '',\n      now: new Date()\n    };\n  }\n});\n// CONCATENATED MODULE: ./packages/calendar/src/main.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/calendar/src/main.vue\n\n\n\n\n\n/* normalize component */\n\nvar main_component = Object(componentNormalizer[\"a\" /* default */])(\n  src_mainvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var main_api; }\nmain_component.options.__file = \"packages/calendar/src/main.vue\"\n/* harmony default export */ var main = (main_component.exports);\n// CONCATENATED MODULE: ./packages/calendar/index.js\n\n\n/* istanbul ignore next */\nmain.install = function (Vue) {\n  Vue.component(main.name, main);\n};\n\n/* harmony default export */ var calendar = __webpack_exports__[\"default\"] = (main);\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///157\n")}}]);