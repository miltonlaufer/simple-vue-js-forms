(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{"./node_modules/element-ui/lib/menu.js":
/*!*********************************************!*\
  !*** ./node_modules/element-ui/lib/menu.js ***!
  \*********************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 69);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 11:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/mixins/migrating */ \"./node_modules/element-ui/lib/mixins/migrating.js\");\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/utils/dom */ \"./node_modules/element-ui/lib/utils/dom.js\");\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/mixins/emitter */ \"./node_modules/element-ui/lib/mixins/emitter.js\");\n\n/***/ }),\n\n/***/ 69:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: external \"element-ui/lib/mixins/emitter\"\nvar emitter_ = __webpack_require__(4);\nvar emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);\n\n// EXTERNAL MODULE: external \"element-ui/lib/mixins/migrating\"\nvar migrating_ = __webpack_require__(11);\nvar migrating_default = /*#__PURE__*/__webpack_require__.n(migrating_);\n\n// CONCATENATED MODULE: ./src/utils/aria-utils.js\nvar aria = aria || {};\n\naria.Utils = aria.Utils || {};\n\n/**\n * @desc Set focus on descendant nodes until the first focusable element is\n *       found.\n * @param element\n *          DOM node for which to find the first focusable descendant.\n * @returns\n *  true if a focusable element is found and focus is set.\n */\naria.Utils.focusFirstDescendant = function (element) {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (aria.Utils.attemptFocus(child) || aria.Utils.focusFirstDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @desc Find the last descendant node that is focusable.\n * @param element\n *          DOM node for which to find the last focusable descendant.\n * @returns\n *  true if a focusable element is found and focus is set.\n */\n\naria.Utils.focusLastDescendant = function (element) {\n  for (var i = element.childNodes.length - 1; i >= 0; i--) {\n    var child = element.childNodes[i];\n    if (aria.Utils.attemptFocus(child) || aria.Utils.focusLastDescendant(child)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @desc Set Attempt to set focus on the current node.\n * @param element\n *          The node to attempt to focus on.\n * @returns\n *  true if element is focused.\n */\naria.Utils.attemptFocus = function (element) {\n  if (!aria.Utils.isFocusable(element)) {\n    return false;\n  }\n  aria.Utils.IgnoreUtilFocusChanges = true;\n  try {\n    element.focus();\n  } catch (e) {}\n  aria.Utils.IgnoreUtilFocusChanges = false;\n  return document.activeElement === element;\n};\n\naria.Utils.isFocusable = function (element) {\n  if (element.tabIndex > 0 || element.tabIndex === 0 && element.getAttribute('tabIndex') !== null) {\n    return true;\n  }\n\n  if (element.disabled) {\n    return false;\n  }\n\n  switch (element.nodeName) {\n    case 'A':\n      return !!element.href && element.rel !== 'ignore';\n    case 'INPUT':\n      return element.type !== 'hidden' && element.type !== 'file';\n    case 'BUTTON':\n    case 'SELECT':\n    case 'TEXTAREA':\n      return true;\n    default:\n      return false;\n  }\n};\n\n/**\n * 触发一个事件\n * mouseenter, mouseleave, mouseover, keyup, change, click 等\n * @param  {Element} elm\n * @param  {String} name\n * @param  {*} opts\n */\naria.Utils.triggerEvent = function (elm, name) {\n  var eventName = void 0;\n\n  if (/^mouse|click/.test(name)) {\n    eventName = 'MouseEvents';\n  } else if (/^key/.test(name)) {\n    eventName = 'KeyboardEvent';\n  } else {\n    eventName = 'HTMLEvents';\n  }\n  var evt = document.createEvent(eventName);\n\n  for (var _len = arguments.length, opts = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    opts[_key - 2] = arguments[_key];\n  }\n\n  evt.initEvent.apply(evt, [name].concat(opts));\n  elm.dispatchEvent ? elm.dispatchEvent(evt) : elm.fireEvent('on' + name, evt);\n\n  return elm;\n};\n\naria.Utils.keys = {\n  tab: 9,\n  enter: 13,\n  space: 32,\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  esc: 27\n};\n\n/* harmony default export */ var aria_utils = (aria.Utils);\n// CONCATENATED MODULE: ./src/utils/menu/aria-submenu.js\n\n\nvar SubMenu = function SubMenu(parent, domNode) {\n  this.domNode = domNode;\n  this.parent = parent;\n  this.subMenuItems = [];\n  this.subIndex = 0;\n  this.init();\n};\n\nSubMenu.prototype.init = function () {\n  this.subMenuItems = this.domNode.querySelectorAll('li');\n  this.addListeners();\n};\n\nSubMenu.prototype.gotoSubIndex = function (idx) {\n  if (idx === this.subMenuItems.length) {\n    idx = 0;\n  } else if (idx < 0) {\n    idx = this.subMenuItems.length - 1;\n  }\n  this.subMenuItems[idx].focus();\n  this.subIndex = idx;\n};\n\nSubMenu.prototype.addListeners = function () {\n  var _this = this;\n\n  var keys = aria_utils.keys;\n  var parentNode = this.parent.domNode;\n  Array.prototype.forEach.call(this.subMenuItems, function (el) {\n    el.addEventListener('keydown', function (event) {\n      var prevDef = false;\n      switch (event.keyCode) {\n        case keys.down:\n          _this.gotoSubIndex(_this.subIndex + 1);\n          prevDef = true;\n          break;\n        case keys.up:\n          _this.gotoSubIndex(_this.subIndex - 1);\n          prevDef = true;\n          break;\n        case keys.tab:\n          aria_utils.triggerEvent(parentNode, 'mouseleave');\n          break;\n        case keys.enter:\n        case keys.space:\n          prevDef = true;\n          event.currentTarget.click();\n          break;\n      }\n      if (prevDef) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n      return false;\n    });\n  });\n};\n\n/* harmony default export */ var aria_submenu = (SubMenu);\n// CONCATENATED MODULE: ./src/utils/menu/aria-menuitem.js\n\n\n\nvar MenuItem = function MenuItem(domNode) {\n  this.domNode = domNode;\n  this.submenu = null;\n  this.init();\n};\n\nMenuItem.prototype.init = function () {\n  this.domNode.setAttribute('tabindex', '0');\n  var menuChild = this.domNode.querySelector('.el-menu');\n  if (menuChild) {\n    this.submenu = new aria_submenu(this, menuChild);\n  }\n  this.addListeners();\n};\n\nMenuItem.prototype.addListeners = function () {\n  var _this = this;\n\n  var keys = aria_utils.keys;\n  this.domNode.addEventListener('keydown', function (event) {\n    var prevDef = false;\n    switch (event.keyCode) {\n      case keys.down:\n        aria_utils.triggerEvent(event.currentTarget, 'mouseenter');\n        _this.submenu && _this.submenu.gotoSubIndex(0);\n        prevDef = true;\n        break;\n      case keys.up:\n        aria_utils.triggerEvent(event.currentTarget, 'mouseenter');\n        _this.submenu && _this.submenu.gotoSubIndex(_this.submenu.subMenuItems.length - 1);\n        prevDef = true;\n        break;\n      case keys.tab:\n        aria_utils.triggerEvent(event.currentTarget, 'mouseleave');\n        break;\n      case keys.enter:\n      case keys.space:\n        prevDef = true;\n        event.currentTarget.click();\n        break;\n    }\n    if (prevDef) {\n      event.preventDefault();\n    }\n  });\n};\n\n/* harmony default export */ var aria_menuitem = (MenuItem);\n// CONCATENATED MODULE: ./src/utils/menu/aria-menubar.js\n\n\nvar Menu = function Menu(domNode) {\n  this.domNode = domNode;\n  this.init();\n};\n\nMenu.prototype.init = function () {\n  var menuChildren = this.domNode.childNodes;\n  [].filter.call(menuChildren, function (child) {\n    return child.nodeType === 1;\n  }).forEach(function (child) {\n    new aria_menuitem(child); // eslint-disable-line\n  });\n};\n/* harmony default export */ var aria_menubar = (Menu);\n// EXTERNAL MODULE: external \"element-ui/lib/utils/dom\"\nvar dom_ = __webpack_require__(2);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/menu/src/menu.vue?vue&type=script&lang=js&\n\n\n\n\n\n\n/* harmony default export */ var menuvue_type_script_lang_js_ = ({\n  name: 'ElMenu',\n\n  render: function render(h) {\n    var component = h(\n      'ul',\n      {\n        attrs: {\n          role: 'menubar'\n        },\n        key: +this.collapse,\n        style: { backgroundColor: this.backgroundColor || '' },\n        'class': {\n          'el-menu--horizontal': this.mode === 'horizontal',\n          'el-menu--collapse': this.collapse,\n          \"el-menu\": true\n        }\n      },\n      [this.$slots.default]\n    );\n\n    if (this.collapseTransition) {\n      return h('el-menu-collapse-transition', [component]);\n    } else {\n      return component;\n    }\n  },\n\n\n  componentName: 'ElMenu',\n\n  mixins: [emitter_default.a, migrating_default.a],\n\n  provide: function provide() {\n    return {\n      rootMenu: this\n    };\n  },\n\n\n  components: {\n    'el-menu-collapse-transition': {\n      functional: true,\n      render: function render(createElement, context) {\n        var data = {\n          props: {\n            mode: 'out-in'\n          },\n          on: {\n            beforeEnter: function beforeEnter(el) {\n              el.style.opacity = 0.2;\n            },\n            enter: function enter(el) {\n              Object(dom_[\"addClass\"])(el, 'el-opacity-transition');\n              el.style.opacity = 1;\n            },\n            afterEnter: function afterEnter(el) {\n              Object(dom_[\"removeClass\"])(el, 'el-opacity-transition');\n              el.style.opacity = '';\n            },\n            beforeLeave: function beforeLeave(el) {\n              if (!el.dataset) el.dataset = {};\n\n              if (Object(dom_[\"hasClass\"])(el, 'el-menu--collapse')) {\n                Object(dom_[\"removeClass\"])(el, 'el-menu--collapse');\n                el.dataset.oldOverflow = el.style.overflow;\n                el.dataset.scrollWidth = el.clientWidth;\n                Object(dom_[\"addClass\"])(el, 'el-menu--collapse');\n              } else {\n                Object(dom_[\"addClass\"])(el, 'el-menu--collapse');\n                el.dataset.oldOverflow = el.style.overflow;\n                el.dataset.scrollWidth = el.clientWidth;\n                Object(dom_[\"removeClass\"])(el, 'el-menu--collapse');\n              }\n\n              el.style.width = el.scrollWidth + 'px';\n              el.style.overflow = 'hidden';\n            },\n            leave: function leave(el) {\n              Object(dom_[\"addClass\"])(el, 'horizontal-collapse-transition');\n              el.style.width = el.dataset.scrollWidth + 'px';\n            }\n          }\n        };\n        return createElement('transition', data, context.children);\n      }\n    }\n  },\n\n  props: {\n    mode: {\n      type: String,\n      default: 'vertical'\n    },\n    defaultActive: {\n      type: String,\n      default: ''\n    },\n    defaultOpeneds: Array,\n    uniqueOpened: Boolean,\n    router: Boolean,\n    menuTrigger: {\n      type: String,\n      default: 'hover'\n    },\n    collapse: Boolean,\n    backgroundColor: String,\n    textColor: String,\n    activeTextColor: String,\n    collapseTransition: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      activeIndex: this.defaultActive,\n      openedMenus: this.defaultOpeneds && !this.collapse ? this.defaultOpeneds.slice(0) : [],\n      items: {},\n      submenus: {}\n    };\n  },\n\n  computed: {\n    hoverBackground: function hoverBackground() {\n      return this.backgroundColor ? this.mixColor(this.backgroundColor, 0.2) : '';\n    },\n    isMenuPopup: function isMenuPopup() {\n      return this.mode === 'horizontal' || this.mode === 'vertical' && this.collapse;\n    }\n  },\n  watch: {\n    defaultActive: function defaultActive(value) {\n      if (!this.items[value]) {\n        this.activeIndex = null;\n      }\n      this.updateActiveIndex(value);\n    },\n    defaultOpeneds: function defaultOpeneds(value) {\n      if (!this.collapse) {\n        this.openedMenus = value;\n      }\n    },\n    collapse: function collapse(value) {\n      if (value) this.openedMenus = [];\n      this.broadcast('ElSubmenu', 'toggle-collapse', value);\n    }\n  },\n  methods: {\n    updateActiveIndex: function updateActiveIndex(val) {\n      var item = this.items[val] || this.items[this.activeIndex] || this.items[this.defaultActive];\n      if (item) {\n        this.activeIndex = item.index;\n        this.initOpenedMenu();\n      } else {\n        this.activeIndex = null;\n      }\n    },\n    getMigratingConfig: function getMigratingConfig() {\n      return {\n        props: {\n          'theme': 'theme is removed.'\n        }\n      };\n    },\n    getColorChannels: function getColorChannels(color) {\n      color = color.replace('#', '');\n      if (/^[0-9a-fA-F]{3}$/.test(color)) {\n        color = color.split('');\n        for (var i = 2; i >= 0; i--) {\n          color.splice(i, 0, color[i]);\n        }\n        color = color.join('');\n      }\n      if (/^[0-9a-fA-F]{6}$/.test(color)) {\n        return {\n          red: parseInt(color.slice(0, 2), 16),\n          green: parseInt(color.slice(2, 4), 16),\n          blue: parseInt(color.slice(4, 6), 16)\n        };\n      } else {\n        return {\n          red: 255,\n          green: 255,\n          blue: 255\n        };\n      }\n    },\n    mixColor: function mixColor(color, percent) {\n      var _getColorChannels = this.getColorChannels(color),\n          red = _getColorChannels.red,\n          green = _getColorChannels.green,\n          blue = _getColorChannels.blue;\n\n      if (percent > 0) {\n        // shade given color\n        red *= 1 - percent;\n        green *= 1 - percent;\n        blue *= 1 - percent;\n      } else {\n        // tint given color\n        red += (255 - red) * percent;\n        green += (255 - green) * percent;\n        blue += (255 - blue) * percent;\n      }\n      return 'rgb(' + Math.round(red) + ', ' + Math.round(green) + ', ' + Math.round(blue) + ')';\n    },\n    addItem: function addItem(item) {\n      this.$set(this.items, item.index, item);\n    },\n    removeItem: function removeItem(item) {\n      delete this.items[item.index];\n    },\n    addSubmenu: function addSubmenu(item) {\n      this.$set(this.submenus, item.index, item);\n    },\n    removeSubmenu: function removeSubmenu(item) {\n      delete this.submenus[item.index];\n    },\n    openMenu: function openMenu(index, indexPath) {\n      var openedMenus = this.openedMenus;\n      if (openedMenus.indexOf(index) !== -1) return;\n      // 将不在该菜单路径下的其余菜单收起\n      // collapse all menu that are not under current menu item\n      if (this.uniqueOpened) {\n        this.openedMenus = openedMenus.filter(function (index) {\n          return indexPath.indexOf(index) !== -1;\n        });\n      }\n      this.openedMenus.push(index);\n    },\n    closeMenu: function closeMenu(index) {\n      var i = this.openedMenus.indexOf(index);\n      if (i !== -1) {\n        this.openedMenus.splice(i, 1);\n      }\n    },\n    handleSubmenuClick: function handleSubmenuClick(submenu) {\n      var index = submenu.index,\n          indexPath = submenu.indexPath;\n\n      var isOpened = this.openedMenus.indexOf(index) !== -1;\n\n      if (isOpened) {\n        this.closeMenu(index);\n        this.$emit('close', index, indexPath);\n      } else {\n        this.openMenu(index, indexPath);\n        this.$emit('open', index, indexPath);\n      }\n    },\n    handleItemClick: function handleItemClick(item) {\n      var _this = this;\n\n      var index = item.index,\n          indexPath = item.indexPath;\n\n      var oldActiveIndex = this.activeIndex;\n      var hasIndex = item.index !== null;\n\n      if (hasIndex) {\n        this.activeIndex = item.index;\n      }\n\n      this.$emit('select', index, indexPath, item);\n\n      if (this.mode === 'horizontal' || this.collapse) {\n        this.openedMenus = [];\n      }\n\n      if (this.router && hasIndex) {\n        this.routeToItem(item, function (error) {\n          _this.activeIndex = oldActiveIndex;\n          if (error) {\n            // vue-router 3.1.0+ push/replace cause NavigationDuplicated error \n            // https://github.com/ElemeFE/element/issues/17044\n            if (error.name === 'NavigationDuplicated') return;\n            console.error(error);\n          }\n        });\n      }\n    },\n\n    // 初始化展开菜单\n    // initialize opened menu\n    initOpenedMenu: function initOpenedMenu() {\n      var _this2 = this;\n\n      var index = this.activeIndex;\n      var activeItem = this.items[index];\n      if (!activeItem || this.mode === 'horizontal' || this.collapse) return;\n\n      var indexPath = activeItem.indexPath;\n\n      // 展开该菜单项的路径上所有子菜单\n      // expand all submenus of the menu item\n      indexPath.forEach(function (index) {\n        var submenu = _this2.submenus[index];\n        submenu && _this2.openMenu(index, submenu.indexPath);\n      });\n    },\n    routeToItem: function routeToItem(item, onError) {\n      var route = item.route || item.index;\n      try {\n        this.$router.push(route, function () {}, onError);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    open: function open(index) {\n      var _this3 = this;\n\n      var indexPath = this.submenus[index.toString()].indexPath;\n\n      indexPath.forEach(function (i) {\n        return _this3.openMenu(i, indexPath);\n      });\n    },\n    close: function close(index) {\n      this.closeMenu(index);\n    }\n  },\n  mounted: function mounted() {\n    this.initOpenedMenu();\n    this.$on('item-click', this.handleItemClick);\n    this.$on('submenu-click', this.handleSubmenuClick);\n    if (this.mode === 'horizontal') {\n      new aria_menubar(this.$el); // eslint-disable-line\n    }\n    this.$watch('items', this.updateActiveIndex);\n  }\n});\n// CONCATENATED MODULE: ./packages/menu/src/menu.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_menuvue_type_script_lang_js_ = (menuvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./packages/menu/src/menu.vue\nvar menu_render, staticRenderFns\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer[\"a\" /* default */])(\n  src_menuvue_type_script_lang_js_,\n  menu_render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"packages/menu/src/menu.vue\"\n/* harmony default export */ var menu = (component.exports);\n// CONCATENATED MODULE: ./packages/menu/index.js\n\n\n/* istanbul ignore next */\nmenu.install = function (Vue) {\n  Vue.component(menu.name, menu);\n};\n\n/* harmony default export */ var packages_menu = __webpack_exports__[\"default\"] = (menu);\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/element-ui/lib/menu.js\n")}}]);