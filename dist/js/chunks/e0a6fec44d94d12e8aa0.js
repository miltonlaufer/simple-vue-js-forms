(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"./node_modules/element-ui/lib/color-picker.js":
/*!*****************************************************!*\
  !*** ./node_modules/element-ui/lib/color-picker.js ***!
  \*****************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "/dist/";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 54);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === \'function\'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = \'data-v-\' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn\'t\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 10:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/input */ "./node_modules/element-ui/lib/input.js");\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/utils/clickoutside */ "./node_modules/element-ui/lib/utils/clickoutside.js");\n\n/***/ }),\n\n/***/ 14:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/button */ "./node_modules/element-ui/lib/button.js");\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/mixins/emitter */ "./node_modules/element-ui/lib/mixins/emitter.js");\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/utils/vue-popper */ "./node_modules/element-ui/lib/utils/vue-popper.js");\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=template&id=55c8ade7&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      directives: [\n        {\n          name: "clickoutside",\n          rawName: "v-clickoutside",\n          value: _vm.hide,\n          expression: "hide"\n        }\n      ],\n      class: [\n        "el-color-picker",\n        _vm.colorDisabled ? "is-disabled" : "",\n        _vm.colorSize ? "el-color-picker--" + _vm.colorSize : ""\n      ]\n    },\n    [\n      _vm.colorDisabled\n        ? _c("div", { staticClass: "el-color-picker__mask" })\n        : _vm._e(),\n      _c(\n        "div",\n        {\n          staticClass: "el-color-picker__trigger",\n          on: { click: _vm.handleTrigger }\n        },\n        [\n          _c(\n            "span",\n            {\n              staticClass: "el-color-picker__color",\n              class: { "is-alpha": _vm.showAlpha }\n            },\n            [\n              _c("span", {\n                staticClass: "el-color-picker__color-inner",\n                style: {\n                  backgroundColor: _vm.displayedColor\n                }\n              }),\n              !_vm.value && !_vm.showPanelColor\n                ? _c("span", {\n                    staticClass: "el-color-picker__empty el-icon-close"\n                  })\n                : _vm._e()\n            ]\n          ),\n          _c("span", {\n            directives: [\n              {\n                name: "show",\n                rawName: "v-show",\n                value: _vm.value || _vm.showPanelColor,\n                expression: "value || showPanelColor"\n              }\n            ],\n            staticClass: "el-color-picker__icon el-icon-arrow-down"\n          })\n        ]\n      ),\n      _c("picker-dropdown", {\n        ref: "dropdown",\n        class: ["el-color-picker__panel", _vm.popperClass || ""],\n        attrs: {\n          color: _vm.color,\n          "show-alpha": _vm.showAlpha,\n          predefine: _vm.predefine\n        },\n        on: { pick: _vm.confirmValue, clear: _vm.clearValue },\n        model: {\n          value: _vm.showPicker,\n          callback: function($$v) {\n            _vm.showPicker = $$v\n          },\n          expression: "showPicker"\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=template&id=55c8ade7&\n\n// CONCATENATED MODULE: ./packages/color-picker/src/color.js\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar hsv2hsl = function hsv2hsl(hue, sat, val) {\n  return [hue, sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue) || 0, hue / 2];\n};\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nvar isOnePointZero = function isOnePointZero(n) {\n  return typeof n === \'string\' && n.indexOf(\'.\') !== -1 && parseFloat(n) === 1;\n};\n\nvar isPercentage = function isPercentage(n) {\n  return typeof n === \'string\' && n.indexOf(\'%\') !== -1;\n};\n\n// Take input from [0, n] and return it as [0, 1]\nvar bound01 = function bound01(value, max) {\n  if (isOnePointZero(value)) value = \'100%\';\n\n  var processPercent = isPercentage(value);\n  value = Math.min(max, Math.max(0, parseFloat(value)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    value = parseInt(value * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(value - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn\'t already\n  return value % max / parseFloat(max);\n};\n\nvar INT_HEX_MAP = { 10: \'A\', 11: \'B\', 12: \'C\', 13: \'D\', 14: \'E\', 15: \'F\' };\n\nvar toHex = function toHex(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b;\n\n  var hexOne = function hexOne(value) {\n    value = Math.min(Math.round(value), 255);\n    var high = Math.floor(value / 16);\n    var low = value % 16;\n    return \'\' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);\n  };\n\n  if (isNaN(r) || isNaN(g) || isNaN(b)) return \'\';\n\n  return \'#\' + hexOne(r) + hexOne(g) + hexOne(b);\n};\n\nvar HEX_INT_MAP = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };\n\nvar parseHexChannel = function parseHexChannel(hex) {\n  if (hex.length === 2) {\n    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);\n  }\n\n  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];\n};\n\nvar hsl2hsv = function hsl2hsv(hue, sat, light) {\n  sat = sat / 100;\n  light = light / 100;\n  var smin = sat;\n  var lmin = Math.max(light, 0.01);\n  var sv = void 0;\n  var v = void 0;\n\n  light *= 2;\n  sat *= light <= 1 ? light : 2 - light;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (light + sat) / 2;\n  sv = light === 0 ? 2 * smin / (lmin + smin) : 2 * sat / (light + sat);\n\n  return {\n    h: hue,\n    s: sv * 100,\n    v: v * 100\n  };\n};\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nvar rgb2hsv = function rgb2hsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = void 0,\n      s = void 0;\n  var v = max;\n\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h: h * 360, s: s * 100, v: v * 100 };\n};\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nvar hsv2rgb = function hsv2rgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n\n  var i = Math.floor(h);\n  var f = h - i;\n  var p = v * (1 - s);\n  var q = v * (1 - f * s);\n  var t = v * (1 - (1 - f) * s);\n  var mod = i % 6;\n  var r = [v, q, p, p, t, v][mod];\n  var g = [t, v, v, q, p, p][mod];\n  var b = [p, p, t, v, v, q][mod];\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n};\n\nvar Color = function () {\n  function Color(options) {\n    _classCallCheck(this, Color);\n\n    this._hue = 0;\n    this._saturation = 100;\n    this._value = 100;\n    this._alpha = 100;\n\n    this.enableAlpha = false;\n    this.format = \'hex\';\n    this.value = \'\';\n\n    options = options || {};\n\n    for (var option in options) {\n      if (options.hasOwnProperty(option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.doOnChange();\n  }\n\n  Color.prototype.set = function set(prop, value) {\n    if (arguments.length === 1 && (typeof prop === \'undefined\' ? \'undefined\' : _typeof(prop)) === \'object\') {\n      for (var p in prop) {\n        if (prop.hasOwnProperty(p)) {\n          this.set(p, prop[p]);\n        }\n      }\n\n      return;\n    }\n\n    this[\'_\' + prop] = value;\n    this.doOnChange();\n  };\n\n  Color.prototype.get = function get(prop) {\n    return this[\'_\' + prop];\n  };\n\n  Color.prototype.toRgb = function toRgb() {\n    return hsv2rgb(this._hue, this._saturation, this._value);\n  };\n\n  Color.prototype.fromString = function fromString(value) {\n    var _this = this;\n\n    if (!value) {\n      this._hue = 0;\n      this._saturation = 100;\n      this._value = 100;\n\n      this.doOnChange();\n      return;\n    }\n\n    var fromHSV = function fromHSV(h, s, v) {\n      _this._hue = Math.max(0, Math.min(360, h));\n      _this._saturation = Math.max(0, Math.min(100, s));\n      _this._value = Math.max(0, Math.min(100, v));\n\n      _this.doOnChange();\n    };\n\n    if (value.indexOf(\'hsl\') !== -1) {\n      var parts = value.replace(/hsla|hsl|\\(|\\)/gm, \'\').split(/\\s|,/g).filter(function (val) {\n        return val !== \'\';\n      }).map(function (val, index) {\n        return index > 2 ? parseFloat(val) : parseInt(val, 10);\n      });\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (parts.length >= 3) {\n        var _hsl2hsv = hsl2hsv(parts[0], parts[1], parts[2]),\n            h = _hsl2hsv.h,\n            s = _hsl2hsv.s,\n            v = _hsl2hsv.v;\n\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf(\'hsv\') !== -1) {\n      var _parts = value.replace(/hsva|hsv|\\(|\\)/gm, \'\').split(/\\s|,/g).filter(function (val) {\n        return val !== \'\';\n      }).map(function (val, index) {\n        return index > 2 ? parseFloat(val) : parseInt(val, 10);\n      });\n\n      if (_parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(_parts[3]) * 100);\n      } else if (_parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (_parts.length >= 3) {\n        fromHSV(_parts[0], _parts[1], _parts[2]);\n      }\n    } else if (value.indexOf(\'rgb\') !== -1) {\n      var _parts2 = value.replace(/rgba|rgb|\\(|\\)/gm, \'\').split(/\\s|,/g).filter(function (val) {\n        return val !== \'\';\n      }).map(function (val, index) {\n        return index > 2 ? parseFloat(val) : parseInt(val, 10);\n      });\n\n      if (_parts2.length === 4) {\n        this._alpha = Math.floor(parseFloat(_parts2[3]) * 100);\n      } else if (_parts2.length === 3) {\n        this._alpha = 100;\n      }\n      if (_parts2.length >= 3) {\n        var _rgb2hsv = rgb2hsv(_parts2[0], _parts2[1], _parts2[2]),\n            _h = _rgb2hsv.h,\n            _s = _rgb2hsv.s,\n            _v = _rgb2hsv.v;\n\n        fromHSV(_h, _s, _v);\n      }\n    } else if (value.indexOf(\'#\') !== -1) {\n      var hex = value.replace(\'#\', \'\').trim();\n      if (!/^(?:[0-9a-fA-F]{3}){1,2}|[0-9a-fA-F]{8}$/.test(hex)) return;\n      var r = void 0,\n          g = void 0,\n          b = void 0;\n\n      if (hex.length === 3) {\n        r = parseHexChannel(hex[0] + hex[0]);\n        g = parseHexChannel(hex[1] + hex[1]);\n        b = parseHexChannel(hex[2] + hex[2]);\n      } else if (hex.length === 6 || hex.length === 8) {\n        r = parseHexChannel(hex.substring(0, 2));\n        g = parseHexChannel(hex.substring(2, 4));\n        b = parseHexChannel(hex.substring(4, 6));\n      }\n\n      if (hex.length === 8) {\n        this._alpha = Math.floor(parseHexChannel(hex.substring(6)) / 255 * 100);\n      } else if (hex.length === 3 || hex.length === 6) {\n        this._alpha = 100;\n      }\n\n      var _rgb2hsv2 = rgb2hsv(r, g, b),\n          _h2 = _rgb2hsv2.h,\n          _s2 = _rgb2hsv2.s,\n          _v2 = _rgb2hsv2.v;\n\n      fromHSV(_h2, _s2, _v2);\n    }\n  };\n\n  Color.prototype.compare = function compare(color) {\n    return Math.abs(color._hue - this._hue) < 2 && Math.abs(color._saturation - this._saturation) < 1 && Math.abs(color._value - this._value) < 1 && Math.abs(color._alpha - this._alpha) < 1;\n  };\n\n  Color.prototype.doOnChange = function doOnChange() {\n    var _hue = this._hue,\n        _saturation = this._saturation,\n        _value = this._value,\n        _alpha = this._alpha,\n        format = this.format;\n\n\n    if (this.enableAlpha) {\n      switch (format) {\n        case \'hsl\':\n          var hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = \'hsla(\' + _hue + \', \' + Math.round(hsl[1] * 100) + \'%, \' + Math.round(hsl[2] * 100) + \'%, \' + _alpha / 100 + \')\';\n          break;\n        case \'hsv\':\n          this.value = \'hsva(\' + _hue + \', \' + Math.round(_saturation) + \'%, \' + Math.round(_value) + \'%, \' + _alpha / 100 + \')\';\n          break;\n        default:\n          var _hsv2rgb = hsv2rgb(_hue, _saturation, _value),\n              r = _hsv2rgb.r,\n              g = _hsv2rgb.g,\n              b = _hsv2rgb.b;\n\n          this.value = \'rgba(\' + r + \', \' + g + \', \' + b + \', \' + _alpha / 100 + \')\';\n      }\n    } else {\n      switch (format) {\n        case \'hsl\':\n          var _hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = \'hsl(\' + _hue + \', \' + Math.round(_hsl[1] * 100) + \'%, \' + Math.round(_hsl[2] * 100) + \'%)\';\n          break;\n        case \'hsv\':\n          this.value = \'hsv(\' + _hue + \', \' + Math.round(_saturation) + \'%, \' + Math.round(_value) + \'%)\';\n          break;\n        case \'rgb\':\n          var _hsv2rgb2 = hsv2rgb(_hue, _saturation, _value),\n              _r = _hsv2rgb2.r,\n              _g = _hsv2rgb2.g,\n              _b = _hsv2rgb2.b;\n\n          this.value = \'rgb(\' + _r + \', \' + _g + \', \' + _b + \')\';\n          break;\n        default:\n          this.value = toHex(hsv2rgb(_hue, _saturation, _value));\n      }\n    }\n  };\n\n  return Color;\n}();\n\n/* harmony default export */ var src_color = (Color);\n;\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=06601625&\nvar picker_dropdownvue_type_template_id_06601625_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "transition",\n    { attrs: { name: "el-zoom-in-top" }, on: { "after-leave": _vm.doDestroy } },\n    [\n      _c(\n        "div",\n        {\n          directives: [\n            {\n              name: "show",\n              rawName: "v-show",\n              value: _vm.showPopper,\n              expression: "showPopper"\n            }\n          ],\n          staticClass: "el-color-dropdown"\n        },\n        [\n          _c(\n            "div",\n            { staticClass: "el-color-dropdown__main-wrapper" },\n            [\n              _c("hue-slider", {\n                ref: "hue",\n                staticStyle: { float: "right" },\n                attrs: { color: _vm.color, vertical: "" }\n              }),\n              _c("sv-panel", { ref: "sl", attrs: { color: _vm.color } })\n            ],\n            1\n          ),\n          _vm.showAlpha\n            ? _c("alpha-slider", { ref: "alpha", attrs: { color: _vm.color } })\n            : _vm._e(),\n          _vm.predefine\n            ? _c("predefine", {\n                attrs: { color: _vm.color, colors: _vm.predefine }\n              })\n            : _vm._e(),\n          _c(\n            "div",\n            { staticClass: "el-color-dropdown__btns" },\n            [\n              _c(\n                "span",\n                { staticClass: "el-color-dropdown__value" },\n                [\n                  _c("el-input", {\n                    attrs: { "validate-event": false, size: "mini" },\n                    on: { blur: _vm.handleConfirm },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !("button" in $event) &&\n                          _vm._k(\n                            $event.keyCode,\n                            "enter",\n                            13,\n                            $event.key,\n                            "Enter"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.handleConfirm($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.customInput,\n                      callback: function($$v) {\n                        _vm.customInput = $$v\n                      },\n                      expression: "customInput"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                "el-button",\n                {\n                  staticClass: "el-color-dropdown__link-btn",\n                  attrs: { size: "mini", type: "text" },\n                  on: {\n                    click: function($event) {\n                      _vm.$emit("clear")\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    "\\n        " +\n                      _vm._s(_vm.t("el.colorpicker.clear")) +\n                      "\\n      "\n                  )\n                ]\n              ),\n              _c(\n                "el-button",\n                {\n                  staticClass: "el-color-dropdown__btn",\n                  attrs: { plain: "", size: "mini" },\n                  on: { click: _vm.confirmValue }\n                },\n                [\n                  _vm._v(\n                    "\\n        " +\n                      _vm._s(_vm.t("el.colorpicker.confirm")) +\n                      "\\n      "\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ]\n  )\n}\nvar picker_dropdownvue_type_template_id_06601625_staticRenderFns = []\npicker_dropdownvue_type_template_id_06601625_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=06601625&\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=d8583596&\nvar sv_panelvue_type_template_id_d8583596_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-color-svpanel",\n      style: {\n        backgroundColor: _vm.background\n      }\n    },\n    [\n      _c("div", { staticClass: "el-color-svpanel__white" }),\n      _c("div", { staticClass: "el-color-svpanel__black" }),\n      _c(\n        "div",\n        {\n          staticClass: "el-color-svpanel__cursor",\n          style: {\n            top: _vm.cursorTop + "px",\n            left: _vm.cursorLeft + "px"\n          }\n        },\n        [_c("div")]\n      )\n    ]\n  )\n}\nvar sv_panelvue_type_template_id_d8583596_staticRenderFns = []\nsv_panelvue_type_template_id_d8583596_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=d8583596&\n\n// EXTERNAL MODULE: external "vue"\nvar external_vue_ = __webpack_require__(7);\nvar external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);\n\n// CONCATENATED MODULE: ./packages/color-picker/src/draggable.js\n\nvar isDragging = false;\n\n/* harmony default export */ var draggable = (function (element, options) {\n  if (external_vue_default.a.prototype.$isServer) return;\n  var moveFn = function moveFn(event) {\n    if (options.drag) {\n      options.drag(event);\n    }\n  };\n  var upFn = function upFn(event) {\n    document.removeEventListener(\'mousemove\', moveFn);\n    document.removeEventListener(\'mouseup\', upFn);\n    document.onselectstart = null;\n    document.ondragstart = null;\n\n    isDragging = false;\n\n    if (options.end) {\n      options.end(event);\n    }\n  };\n  element.addEventListener(\'mousedown\', function (event) {\n    if (isDragging) return;\n    document.onselectstart = function () {\n      return false;\n    };\n    document.ondragstart = function () {\n      return false;\n    };\n\n    document.addEventListener(\'mousemove\', moveFn);\n    document.addEventListener(\'mouseup\', upFn);\n    isDragging = true;\n\n    if (options.start) {\n      options.start(event);\n    }\n  });\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var sv_panelvue_type_script_lang_js_ = ({\n  name: \'el-sl-panel\',\n\n  props: {\n    color: {\n      required: true\n    }\n  },\n\n  computed: {\n    colorValue: function colorValue() {\n      var hue = this.color.get(\'hue\');\n      var value = this.color.get(\'value\');\n      return { hue: hue, value: value };\n    }\n  },\n\n  watch: {\n    colorValue: function colorValue() {\n      this.update();\n    }\n  },\n\n  methods: {\n    update: function update() {\n      var saturation = this.color.get(\'saturation\');\n      var value = this.color.get(\'value\');\n\n      var el = this.$el;\n      var width = el.clientWidth,\n          height = el.clientHeight;\n\n\n      this.cursorLeft = saturation * width / 100;\n      this.cursorTop = (100 - value) * height / 100;\n\n      this.background = \'hsl(\' + this.color.get(\'hue\') + \', 100%, 50%)\';\n    },\n    handleDrag: function handleDrag(event) {\n      var el = this.$el;\n      var rect = el.getBoundingClientRect();\n\n      var left = event.clientX - rect.left;\n      var top = event.clientY - rect.top;\n      left = Math.max(0, left);\n      left = Math.min(left, rect.width);\n\n      top = Math.max(0, top);\n      top = Math.min(top, rect.height);\n\n      this.cursorLeft = left;\n      this.cursorTop = top;\n      this.color.set({\n        saturation: left / rect.width * 100,\n        value: 100 - top / rect.height * 100\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    draggable(this.$el, {\n      drag: function drag(event) {\n        _this.handleDrag(event);\n      },\n      end: function end(event) {\n        _this.handleDrag(event);\n      }\n    });\n\n    this.update();\n  },\n  data: function data() {\n    return {\n      cursorTop: 0,\n      cursorLeft: 0,\n      background: \'hsl(0, 100%, 50%)\'\n    };\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_sv_panelvue_type_script_lang_js_ = (sv_panelvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  components_sv_panelvue_type_script_lang_js_,\n  sv_panelvue_type_template_id_d8583596_render,\n  sv_panelvue_type_template_id_d8583596_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "packages/color-picker/src/components/sv-panel.vue"\n/* harmony default export */ var sv_panel = (component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=5cdc43b1&\nvar hue_slidervue_type_template_id_5cdc43b1_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-color-hue-slider",\n      class: { "is-vertical": _vm.vertical }\n    },\n    [\n      _c("div", {\n        ref: "bar",\n        staticClass: "el-color-hue-slider__bar",\n        on: { click: _vm.handleClick }\n      }),\n      _c("div", {\n        ref: "thumb",\n        staticClass: "el-color-hue-slider__thumb",\n        style: {\n          left: _vm.thumbLeft + "px",\n          top: _vm.thumbTop + "px"\n        }\n      })\n    ]\n  )\n}\nvar hue_slidervue_type_template_id_5cdc43b1_staticRenderFns = []\nhue_slidervue_type_template_id_5cdc43b1_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=5cdc43b1&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var hue_slidervue_type_script_lang_js_ = ({\n  name: \'el-color-hue-slider\',\n\n  props: {\n    color: {\n      required: true\n    },\n\n    vertical: Boolean\n  },\n\n  data: function data() {\n    return {\n      thumbLeft: 0,\n      thumbTop: 0\n    };\n  },\n\n\n  computed: {\n    hueValue: function hueValue() {\n      var hue = this.color.get(\'hue\');\n      return hue;\n    }\n  },\n\n  watch: {\n    hueValue: function hueValue() {\n      this.update();\n    }\n  },\n\n  methods: {\n    handleClick: function handleClick(event) {\n      var thumb = this.$refs.thumb;\n      var target = event.target;\n\n      if (target !== thumb) {\n        this.handleDrag(event);\n      }\n    },\n    handleDrag: function handleDrag(event) {\n      var rect = this.$el.getBoundingClientRect();\n      var thumb = this.$refs.thumb;\n\n      var hue = void 0;\n\n      if (!this.vertical) {\n        var left = event.clientX - rect.left;\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n        left = Math.max(thumb.offsetWidth / 2, left);\n\n        hue = Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 360);\n      } else {\n        var top = event.clientY - rect.top;\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n        top = Math.max(thumb.offsetHeight / 2, top);\n\n        hue = Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 360);\n      }\n\n      this.color.set(\'hue\', hue);\n    },\n    getThumbLeft: function getThumbLeft() {\n      if (this.vertical) return 0;\n      var el = this.$el;\n      var hue = this.color.get(\'hue\');\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(hue * (el.offsetWidth - thumb.offsetWidth / 2) / 360);\n    },\n    getThumbTop: function getThumbTop() {\n      if (!this.vertical) return 0;\n      var el = this.$el;\n      var hue = this.color.get(\'hue\');\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(hue * (el.offsetHeight - thumb.offsetHeight / 2) / 360);\n    },\n    update: function update() {\n      this.thumbLeft = this.getThumbLeft();\n      this.thumbTop = this.getThumbTop();\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    var _$refs = this.$refs,\n        bar = _$refs.bar,\n        thumb = _$refs.thumb;\n\n\n    var dragConfig = {\n      drag: function drag(event) {\n        _this.handleDrag(event);\n      },\n      end: function end(event) {\n        _this.handleDrag(event);\n      }\n    };\n\n    draggable(bar, dragConfig);\n    draggable(thumb, dragConfig);\n    this.update();\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_hue_slidervue_type_script_lang_js_ = (hue_slidervue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue\n\n\n\n\n\n/* normalize component */\n\nvar hue_slider_component = Object(componentNormalizer["a" /* default */])(\n  components_hue_slidervue_type_script_lang_js_,\n  hue_slidervue_type_template_id_5cdc43b1_render,\n  hue_slidervue_type_template_id_5cdc43b1_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var hue_slider_api; }\nhue_slider_component.options.__file = "packages/color-picker/src/components/hue-slider.vue"\n/* harmony default export */ var hue_slider = (hue_slider_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=068c66cb&\nvar alpha_slidervue_type_template_id_068c66cb_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-color-alpha-slider",\n      class: { "is-vertical": _vm.vertical }\n    },\n    [\n      _c("div", {\n        ref: "bar",\n        staticClass: "el-color-alpha-slider__bar",\n        style: {\n          background: _vm.background\n        },\n        on: { click: _vm.handleClick }\n      }),\n      _c("div", {\n        ref: "thumb",\n        staticClass: "el-color-alpha-slider__thumb",\n        style: {\n          left: _vm.thumbLeft + "px",\n          top: _vm.thumbTop + "px"\n        }\n      })\n    ]\n  )\n}\nvar alpha_slidervue_type_template_id_068c66cb_staticRenderFns = []\nalpha_slidervue_type_template_id_068c66cb_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=068c66cb&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var alpha_slidervue_type_script_lang_js_ = ({\n  name: \'el-color-alpha-slider\',\n\n  props: {\n    color: {\n      required: true\n    },\n    vertical: Boolean\n  },\n\n  watch: {\n    \'color._alpha\': function color_alpha() {\n      this.update();\n    },\n    \'color.value\': function colorValue() {\n      this.update();\n    }\n  },\n\n  methods: {\n    handleClick: function handleClick(event) {\n      var thumb = this.$refs.thumb;\n      var target = event.target;\n\n      if (target !== thumb) {\n        this.handleDrag(event);\n      }\n    },\n    handleDrag: function handleDrag(event) {\n      var rect = this.$el.getBoundingClientRect();\n      var thumb = this.$refs.thumb;\n\n\n      if (!this.vertical) {\n        var left = event.clientX - rect.left;\n        left = Math.max(thumb.offsetWidth / 2, left);\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n\n        this.color.set(\'alpha\', Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));\n      } else {\n        var top = event.clientY - rect.top;\n        top = Math.max(thumb.offsetHeight / 2, top);\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n\n        this.color.set(\'alpha\', Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 100));\n      }\n    },\n    getThumbLeft: function getThumbLeft() {\n      if (this.vertical) return 0;\n      var el = this.$el;\n      var alpha = this.color._alpha;\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(alpha * (el.offsetWidth - thumb.offsetWidth / 2) / 100);\n    },\n    getThumbTop: function getThumbTop() {\n      if (!this.vertical) return 0;\n      var el = this.$el;\n      var alpha = this.color._alpha;\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(alpha * (el.offsetHeight - thumb.offsetHeight / 2) / 100);\n    },\n    getBackground: function getBackground() {\n      if (this.color && this.color.value) {\n        var _color$toRgb = this.color.toRgb(),\n            r = _color$toRgb.r,\n            g = _color$toRgb.g,\n            b = _color$toRgb.b;\n\n        return \'linear-gradient(to right, rgba(\' + r + \', \' + g + \', \' + b + \', 0) 0%, rgba(\' + r + \', \' + g + \', \' + b + \', 1) 100%)\';\n      }\n      return null;\n    },\n    update: function update() {\n      this.thumbLeft = this.getThumbLeft();\n      this.thumbTop = this.getThumbTop();\n      this.background = this.getBackground();\n    }\n  },\n\n  data: function data() {\n    return {\n      thumbLeft: 0,\n      thumbTop: 0,\n      background: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var _$refs = this.$refs,\n        bar = _$refs.bar,\n        thumb = _$refs.thumb;\n\n\n    var dragConfig = {\n      drag: function drag(event) {\n        _this.handleDrag(event);\n      },\n      end: function end(event) {\n        _this.handleDrag(event);\n      }\n    };\n\n    draggable(bar, dragConfig);\n    draggable(thumb, dragConfig);\n    this.update();\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_alpha_slidervue_type_script_lang_js_ = (alpha_slidervue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue\n\n\n\n\n\n/* normalize component */\n\nvar alpha_slider_component = Object(componentNormalizer["a" /* default */])(\n  components_alpha_slidervue_type_script_lang_js_,\n  alpha_slidervue_type_template_id_068c66cb_render,\n  alpha_slidervue_type_template_id_068c66cb_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var alpha_slider_api; }\nalpha_slider_component.options.__file = "packages/color-picker/src/components/alpha-slider.vue"\n/* harmony default export */ var alpha_slider = (alpha_slider_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=template&id=06e03093&\nvar predefinevue_type_template_id_06e03093_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "el-color-predefine" }, [\n    _c(\n      "div",\n      { staticClass: "el-color-predefine__colors" },\n      _vm._l(_vm.rgbaColors, function(item, index) {\n        return _c(\n          "div",\n          {\n            key: _vm.colors[index],\n            staticClass: "el-color-predefine__color-selector",\n            class: { selected: item.selected, "is-alpha": item._alpha < 100 },\n            on: {\n              click: function($event) {\n                _vm.handleSelect(index)\n              }\n            }\n          },\n          [_c("div", { style: { "background-color": item.value } })]\n        )\n      }),\n      0\n    )\n  ])\n}\nvar predefinevue_type_template_id_06e03093_staticRenderFns = []\npredefinevue_type_template_id_06e03093_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=template&id=06e03093&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var predefinevue_type_script_lang_js_ = ({\n  props: {\n    colors: { type: Array, required: true },\n    color: { required: true }\n  },\n  data: function data() {\n    return {\n      rgbaColors: this.parseColors(this.colors, this.color)\n    };\n  },\n\n  methods: {\n    handleSelect: function handleSelect(index) {\n      this.color.fromString(this.colors[index]);\n    },\n    parseColors: function parseColors(colors, color) {\n      return colors.map(function (value) {\n        var c = new src_color();\n        c.enableAlpha = true;\n        c.format = \'rgba\';\n        c.fromString(value);\n        c.selected = c.value === color.value;\n        return c;\n      });\n    }\n  },\n  watch: {\n    \'$parent.currentColor\': function $parentCurrentColor(val) {\n      var color = new src_color();\n      color.fromString(val);\n\n      this.rgbaColors.forEach(function (item) {\n        item.selected = color.compare(item);\n      });\n    },\n    colors: function colors(newVal) {\n      this.rgbaColors = this.parseColors(newVal, this.color);\n    },\n    color: function color(newVal) {\n      this.rgbaColors = this.parseColors(this.colors, newVal);\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_predefinevue_type_script_lang_js_ = (predefinevue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue\n\n\n\n\n\n/* normalize component */\n\nvar predefine_component = Object(componentNormalizer["a" /* default */])(\n  components_predefinevue_type_script_lang_js_,\n  predefinevue_type_template_id_06e03093_render,\n  predefinevue_type_template_id_06e03093_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var predefine_api; }\npredefine_component.options.__file = "packages/color-picker/src/components/predefine.vue"\n/* harmony default export */ var predefine = (predefine_component.exports);\n// EXTERNAL MODULE: external "element-ui/lib/utils/vue-popper"\nvar vue_popper_ = __webpack_require__(5);\nvar vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);\n\n// EXTERNAL MODULE: external "element-ui/lib/mixins/locale"\nvar locale_ = __webpack_require__(6);\nvar locale_default = /*#__PURE__*/__webpack_require__.n(locale_);\n\n// EXTERNAL MODULE: external "element-ui/lib/input"\nvar input_ = __webpack_require__(10);\nvar input_default = /*#__PURE__*/__webpack_require__.n(input_);\n\n// EXTERNAL MODULE: external "element-ui/lib/button"\nvar button_ = __webpack_require__(14);\nvar button_default = /*#__PURE__*/__webpack_require__.n(button_);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var picker_dropdownvue_type_script_lang_js_ = ({\n  name: \'el-color-picker-dropdown\',\n\n  mixins: [vue_popper_default.a, locale_default.a],\n\n  components: {\n    SvPanel: sv_panel,\n    HueSlider: hue_slider,\n    AlphaSlider: alpha_slider,\n    ElInput: input_default.a,\n    ElButton: button_default.a,\n    Predefine: predefine\n  },\n\n  props: {\n    color: {\n      required: true\n    },\n    showAlpha: Boolean,\n    predefine: Array\n  },\n\n  data: function data() {\n    return {\n      customInput: \'\'\n    };\n  },\n\n\n  computed: {\n    currentColor: function currentColor() {\n      var parent = this.$parent;\n      return !parent.value && !parent.showPanelColor ? \'\' : parent.color.value;\n    }\n  },\n\n  methods: {\n    confirmValue: function confirmValue() {\n      this.$emit(\'pick\');\n    },\n    handleConfirm: function handleConfirm() {\n      this.color.fromString(this.customInput);\n    }\n  },\n\n  mounted: function mounted() {\n    this.$parent.popperElm = this.popperElm = this.$el;\n    this.referenceElm = this.$parent.$el;\n  },\n\n\n  watch: {\n    showPopper: function showPopper(val) {\n      var _this = this;\n\n      if (val === true) {\n        this.$nextTick(function () {\n          var _$refs = _this.$refs,\n              sl = _$refs.sl,\n              hue = _$refs.hue,\n              alpha = _$refs.alpha;\n\n          sl && sl.update();\n          hue && hue.update();\n          alpha && alpha.update();\n        });\n      }\n    },\n\n\n    currentColor: {\n      immediate: true,\n      handler: function handler(val) {\n        this.customInput = val;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_picker_dropdownvue_type_script_lang_js_ = (picker_dropdownvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue\n\n\n\n\n\n/* normalize component */\n\nvar picker_dropdown_component = Object(componentNormalizer["a" /* default */])(\n  components_picker_dropdownvue_type_script_lang_js_,\n  picker_dropdownvue_type_template_id_06601625_render,\n  picker_dropdownvue_type_template_id_06601625_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var picker_dropdown_api; }\npicker_dropdown_component.options.__file = "packages/color-picker/src/components/picker-dropdown.vue"\n/* harmony default export */ var picker_dropdown = (picker_dropdown_component.exports);\n// EXTERNAL MODULE: external "element-ui/lib/utils/clickoutside"\nvar clickoutside_ = __webpack_require__(12);\nvar clickoutside_default = /*#__PURE__*/__webpack_require__.n(clickoutside_);\n\n// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"\nvar emitter_ = __webpack_require__(4);\nvar emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var mainvue_type_script_lang_js_ = ({\n  name: \'ElColorPicker\',\n\n  mixins: [emitter_default.a],\n\n  props: {\n    value: String,\n    showAlpha: Boolean,\n    colorFormat: String,\n    disabled: Boolean,\n    size: String,\n    popperClass: String,\n    predefine: Array\n  },\n\n  inject: {\n    elForm: {\n      default: \'\'\n    },\n    elFormItem: {\n      default: \'\'\n    }\n  },\n\n  directives: { Clickoutside: clickoutside_default.a },\n\n  computed: {\n    displayedColor: function displayedColor() {\n      if (!this.value && !this.showPanelColor) {\n        return \'transparent\';\n      }\n\n      return this.displayedRgb(this.color, this.showAlpha);\n    },\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    colorSize: function colorSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    },\n    colorDisabled: function colorDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    }\n  },\n\n  watch: {\n    value: function value(val) {\n      if (!val) {\n        this.showPanelColor = false;\n      } else if (val && val !== this.color.value) {\n        this.color.fromString(val);\n      }\n    },\n\n    color: {\n      deep: true,\n      handler: function handler() {\n        this.showPanelColor = true;\n      }\n    },\n    displayedColor: function displayedColor(val) {\n      if (!this.showPicker) return;\n      var currentValueColor = new src_color({\n        enableAlpha: this.showAlpha,\n        format: this.colorFormat\n      });\n      currentValueColor.fromString(this.value);\n\n      var currentValueColorRgb = this.displayedRgb(currentValueColor, this.showAlpha);\n      if (val !== currentValueColorRgb) {\n        this.$emit(\'active-change\', val);\n      }\n    }\n  },\n\n  methods: {\n    handleTrigger: function handleTrigger() {\n      if (this.colorDisabled) return;\n      this.showPicker = !this.showPicker;\n    },\n    confirmValue: function confirmValue() {\n      var value = this.color.value;\n      this.$emit(\'input\', value);\n      this.$emit(\'change\', value);\n      this.dispatch(\'ElFormItem\', \'el.form.change\', value);\n      this.showPicker = false;\n    },\n    clearValue: function clearValue() {\n      this.$emit(\'input\', null);\n      this.$emit(\'change\', null);\n      if (this.value !== null) {\n        this.dispatch(\'ElFormItem\', \'el.form.change\', null);\n      }\n      this.showPanelColor = false;\n      this.showPicker = false;\n      this.resetColor();\n    },\n    hide: function hide() {\n      this.showPicker = false;\n      this.resetColor();\n    },\n    resetColor: function resetColor() {\n      var _this = this;\n\n      this.$nextTick(function (_) {\n        if (_this.value) {\n          _this.color.fromString(_this.value);\n        } else {\n          _this.showPanelColor = false;\n        }\n      });\n    },\n    displayedRgb: function displayedRgb(color, showAlpha) {\n      if (!(color instanceof src_color)) {\n        throw Error(\'color should be instance of Color Class\');\n      }\n\n      var _color$toRgb = color.toRgb(),\n          r = _color$toRgb.r,\n          g = _color$toRgb.g,\n          b = _color$toRgb.b;\n\n      return showAlpha ? \'rgba(\' + r + \', \' + g + \', \' + b + \', \' + color.get(\'alpha\') / 100 + \')\' : \'rgb(\' + r + \', \' + g + \', \' + b + \')\';\n    }\n  },\n\n  mounted: function mounted() {\n    var value = this.value;\n    if (value) {\n      this.color.fromString(value);\n    }\n    this.popperElm = this.$refs.dropdown.$el;\n  },\n  data: function data() {\n    var color = new src_color({\n      enableAlpha: this.showAlpha,\n      format: this.colorFormat\n    });\n\n    return {\n      color: color,\n      showPicker: false,\n      showPanelColor: false\n    };\n  },\n\n\n  components: {\n    PickerDropdown: picker_dropdown\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/main.vue\n\n\n\n\n\n/* normalize component */\n\nvar main_component = Object(componentNormalizer["a" /* default */])(\n  src_mainvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var main_api; }\nmain_component.options.__file = "packages/color-picker/src/main.vue"\n/* harmony default export */ var main = (main_component.exports);\n// CONCATENATED MODULE: ./packages/color-picker/index.js\n\n\n/* istanbul ignore next */\nmain.install = function (Vue) {\n  Vue.component(main.name, main);\n};\n\n/* harmony default export */ var color_picker = __webpack_exports__["default"] = (main);\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! element-ui/lib/mixins/locale */ "./node_modules/element-ui/lib/mixins/locale.js");\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.esm.js");\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/element-ui/lib/color-picker.js\n')}}]);