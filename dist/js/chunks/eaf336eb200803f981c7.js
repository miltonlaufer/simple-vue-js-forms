(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{198:function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "/dist/";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 62);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === \'function\'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = \'data-v-\' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn\'t\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 29:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(80);\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(7);\n\n/***/ }),\n\n/***/ 49:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(90);\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/main.vue?vue&type=template&id=32708644&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-slider",\n      class: {\n        "is-vertical": _vm.vertical,\n        "el-slider--with-input": _vm.showInput\n      },\n      attrs: {\n        role: "slider",\n        "aria-valuemin": _vm.min,\n        "aria-valuemax": _vm.max,\n        "aria-orientation": _vm.vertical ? "vertical" : "horizontal",\n        "aria-disabled": _vm.sliderDisabled\n      }\n    },\n    [\n      _vm.showInput && !_vm.range\n        ? _c("el-input-number", {\n            ref: "input",\n            staticClass: "el-slider__input",\n            attrs: {\n              step: _vm.step,\n              disabled: _vm.sliderDisabled,\n              controls: _vm.showInputControls,\n              min: _vm.min,\n              max: _vm.max,\n              debounce: _vm.debounce,\n              size: _vm.inputSize\n            },\n            on: { change: _vm.emitChange },\n            model: {\n              value: _vm.firstValue,\n              callback: function($$v) {\n                _vm.firstValue = $$v\n              },\n              expression: "firstValue"\n            }\n          })\n        : _vm._e(),\n      _c(\n        "div",\n        {\n          ref: "slider",\n          staticClass: "el-slider__runway",\n          class: { "show-input": _vm.showInput, disabled: _vm.sliderDisabled },\n          style: _vm.runwayStyle,\n          on: { click: _vm.onSliderClick }\n        },\n        [\n          _c("div", { staticClass: "el-slider__bar", style: _vm.barStyle }),\n          _c("slider-button", {\n            ref: "button1",\n            attrs: {\n              vertical: _vm.vertical,\n              "tooltip-class": _vm.tooltipClass\n            },\n            model: {\n              value: _vm.firstValue,\n              callback: function($$v) {\n                _vm.firstValue = $$v\n              },\n              expression: "firstValue"\n            }\n          }),\n          _vm.range\n            ? _c("slider-button", {\n                ref: "button2",\n                attrs: {\n                  vertical: _vm.vertical,\n                  "tooltip-class": _vm.tooltipClass\n                },\n                model: {\n                  value: _vm.secondValue,\n                  callback: function($$v) {\n                    _vm.secondValue = $$v\n                  },\n                  expression: "secondValue"\n                }\n              })\n            : _vm._e(),\n          _vm._l(_vm.stops, function(item, key) {\n            return _vm.showStops\n              ? _c("div", {\n                  key: key,\n                  staticClass: "el-slider__stop",\n                  style: _vm.getStopStyle(item)\n                })\n              : _vm._e()\n          }),\n          _vm.markList.length > 0\n            ? [\n                _c(\n                  "div",\n                  _vm._l(_vm.markList, function(item, key) {\n                    return _c("div", {\n                      key: key,\n                      staticClass: "el-slider__stop el-slider__marks-stop",\n                      style: _vm.getStopStyle(item.position)\n                    })\n                  }),\n                  0\n                ),\n                _c(\n                  "div",\n                  { staticClass: "el-slider__marks" },\n                  _vm._l(_vm.markList, function(item, key) {\n                    return _c("slider-marker", {\n                      key: key,\n                      style: _vm.getStopStyle(item.position),\n                      attrs: { mark: item.mark }\n                    })\n                  }),\n                  1\n                )\n              ]\n            : _vm._e()\n        ],\n        2\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/slider/src/main.vue?vue&type=template&id=32708644&\n\n// EXTERNAL MODULE: external "element-ui/lib/input-number"\nvar input_number_ = __webpack_require__(49);\nvar input_number_default = /*#__PURE__*/__webpack_require__.n(input_number_);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/button.vue?vue&type=template&id=e72d2ad2&\nvar buttonvue_type_template_id_e72d2ad2_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      ref: "button",\n      staticClass: "el-slider__button-wrapper",\n      class: { hover: _vm.hovering, dragging: _vm.dragging },\n      style: _vm.wrapperStyle,\n      attrs: { tabindex: "0" },\n      on: {\n        mouseenter: _vm.handleMouseEnter,\n        mouseleave: _vm.handleMouseLeave,\n        mousedown: _vm.onButtonDown,\n        touchstart: _vm.onButtonDown,\n        focus: _vm.handleMouseEnter,\n        blur: _vm.handleMouseLeave,\n        keydown: [\n          function($event) {\n            if (\n              !("button" in $event) &&\n              _vm._k($event.keyCode, "left", 37, $event.key, [\n                "Left",\n                "ArrowLeft"\n              ])\n            ) {\n              return null\n            }\n            if ("button" in $event && $event.button !== 0) {\n              return null\n            }\n            return _vm.onLeftKeyDown($event)\n          },\n          function($event) {\n            if (\n              !("button" in $event) &&\n              _vm._k($event.keyCode, "right", 39, $event.key, [\n                "Right",\n                "ArrowRight"\n              ])\n            ) {\n              return null\n            }\n            if ("button" in $event && $event.button !== 2) {\n              return null\n            }\n            return _vm.onRightKeyDown($event)\n          },\n          function($event) {\n            if (\n              !("button" in $event) &&\n              _vm._k($event.keyCode, "down", 40, $event.key, [\n                "Down",\n                "ArrowDown"\n              ])\n            ) {\n              return null\n            }\n            $event.preventDefault()\n            return _vm.onLeftKeyDown($event)\n          },\n          function($event) {\n            if (\n              !("button" in $event) &&\n              _vm._k($event.keyCode, "up", 38, $event.key, ["Up", "ArrowUp"])\n            ) {\n              return null\n            }\n            $event.preventDefault()\n            return _vm.onRightKeyDown($event)\n          }\n        ]\n      }\n    },\n    [\n      _c(\n        "el-tooltip",\n        {\n          ref: "tooltip",\n          attrs: {\n            placement: "top",\n            "popper-class": _vm.tooltipClass,\n            disabled: !_vm.showTooltip\n          }\n        },\n        [\n          _c("span", { attrs: { slot: "content" }, slot: "content" }, [\n            _vm._v(_vm._s(_vm.formatValue))\n          ]),\n          _c("div", {\n            staticClass: "el-slider__button",\n            class: { hover: _vm.hovering, dragging: _vm.dragging }\n          })\n        ]\n      )\n    ],\n    1\n  )\n}\nvar buttonvue_type_template_id_e72d2ad2_staticRenderFns = []\nbuttonvue_type_template_id_e72d2ad2_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/slider/src/button.vue?vue&type=template&id=e72d2ad2&\n\n// EXTERNAL MODULE: external "element-ui/lib/tooltip"\nvar tooltip_ = __webpack_require__(29);\nvar tooltip_default = /*#__PURE__*/__webpack_require__.n(tooltip_);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/button.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var buttonvue_type_script_lang_js_ = ({\n  name: \'ElSliderButton\',\n\n  components: {\n    ElTooltip: tooltip_default.a\n  },\n\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    tooltipClass: String\n  },\n\n  data: function data() {\n    return {\n      hovering: false,\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      currentX: 0,\n      startY: 0,\n      currentY: 0,\n      startPosition: 0,\n      newPosition: null,\n      oldValue: this.value\n    };\n  },\n\n\n  computed: {\n    disabled: function disabled() {\n      return this.$parent.sliderDisabled;\n    },\n    max: function max() {\n      return this.$parent.max;\n    },\n    min: function min() {\n      return this.$parent.min;\n    },\n    step: function step() {\n      return this.$parent.step;\n    },\n    showTooltip: function showTooltip() {\n      return this.$parent.showTooltip;\n    },\n    precision: function precision() {\n      return this.$parent.precision;\n    },\n    currentPosition: function currentPosition() {\n      return (this.value - this.min) / (this.max - this.min) * 100 + \'%\';\n    },\n    enableFormat: function enableFormat() {\n      return this.$parent.formatTooltip instanceof Function;\n    },\n    formatValue: function formatValue() {\n      return this.enableFormat && this.$parent.formatTooltip(this.value) || this.value;\n    },\n    wrapperStyle: function wrapperStyle() {\n      return this.vertical ? { bottom: this.currentPosition } : { left: this.currentPosition };\n    }\n  },\n\n  watch: {\n    dragging: function dragging(val) {\n      this.$parent.dragging = val;\n    }\n  },\n\n  methods: {\n    displayTooltip: function displayTooltip() {\n      this.$refs.tooltip && (this.$refs.tooltip.showPopper = true);\n    },\n    hideTooltip: function hideTooltip() {\n      this.$refs.tooltip && (this.$refs.tooltip.showPopper = false);\n    },\n    handleMouseEnter: function handleMouseEnter() {\n      this.hovering = true;\n      this.displayTooltip();\n    },\n    handleMouseLeave: function handleMouseLeave() {\n      this.hovering = false;\n      this.hideTooltip();\n    },\n    onButtonDown: function onButtonDown(event) {\n      if (this.disabled) return;\n      event.preventDefault();\n      this.onDragStart(event);\n      window.addEventListener(\'mousemove\', this.onDragging);\n      window.addEventListener(\'touchmove\', this.onDragging);\n      window.addEventListener(\'mouseup\', this.onDragEnd);\n      window.addEventListener(\'touchend\', this.onDragEnd);\n      window.addEventListener(\'contextmenu\', this.onDragEnd);\n    },\n    onLeftKeyDown: function onLeftKeyDown() {\n      if (this.disabled) return;\n      this.newPosition = parseFloat(this.currentPosition) - this.step / (this.max - this.min) * 100;\n      this.setPosition(this.newPosition);\n      this.$parent.emitChange();\n    },\n    onRightKeyDown: function onRightKeyDown() {\n      if (this.disabled) return;\n      this.newPosition = parseFloat(this.currentPosition) + this.step / (this.max - this.min) * 100;\n      this.setPosition(this.newPosition);\n      this.$parent.emitChange();\n    },\n    onDragStart: function onDragStart(event) {\n      this.dragging = true;\n      this.isClick = true;\n      if (event.type === \'touchstart\') {\n        event.clientY = event.touches[0].clientY;\n        event.clientX = event.touches[0].clientX;\n      }\n      if (this.vertical) {\n        this.startY = event.clientY;\n      } else {\n        this.startX = event.clientX;\n      }\n      this.startPosition = parseFloat(this.currentPosition);\n      this.newPosition = this.startPosition;\n    },\n    onDragging: function onDragging(event) {\n      if (this.dragging) {\n        this.isClick = false;\n        this.displayTooltip();\n        this.$parent.resetSize();\n        var diff = 0;\n        if (event.type === \'touchmove\') {\n          event.clientY = event.touches[0].clientY;\n          event.clientX = event.touches[0].clientX;\n        }\n        if (this.vertical) {\n          this.currentY = event.clientY;\n          diff = (this.startY - this.currentY) / this.$parent.sliderSize * 100;\n        } else {\n          this.currentX = event.clientX;\n          diff = (this.currentX - this.startX) / this.$parent.sliderSize * 100;\n        }\n        this.newPosition = this.startPosition + diff;\n        this.setPosition(this.newPosition);\n      }\n    },\n    onDragEnd: function onDragEnd() {\n      var _this = this;\n\n      if (this.dragging) {\n        /*\n         * 防止在 mouseup 后立即触发 click，导致滑块有几率产生一小段位移\n         * 不使用 preventDefault 是因为 mouseup 和 click 没有注册在同一个 DOM 上\n         */\n        setTimeout(function () {\n          _this.dragging = false;\n          _this.hideTooltip();\n          if (!_this.isClick) {\n            _this.setPosition(_this.newPosition);\n            _this.$parent.emitChange();\n          }\n        }, 0);\n        window.removeEventListener(\'mousemove\', this.onDragging);\n        window.removeEventListener(\'touchmove\', this.onDragging);\n        window.removeEventListener(\'mouseup\', this.onDragEnd);\n        window.removeEventListener(\'touchend\', this.onDragEnd);\n        window.removeEventListener(\'contextmenu\', this.onDragEnd);\n      }\n    },\n    setPosition: function setPosition(newPosition) {\n      var _this2 = this;\n\n      if (newPosition === null || isNaN(newPosition)) return;\n      if (newPosition < 0) {\n        newPosition = 0;\n      } else if (newPosition > 100) {\n        newPosition = 100;\n      }\n      var lengthPerStep = 100 / ((this.max - this.min) / this.step);\n      var steps = Math.round(newPosition / lengthPerStep);\n      var value = steps * lengthPerStep * (this.max - this.min) * 0.01 + this.min;\n      value = parseFloat(value.toFixed(this.precision));\n      this.$emit(\'input\', value);\n      this.$nextTick(function () {\n        _this2.displayTooltip();\n        _this2.$refs.tooltip && _this2.$refs.tooltip.updatePopper();\n      });\n      if (!this.dragging && this.value !== this.oldValue) {\n        this.oldValue = this.value;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/slider/src/button.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_buttonvue_type_script_lang_js_ = (buttonvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./packages/slider/src/button.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  src_buttonvue_type_script_lang_js_,\n  buttonvue_type_template_id_e72d2ad2_render,\n  buttonvue_type_template_id_e72d2ad2_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "packages/slider/src/button.vue"\n/* harmony default export */ var src_button = (component.exports);\n// CONCATENATED MODULE: ./packages/slider/src/marker.js\n/* harmony default export */ var marker = ({\n  name: \'ElMarker\',\n\n  props: {\n    mark: {\n      type: [String, Object]\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    var label = typeof this.mark === \'string\' ? this.mark : this.mark.label;\n\n    return h(\n      \'div\',\n      { \'class\': \'el-slider__marks-text\', style: this.mark.style || {} },\n      [label]\n    );\n  }\n});\n// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"\nvar emitter_ = __webpack_require__(4);\nvar emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/slider/src/main.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var mainvue_type_script_lang_js_ = ({\n  name: \'ElSlider\',\n\n  mixins: [emitter_default.a],\n\n  inject: {\n    elForm: {\n      default: \'\'\n    }\n  },\n\n  props: {\n    min: {\n      type: Number,\n      default: 0\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    value: {\n      type: [Number, Array],\n      default: 0\n    },\n    showInput: {\n      type: Boolean,\n      default: false\n    },\n    showInputControls: {\n      type: Boolean,\n      default: true\n    },\n    inputSize: {\n      type: String,\n      default: \'small\'\n    },\n    showStops: {\n      type: Boolean,\n      default: false\n    },\n    showTooltip: {\n      type: Boolean,\n      default: true\n    },\n    formatTooltip: Function,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    range: {\n      type: Boolean,\n      default: false\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      type: String\n    },\n    debounce: {\n      type: Number,\n      default: 300\n    },\n    label: {\n      type: String\n    },\n    tooltipClass: String,\n    marks: Object\n  },\n\n  components: {\n    ElInputNumber: input_number_default.a,\n    SliderButton: src_button,\n    SliderMarker: marker\n  },\n\n  data: function data() {\n    return {\n      firstValue: null,\n      secondValue: null,\n      oldValue: null,\n      dragging: false,\n      sliderSize: 1\n    };\n  },\n\n\n  watch: {\n    value: function value(val, oldVal) {\n      if (this.dragging || Array.isArray(val) && Array.isArray(oldVal) && val.every(function (item, index) {\n        return item === oldVal[index];\n      })) {\n        return;\n      }\n      this.setValues();\n    },\n    dragging: function dragging(val) {\n      if (!val) {\n        this.setValues();\n      }\n    },\n    firstValue: function firstValue(val) {\n      if (this.range) {\n        this.$emit(\'input\', [this.minValue, this.maxValue]);\n      } else {\n        this.$emit(\'input\', val);\n      }\n    },\n    secondValue: function secondValue() {\n      if (this.range) {\n        this.$emit(\'input\', [this.minValue, this.maxValue]);\n      }\n    },\n    min: function min() {\n      this.setValues();\n    },\n    max: function max() {\n      this.setValues();\n    }\n  },\n\n  methods: {\n    valueChanged: function valueChanged() {\n      var _this = this;\n\n      if (this.range) {\n        return ![this.minValue, this.maxValue].every(function (item, index) {\n          return item === _this.oldValue[index];\n        });\n      } else {\n        return this.value !== this.oldValue;\n      }\n    },\n    setValues: function setValues() {\n      if (this.min > this.max) {\n        console.error(\'[Element Error][Slider]min should not be greater than max.\');\n        return;\n      }\n      var val = this.value;\n      if (this.range && Array.isArray(val)) {\n        if (val[1] < this.min) {\n          this.$emit(\'input\', [this.min, this.min]);\n        } else if (val[0] > this.max) {\n          this.$emit(\'input\', [this.max, this.max]);\n        } else if (val[0] < this.min) {\n          this.$emit(\'input\', [this.min, val[1]]);\n        } else if (val[1] > this.max) {\n          this.$emit(\'input\', [val[0], this.max]);\n        } else {\n          this.firstValue = val[0];\n          this.secondValue = val[1];\n          if (this.valueChanged()) {\n            this.dispatch(\'ElFormItem\', \'el.form.change\', [this.minValue, this.maxValue]);\n            this.oldValue = val.slice();\n          }\n        }\n      } else if (!this.range && typeof val === \'number\' && !isNaN(val)) {\n        if (val < this.min) {\n          this.$emit(\'input\', this.min);\n        } else if (val > this.max) {\n          this.$emit(\'input\', this.max);\n        } else {\n          this.firstValue = val;\n          if (this.valueChanged()) {\n            this.dispatch(\'ElFormItem\', \'el.form.change\', val);\n            this.oldValue = val;\n          }\n        }\n      }\n    },\n    setPosition: function setPosition(percent) {\n      var targetValue = this.min + percent * (this.max - this.min) / 100;\n      if (!this.range) {\n        this.$refs.button1.setPosition(percent);\n        return;\n      }\n      var button = void 0;\n      if (Math.abs(this.minValue - targetValue) < Math.abs(this.maxValue - targetValue)) {\n        button = this.firstValue < this.secondValue ? \'button1\' : \'button2\';\n      } else {\n        button = this.firstValue > this.secondValue ? \'button1\' : \'button2\';\n      }\n      this.$refs[button].setPosition(percent);\n    },\n    onSliderClick: function onSliderClick(event) {\n      if (this.sliderDisabled || this.dragging) return;\n      this.resetSize();\n      if (this.vertical) {\n        var sliderOffsetBottom = this.$refs.slider.getBoundingClientRect().bottom;\n        this.setPosition((sliderOffsetBottom - event.clientY) / this.sliderSize * 100);\n      } else {\n        var sliderOffsetLeft = this.$refs.slider.getBoundingClientRect().left;\n        this.setPosition((event.clientX - sliderOffsetLeft) / this.sliderSize * 100);\n      }\n      this.emitChange();\n    },\n    resetSize: function resetSize() {\n      if (this.$refs.slider) {\n        this.sliderSize = this.$refs.slider[\'client\' + (this.vertical ? \'Height\' : \'Width\')];\n      }\n    },\n    emitChange: function emitChange() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$emit(\'change\', _this2.range ? [_this2.minValue, _this2.maxValue] : _this2.value);\n      });\n    },\n    getStopStyle: function getStopStyle(position) {\n      return this.vertical ? { \'bottom\': position + \'%\' } : { \'left\': position + \'%\' };\n    }\n  },\n\n  computed: {\n    stops: function stops() {\n      var _this3 = this;\n\n      if (!this.showStops || this.min > this.max) return [];\n      if (this.step === 0) {\n          false && false;\n        return [];\n      }\n      var stopCount = (this.max - this.min) / this.step;\n      var stepWidth = 100 * this.step / (this.max - this.min);\n      var result = [];\n      for (var i = 1; i < stopCount; i++) {\n        result.push(i * stepWidth);\n      }\n      if (this.range) {\n        return result.filter(function (step) {\n          return step < 100 * (_this3.minValue - _this3.min) / (_this3.max - _this3.min) || step > 100 * (_this3.maxValue - _this3.min) / (_this3.max - _this3.min);\n        });\n      } else {\n        return result.filter(function (step) {\n          return step > 100 * (_this3.firstValue - _this3.min) / (_this3.max - _this3.min);\n        });\n      }\n    },\n    markList: function markList() {\n      var _this4 = this;\n\n      if (!this.marks) {\n        return [];\n      }\n\n      var marksKeys = Object.keys(this.marks);\n      return marksKeys.map(parseFloat).sort(function (a, b) {\n        return a - b;\n      }).filter(function (point) {\n        return point <= _this4.max && point >= _this4.min;\n      }).map(function (point) {\n        return {\n          point: point,\n          position: (point - _this4.min) * 100 / (_this4.max - _this4.min),\n          mark: _this4.marks[point]\n        };\n      });\n    },\n    minValue: function minValue() {\n      return Math.min(this.firstValue, this.secondValue);\n    },\n    maxValue: function maxValue() {\n      return Math.max(this.firstValue, this.secondValue);\n    },\n    barSize: function barSize() {\n      return this.range ? 100 * (this.maxValue - this.minValue) / (this.max - this.min) + \'%\' : 100 * (this.firstValue - this.min) / (this.max - this.min) + \'%\';\n    },\n    barStart: function barStart() {\n      return this.range ? 100 * (this.minValue - this.min) / (this.max - this.min) + \'%\' : \'0%\';\n    },\n    precision: function precision() {\n      var precisions = [this.min, this.max, this.step].map(function (item) {\n        var decimal = (\'\' + item).split(\'.\')[1];\n        return decimal ? decimal.length : 0;\n      });\n      return Math.max.apply(null, precisions);\n    },\n    runwayStyle: function runwayStyle() {\n      return this.vertical ? { height: this.height } : {};\n    },\n    barStyle: function barStyle() {\n      return this.vertical ? {\n        height: this.barSize,\n        bottom: this.barStart\n      } : {\n        width: this.barSize,\n        left: this.barStart\n      };\n    },\n    sliderDisabled: function sliderDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    }\n  },\n\n  mounted: function mounted() {\n    var valuetext = void 0;\n    if (this.range) {\n      if (Array.isArray(this.value)) {\n        this.firstValue = Math.max(this.min, this.value[0]);\n        this.secondValue = Math.min(this.max, this.value[1]);\n      } else {\n        this.firstValue = this.min;\n        this.secondValue = this.max;\n      }\n      this.oldValue = [this.firstValue, this.secondValue];\n      valuetext = this.firstValue + \'-\' + this.secondValue;\n    } else {\n      if (typeof this.value !== \'number\' || isNaN(this.value)) {\n        this.firstValue = this.min;\n      } else {\n        this.firstValue = Math.min(this.max, Math.max(this.min, this.value));\n      }\n      this.oldValue = this.firstValue;\n      valuetext = this.firstValue;\n    }\n    this.$el.setAttribute(\'aria-valuetext\', valuetext);\n\n    // label screen reader\n    this.$el.setAttribute(\'aria-label\', this.label ? this.label : \'slider between \' + this.min + \' and \' + this.max);\n\n    this.resetSize();\n    window.addEventListener(\'resize\', this.resetSize);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener(\'resize\', this.resetSize);\n  }\n});\n// CONCATENATED MODULE: ./packages/slider/src/main.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/slider/src/main.vue\n\n\n\n\n\n/* normalize component */\n\nvar main_component = Object(componentNormalizer["a" /* default */])(\n  src_mainvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var main_api; }\nmain_component.options.__file = "packages/slider/src/main.vue"\n/* harmony default export */ var main = (main_component.exports);\n// CONCATENATED MODULE: ./packages/slider/index.js\n\n\n/* istanbul ignore next */\nmain.install = function (Vue) {\n  Vue.component(main.name, main);\n};\n\n/* harmony default export */ var slider = __webpack_exports__["default"] = (main);\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///198\n')}}]);