(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{166:function(module,exports,__webpack_require__){eval('module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== \'undefined\' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: \'Module\' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, \'__esModule\', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === \'object\' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, \'default\', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != \'string\') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module[\'default\']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, \'a\', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = "/dist/";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 54);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === \'function\'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = \'data-v-\' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== \'undefined\') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn\'t\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n\n/***/ 10:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(31);\n\n/***/ }),\n\n/***/ 12:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(53);\n\n/***/ }),\n\n/***/ 14:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(75);\n\n/***/ }),\n\n/***/ 4:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(7);\n\n/***/ }),\n\n/***/ 5:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(20);\n\n/***/ }),\n\n/***/ 54:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n"use strict";\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=template&id=55c8ade7&\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      directives: [\n        {\n          name: "clickoutside",\n          rawName: "v-clickoutside",\n          value: _vm.hide,\n          expression: "hide"\n        }\n      ],\n      class: [\n        "el-color-picker",\n        _vm.colorDisabled ? "is-disabled" : "",\n        _vm.colorSize ? "el-color-picker--" + _vm.colorSize : ""\n      ]\n    },\n    [\n      _vm.colorDisabled\n        ? _c("div", { staticClass: "el-color-picker__mask" })\n        : _vm._e(),\n      _c(\n        "div",\n        {\n          staticClass: "el-color-picker__trigger",\n          on: { click: _vm.handleTrigger }\n        },\n        [\n          _c(\n            "span",\n            {\n              staticClass: "el-color-picker__color",\n              class: { "is-alpha": _vm.showAlpha }\n            },\n            [\n              _c("span", {\n                staticClass: "el-color-picker__color-inner",\n                style: {\n                  backgroundColor: _vm.displayedColor\n                }\n              }),\n              !_vm.value && !_vm.showPanelColor\n                ? _c("span", {\n                    staticClass: "el-color-picker__empty el-icon-close"\n                  })\n                : _vm._e()\n            ]\n          ),\n          _c("span", {\n            directives: [\n              {\n                name: "show",\n                rawName: "v-show",\n                value: _vm.value || _vm.showPanelColor,\n                expression: "value || showPanelColor"\n              }\n            ],\n            staticClass: "el-color-picker__icon el-icon-arrow-down"\n          })\n        ]\n      ),\n      _c("picker-dropdown", {\n        ref: "dropdown",\n        class: ["el-color-picker__panel", _vm.popperClass || ""],\n        attrs: {\n          color: _vm.color,\n          "show-alpha": _vm.showAlpha,\n          predefine: _vm.predefine\n        },\n        on: { pick: _vm.confirmValue, clear: _vm.clearValue },\n        model: {\n          value: _vm.showPicker,\n          callback: function($$v) {\n            _vm.showPicker = $$v\n          },\n          expression: "showPicker"\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=template&id=55c8ade7&\n\n// CONCATENATED MODULE: ./packages/color-picker/src/color.js\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nvar hsv2hsl = function hsv2hsl(hue, sat, val) {\n  return [hue, sat * val / ((hue = (2 - sat) * val) < 1 ? hue : 2 - hue) || 0, hue / 2];\n};\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nvar isOnePointZero = function isOnePointZero(n) {\n  return typeof n === \'string\' && n.indexOf(\'.\') !== -1 && parseFloat(n) === 1;\n};\n\nvar isPercentage = function isPercentage(n) {\n  return typeof n === \'string\' && n.indexOf(\'%\') !== -1;\n};\n\n// Take input from [0, n] and return it as [0, 1]\nvar bound01 = function bound01(value, max) {\n  if (isOnePointZero(value)) value = \'100%\';\n\n  var processPercent = isPercentage(value);\n  value = Math.min(max, Math.max(0, parseFloat(value)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    value = parseInt(value * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(value - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn\'t already\n  return value % max / parseFloat(max);\n};\n\nvar INT_HEX_MAP = { 10: \'A\', 11: \'B\', 12: \'C\', 13: \'D\', 14: \'E\', 15: \'F\' };\n\nvar toHex = function toHex(_ref) {\n  var r = _ref.r,\n      g = _ref.g,\n      b = _ref.b;\n\n  var hexOne = function hexOne(value) {\n    value = Math.min(Math.round(value), 255);\n    var high = Math.floor(value / 16);\n    var low = value % 16;\n    return \'\' + (INT_HEX_MAP[high] || high) + (INT_HEX_MAP[low] || low);\n  };\n\n  if (isNaN(r) || isNaN(g) || isNaN(b)) return \'\';\n\n  return \'#\' + hexOne(r) + hexOne(g) + hexOne(b);\n};\n\nvar HEX_INT_MAP = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };\n\nvar parseHexChannel = function parseHexChannel(hex) {\n  if (hex.length === 2) {\n    return (HEX_INT_MAP[hex[0].toUpperCase()] || +hex[0]) * 16 + (HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1]);\n  }\n\n  return HEX_INT_MAP[hex[1].toUpperCase()] || +hex[1];\n};\n\nvar hsl2hsv = function hsl2hsv(hue, sat, light) {\n  sat = sat / 100;\n  light = light / 100;\n  var smin = sat;\n  var lmin = Math.max(light, 0.01);\n  var sv = void 0;\n  var v = void 0;\n\n  light *= 2;\n  sat *= light <= 1 ? light : 2 - light;\n  smin *= lmin <= 1 ? lmin : 2 - lmin;\n  v = (light + sat) / 2;\n  sv = light === 0 ? 2 * smin / (lmin + smin) : 2 * sat / (light + sat);\n\n  return {\n    h: hue,\n    s: sv * 100,\n    v: v * 100\n  };\n};\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nvar rgb2hsv = function rgb2hsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var h = void 0,\n      s = void 0;\n  var v = max;\n\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max === min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return { h: h * 360, s: s * 100, v: v * 100 };\n};\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nvar hsv2rgb = function hsv2rgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n\n  var i = Math.floor(h);\n  var f = h - i;\n  var p = v * (1 - s);\n  var q = v * (1 - f * s);\n  var t = v * (1 - (1 - f) * s);\n  var mod = i % 6;\n  var r = [v, q, p, p, t, v][mod];\n  var g = [t, v, v, q, p, p][mod];\n  var b = [p, p, t, v, v, q][mod];\n\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n};\n\nvar Color = function () {\n  function Color(options) {\n    _classCallCheck(this, Color);\n\n    this._hue = 0;\n    this._saturation = 100;\n    this._value = 100;\n    this._alpha = 100;\n\n    this.enableAlpha = false;\n    this.format = \'hex\';\n    this.value = \'\';\n\n    options = options || {};\n\n    for (var option in options) {\n      if (options.hasOwnProperty(option)) {\n        this[option] = options[option];\n      }\n    }\n\n    this.doOnChange();\n  }\n\n  Color.prototype.set = function set(prop, value) {\n    if (arguments.length === 1 && (typeof prop === \'undefined\' ? \'undefined\' : _typeof(prop)) === \'object\') {\n      for (var p in prop) {\n        if (prop.hasOwnProperty(p)) {\n          this.set(p, prop[p]);\n        }\n      }\n\n      return;\n    }\n\n    this[\'_\' + prop] = value;\n    this.doOnChange();\n  };\n\n  Color.prototype.get = function get(prop) {\n    return this[\'_\' + prop];\n  };\n\n  Color.prototype.toRgb = function toRgb() {\n    return hsv2rgb(this._hue, this._saturation, this._value);\n  };\n\n  Color.prototype.fromString = function fromString(value) {\n    var _this = this;\n\n    if (!value) {\n      this._hue = 0;\n      this._saturation = 100;\n      this._value = 100;\n\n      this.doOnChange();\n      return;\n    }\n\n    var fromHSV = function fromHSV(h, s, v) {\n      _this._hue = Math.max(0, Math.min(360, h));\n      _this._saturation = Math.max(0, Math.min(100, s));\n      _this._value = Math.max(0, Math.min(100, v));\n\n      _this.doOnChange();\n    };\n\n    if (value.indexOf(\'hsl\') !== -1) {\n      var parts = value.replace(/hsla|hsl|\\(|\\)/gm, \'\').split(/\\s|,/g).filter(function (val) {\n        return val !== \'\';\n      }).map(function (val, index) {\n        return index > 2 ? parseFloat(val) : parseInt(val, 10);\n      });\n\n      if (parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(parts[3]) * 100);\n      } else if (parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (parts.length >= 3) {\n        var _hsl2hsv = hsl2hsv(parts[0], parts[1], parts[2]),\n            h = _hsl2hsv.h,\n            s = _hsl2hsv.s,\n            v = _hsl2hsv.v;\n\n        fromHSV(h, s, v);\n      }\n    } else if (value.indexOf(\'hsv\') !== -1) {\n      var _parts = value.replace(/hsva|hsv|\\(|\\)/gm, \'\').split(/\\s|,/g).filter(function (val) {\n        return val !== \'\';\n      }).map(function (val, index) {\n        return index > 2 ? parseFloat(val) : parseInt(val, 10);\n      });\n\n      if (_parts.length === 4) {\n        this._alpha = Math.floor(parseFloat(_parts[3]) * 100);\n      } else if (_parts.length === 3) {\n        this._alpha = 100;\n      }\n      if (_parts.length >= 3) {\n        fromHSV(_parts[0], _parts[1], _parts[2]);\n      }\n    } else if (value.indexOf(\'rgb\') !== -1) {\n      var _parts2 = value.replace(/rgba|rgb|\\(|\\)/gm, \'\').split(/\\s|,/g).filter(function (val) {\n        return val !== \'\';\n      }).map(function (val, index) {\n        return index > 2 ? parseFloat(val) : parseInt(val, 10);\n      });\n\n      if (_parts2.length === 4) {\n        this._alpha = Math.floor(parseFloat(_parts2[3]) * 100);\n      } else if (_parts2.length === 3) {\n        this._alpha = 100;\n      }\n      if (_parts2.length >= 3) {\n        var _rgb2hsv = rgb2hsv(_parts2[0], _parts2[1], _parts2[2]),\n            _h = _rgb2hsv.h,\n            _s = _rgb2hsv.s,\n            _v = _rgb2hsv.v;\n\n        fromHSV(_h, _s, _v);\n      }\n    } else if (value.indexOf(\'#\') !== -1) {\n      var hex = value.replace(\'#\', \'\').trim();\n      if (!/^(?:[0-9a-fA-F]{3}){1,2}|[0-9a-fA-F]{8}$/.test(hex)) return;\n      var r = void 0,\n          g = void 0,\n          b = void 0;\n\n      if (hex.length === 3) {\n        r = parseHexChannel(hex[0] + hex[0]);\n        g = parseHexChannel(hex[1] + hex[1]);\n        b = parseHexChannel(hex[2] + hex[2]);\n      } else if (hex.length === 6 || hex.length === 8) {\n        r = parseHexChannel(hex.substring(0, 2));\n        g = parseHexChannel(hex.substring(2, 4));\n        b = parseHexChannel(hex.substring(4, 6));\n      }\n\n      if (hex.length === 8) {\n        this._alpha = Math.floor(parseHexChannel(hex.substring(6)) / 255 * 100);\n      } else if (hex.length === 3 || hex.length === 6) {\n        this._alpha = 100;\n      }\n\n      var _rgb2hsv2 = rgb2hsv(r, g, b),\n          _h2 = _rgb2hsv2.h,\n          _s2 = _rgb2hsv2.s,\n          _v2 = _rgb2hsv2.v;\n\n      fromHSV(_h2, _s2, _v2);\n    }\n  };\n\n  Color.prototype.compare = function compare(color) {\n    return Math.abs(color._hue - this._hue) < 2 && Math.abs(color._saturation - this._saturation) < 1 && Math.abs(color._value - this._value) < 1 && Math.abs(color._alpha - this._alpha) < 1;\n  };\n\n  Color.prototype.doOnChange = function doOnChange() {\n    var _hue = this._hue,\n        _saturation = this._saturation,\n        _value = this._value,\n        _alpha = this._alpha,\n        format = this.format;\n\n\n    if (this.enableAlpha) {\n      switch (format) {\n        case \'hsl\':\n          var hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = \'hsla(\' + _hue + \', \' + Math.round(hsl[1] * 100) + \'%, \' + Math.round(hsl[2] * 100) + \'%, \' + _alpha / 100 + \')\';\n          break;\n        case \'hsv\':\n          this.value = \'hsva(\' + _hue + \', \' + Math.round(_saturation) + \'%, \' + Math.round(_value) + \'%, \' + _alpha / 100 + \')\';\n          break;\n        default:\n          var _hsv2rgb = hsv2rgb(_hue, _saturation, _value),\n              r = _hsv2rgb.r,\n              g = _hsv2rgb.g,\n              b = _hsv2rgb.b;\n\n          this.value = \'rgba(\' + r + \', \' + g + \', \' + b + \', \' + _alpha / 100 + \')\';\n      }\n    } else {\n      switch (format) {\n        case \'hsl\':\n          var _hsl = hsv2hsl(_hue, _saturation / 100, _value / 100);\n          this.value = \'hsl(\' + _hue + \', \' + Math.round(_hsl[1] * 100) + \'%, \' + Math.round(_hsl[2] * 100) + \'%)\';\n          break;\n        case \'hsv\':\n          this.value = \'hsv(\' + _hue + \', \' + Math.round(_saturation) + \'%, \' + Math.round(_value) + \'%)\';\n          break;\n        case \'rgb\':\n          var _hsv2rgb2 = hsv2rgb(_hue, _saturation, _value),\n              _r = _hsv2rgb2.r,\n              _g = _hsv2rgb2.g,\n              _b = _hsv2rgb2.b;\n\n          this.value = \'rgb(\' + _r + \', \' + _g + \', \' + _b + \')\';\n          break;\n        default:\n          this.value = toHex(hsv2rgb(_hue, _saturation, _value));\n      }\n    }\n  };\n\n  return Color;\n}();\n\n/* harmony default export */ var src_color = (Color);\n;\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=06601625&\nvar picker_dropdownvue_type_template_id_06601625_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "transition",\n    { attrs: { name: "el-zoom-in-top" }, on: { "after-leave": _vm.doDestroy } },\n    [\n      _c(\n        "div",\n        {\n          directives: [\n            {\n              name: "show",\n              rawName: "v-show",\n              value: _vm.showPopper,\n              expression: "showPopper"\n            }\n          ],\n          staticClass: "el-color-dropdown"\n        },\n        [\n          _c(\n            "div",\n            { staticClass: "el-color-dropdown__main-wrapper" },\n            [\n              _c("hue-slider", {\n                ref: "hue",\n                staticStyle: { float: "right" },\n                attrs: { color: _vm.color, vertical: "" }\n              }),\n              _c("sv-panel", { ref: "sl", attrs: { color: _vm.color } })\n            ],\n            1\n          ),\n          _vm.showAlpha\n            ? _c("alpha-slider", { ref: "alpha", attrs: { color: _vm.color } })\n            : _vm._e(),\n          _vm.predefine\n            ? _c("predefine", {\n                attrs: { color: _vm.color, colors: _vm.predefine }\n              })\n            : _vm._e(),\n          _c(\n            "div",\n            { staticClass: "el-color-dropdown__btns" },\n            [\n              _c(\n                "span",\n                { staticClass: "el-color-dropdown__value" },\n                [\n                  _c("el-input", {\n                    attrs: { "validate-event": false, size: "mini" },\n                    on: { blur: _vm.handleConfirm },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !("button" in $event) &&\n                          _vm._k(\n                            $event.keyCode,\n                            "enter",\n                            13,\n                            $event.key,\n                            "Enter"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.handleConfirm($event)\n                      }\n                    },\n                    model: {\n                      value: _vm.customInput,\n                      callback: function($$v) {\n                        _vm.customInput = $$v\n                      },\n                      expression: "customInput"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                "el-button",\n                {\n                  staticClass: "el-color-dropdown__link-btn",\n                  attrs: { size: "mini", type: "text" },\n                  on: {\n                    click: function($event) {\n                      _vm.$emit("clear")\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    "\\n        " +\n                      _vm._s(_vm.t("el.colorpicker.clear")) +\n                      "\\n      "\n                  )\n                ]\n              ),\n              _c(\n                "el-button",\n                {\n                  staticClass: "el-color-dropdown__btn",\n                  attrs: { plain: "", size: "mini" },\n                  on: { click: _vm.confirmValue }\n                },\n                [\n                  _vm._v(\n                    "\\n        " +\n                      _vm._s(_vm.t("el.colorpicker.confirm")) +\n                      "\\n      "\n                  )\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ]\n  )\n}\nvar picker_dropdownvue_type_template_id_06601625_staticRenderFns = []\npicker_dropdownvue_type_template_id_06601625_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=template&id=06601625&\n\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=d8583596&\nvar sv_panelvue_type_template_id_d8583596_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-color-svpanel",\n      style: {\n        backgroundColor: _vm.background\n      }\n    },\n    [\n      _c("div", { staticClass: "el-color-svpanel__white" }),\n      _c("div", { staticClass: "el-color-svpanel__black" }),\n      _c(\n        "div",\n        {\n          staticClass: "el-color-svpanel__cursor",\n          style: {\n            top: _vm.cursorTop + "px",\n            left: _vm.cursorLeft + "px"\n          }\n        },\n        [_c("div")]\n      )\n    ]\n  )\n}\nvar sv_panelvue_type_template_id_d8583596_staticRenderFns = []\nsv_panelvue_type_template_id_d8583596_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=template&id=d8583596&\n\n// EXTERNAL MODULE: external "vue"\nvar external_vue_ = __webpack_require__(7);\nvar external_vue_default = /*#__PURE__*/__webpack_require__.n(external_vue_);\n\n// CONCATENATED MODULE: ./packages/color-picker/src/draggable.js\n\nvar isDragging = false;\n\n/* harmony default export */ var draggable = (function (element, options) {\n  if (external_vue_default.a.prototype.$isServer) return;\n  var moveFn = function moveFn(event) {\n    if (options.drag) {\n      options.drag(event);\n    }\n  };\n  var upFn = function upFn(event) {\n    document.removeEventListener(\'mousemove\', moveFn);\n    document.removeEventListener(\'mouseup\', upFn);\n    document.onselectstart = null;\n    document.ondragstart = null;\n\n    isDragging = false;\n\n    if (options.end) {\n      options.end(event);\n    }\n  };\n  element.addEventListener(\'mousedown\', function (event) {\n    if (isDragging) return;\n    document.onselectstart = function () {\n      return false;\n    };\n    document.ondragstart = function () {\n      return false;\n    };\n\n    document.addEventListener(\'mousemove\', moveFn);\n    document.addEventListener(\'mouseup\', upFn);\n    isDragging = true;\n\n    if (options.start) {\n      options.start(event);\n    }\n  });\n});\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var sv_panelvue_type_script_lang_js_ = ({\n  name: \'el-sl-panel\',\n\n  props: {\n    color: {\n      required: true\n    }\n  },\n\n  computed: {\n    colorValue: function colorValue() {\n      var hue = this.color.get(\'hue\');\n      var value = this.color.get(\'value\');\n      return { hue: hue, value: value };\n    }\n  },\n\n  watch: {\n    colorValue: function colorValue() {\n      this.update();\n    }\n  },\n\n  methods: {\n    update: function update() {\n      var saturation = this.color.get(\'saturation\');\n      var value = this.color.get(\'value\');\n\n      var el = this.$el;\n      var width = el.clientWidth,\n          height = el.clientHeight;\n\n\n      this.cursorLeft = saturation * width / 100;\n      this.cursorTop = (100 - value) * height / 100;\n\n      this.background = \'hsl(\' + this.color.get(\'hue\') + \', 100%, 50%)\';\n    },\n    handleDrag: function handleDrag(event) {\n      var el = this.$el;\n      var rect = el.getBoundingClientRect();\n\n      var left = event.clientX - rect.left;\n      var top = event.clientY - rect.top;\n      left = Math.max(0, left);\n      left = Math.min(left, rect.width);\n\n      top = Math.max(0, top);\n      top = Math.min(top, rect.height);\n\n      this.cursorLeft = left;\n      this.cursorTop = top;\n      this.color.set({\n        saturation: left / rect.width * 100,\n        value: 100 - top / rect.height * 100\n      });\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    draggable(this.$el, {\n      drag: function drag(event) {\n        _this.handleDrag(event);\n      },\n      end: function end(event) {\n        _this.handleDrag(event);\n      }\n    });\n\n    this.update();\n  },\n  data: function data() {\n    return {\n      cursorTop: 0,\n      cursorLeft: 0,\n      background: \'hsl(0, 100%, 50%)\'\n    };\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_sv_panelvue_type_script_lang_js_ = (sv_panelvue_type_script_lang_js_); \n// EXTERNAL MODULE: ./node_modules/vue-loader/lib/runtime/componentNormalizer.js\nvar componentNormalizer = __webpack_require__(0);\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/sv-panel.vue\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(componentNormalizer["a" /* default */])(\n  components_sv_panelvue_type_script_lang_js_,\n  sv_panelvue_type_template_id_d8583596_render,\n  sv_panelvue_type_template_id_d8583596_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = "packages/color-picker/src/components/sv-panel.vue"\n/* harmony default export */ var sv_panel = (component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=5cdc43b1&\nvar hue_slidervue_type_template_id_5cdc43b1_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-color-hue-slider",\n      class: { "is-vertical": _vm.vertical }\n    },\n    [\n      _c("div", {\n        ref: "bar",\n        staticClass: "el-color-hue-slider__bar",\n        on: { click: _vm.handleClick }\n      }),\n      _c("div", {\n        ref: "thumb",\n        staticClass: "el-color-hue-slider__thumb",\n        style: {\n          left: _vm.thumbLeft + "px",\n          top: _vm.thumbTop + "px"\n        }\n      })\n    ]\n  )\n}\nvar hue_slidervue_type_template_id_5cdc43b1_staticRenderFns = []\nhue_slidervue_type_template_id_5cdc43b1_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=template&id=5cdc43b1&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var hue_slidervue_type_script_lang_js_ = ({\n  name: \'el-color-hue-slider\',\n\n  props: {\n    color: {\n      required: true\n    },\n\n    vertical: Boolean\n  },\n\n  data: function data() {\n    return {\n      thumbLeft: 0,\n      thumbTop: 0\n    };\n  },\n\n\n  computed: {\n    hueValue: function hueValue() {\n      var hue = this.color.get(\'hue\');\n      return hue;\n    }\n  },\n\n  watch: {\n    hueValue: function hueValue() {\n      this.update();\n    }\n  },\n\n  methods: {\n    handleClick: function handleClick(event) {\n      var thumb = this.$refs.thumb;\n      var target = event.target;\n\n      if (target !== thumb) {\n        this.handleDrag(event);\n      }\n    },\n    handleDrag: function handleDrag(event) {\n      var rect = this.$el.getBoundingClientRect();\n      var thumb = this.$refs.thumb;\n\n      var hue = void 0;\n\n      if (!this.vertical) {\n        var left = event.clientX - rect.left;\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n        left = Math.max(thumb.offsetWidth / 2, left);\n\n        hue = Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 360);\n      } else {\n        var top = event.clientY - rect.top;\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n        top = Math.max(thumb.offsetHeight / 2, top);\n\n        hue = Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 360);\n      }\n\n      this.color.set(\'hue\', hue);\n    },\n    getThumbLeft: function getThumbLeft() {\n      if (this.vertical) return 0;\n      var el = this.$el;\n      var hue = this.color.get(\'hue\');\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(hue * (el.offsetWidth - thumb.offsetWidth / 2) / 360);\n    },\n    getThumbTop: function getThumbTop() {\n      if (!this.vertical) return 0;\n      var el = this.$el;\n      var hue = this.color.get(\'hue\');\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(hue * (el.offsetHeight - thumb.offsetHeight / 2) / 360);\n    },\n    update: function update() {\n      this.thumbLeft = this.getThumbLeft();\n      this.thumbTop = this.getThumbTop();\n    }\n  },\n\n  mounted: function mounted() {\n    var _this = this;\n\n    var _$refs = this.$refs,\n        bar = _$refs.bar,\n        thumb = _$refs.thumb;\n\n\n    var dragConfig = {\n      drag: function drag(event) {\n        _this.handleDrag(event);\n      },\n      end: function end(event) {\n        _this.handleDrag(event);\n      }\n    };\n\n    draggable(bar, dragConfig);\n    draggable(thumb, dragConfig);\n    this.update();\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_hue_slidervue_type_script_lang_js_ = (hue_slidervue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/hue-slider.vue\n\n\n\n\n\n/* normalize component */\n\nvar hue_slider_component = Object(componentNormalizer["a" /* default */])(\n  components_hue_slidervue_type_script_lang_js_,\n  hue_slidervue_type_template_id_5cdc43b1_render,\n  hue_slidervue_type_template_id_5cdc43b1_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var hue_slider_api; }\nhue_slider_component.options.__file = "packages/color-picker/src/components/hue-slider.vue"\n/* harmony default export */ var hue_slider = (hue_slider_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=068c66cb&\nvar alpha_slidervue_type_template_id_068c66cb_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    "div",\n    {\n      staticClass: "el-color-alpha-slider",\n      class: { "is-vertical": _vm.vertical }\n    },\n    [\n      _c("div", {\n        ref: "bar",\n        staticClass: "el-color-alpha-slider__bar",\n        style: {\n          background: _vm.background\n        },\n        on: { click: _vm.handleClick }\n      }),\n      _c("div", {\n        ref: "thumb",\n        staticClass: "el-color-alpha-slider__thumb",\n        style: {\n          left: _vm.thumbLeft + "px",\n          top: _vm.thumbTop + "px"\n        }\n      })\n    ]\n  )\n}\nvar alpha_slidervue_type_template_id_068c66cb_staticRenderFns = []\nalpha_slidervue_type_template_id_068c66cb_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=template&id=068c66cb&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var alpha_slidervue_type_script_lang_js_ = ({\n  name: \'el-color-alpha-slider\',\n\n  props: {\n    color: {\n      required: true\n    },\n    vertical: Boolean\n  },\n\n  watch: {\n    \'color._alpha\': function color_alpha() {\n      this.update();\n    },\n    \'color.value\': function colorValue() {\n      this.update();\n    }\n  },\n\n  methods: {\n    handleClick: function handleClick(event) {\n      var thumb = this.$refs.thumb;\n      var target = event.target;\n\n      if (target !== thumb) {\n        this.handleDrag(event);\n      }\n    },\n    handleDrag: function handleDrag(event) {\n      var rect = this.$el.getBoundingClientRect();\n      var thumb = this.$refs.thumb;\n\n\n      if (!this.vertical) {\n        var left = event.clientX - rect.left;\n        left = Math.max(thumb.offsetWidth / 2, left);\n        left = Math.min(left, rect.width - thumb.offsetWidth / 2);\n\n        this.color.set(\'alpha\', Math.round((left - thumb.offsetWidth / 2) / (rect.width - thumb.offsetWidth) * 100));\n      } else {\n        var top = event.clientY - rect.top;\n        top = Math.max(thumb.offsetHeight / 2, top);\n        top = Math.min(top, rect.height - thumb.offsetHeight / 2);\n\n        this.color.set(\'alpha\', Math.round((top - thumb.offsetHeight / 2) / (rect.height - thumb.offsetHeight) * 100));\n      }\n    },\n    getThumbLeft: function getThumbLeft() {\n      if (this.vertical) return 0;\n      var el = this.$el;\n      var alpha = this.color._alpha;\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(alpha * (el.offsetWidth - thumb.offsetWidth / 2) / 100);\n    },\n    getThumbTop: function getThumbTop() {\n      if (!this.vertical) return 0;\n      var el = this.$el;\n      var alpha = this.color._alpha;\n\n      if (!el) return 0;\n      var thumb = this.$refs.thumb;\n      return Math.round(alpha * (el.offsetHeight - thumb.offsetHeight / 2) / 100);\n    },\n    getBackground: function getBackground() {\n      if (this.color && this.color.value) {\n        var _color$toRgb = this.color.toRgb(),\n            r = _color$toRgb.r,\n            g = _color$toRgb.g,\n            b = _color$toRgb.b;\n\n        return \'linear-gradient(to right, rgba(\' + r + \', \' + g + \', \' + b + \', 0) 0%, rgba(\' + r + \', \' + g + \', \' + b + \', 1) 100%)\';\n      }\n      return null;\n    },\n    update: function update() {\n      this.thumbLeft = this.getThumbLeft();\n      this.thumbTop = this.getThumbTop();\n      this.background = this.getBackground();\n    }\n  },\n\n  data: function data() {\n    return {\n      thumbLeft: 0,\n      thumbTop: 0,\n      background: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var _$refs = this.$refs,\n        bar = _$refs.bar,\n        thumb = _$refs.thumb;\n\n\n    var dragConfig = {\n      drag: function drag(event) {\n        _this.handleDrag(event);\n      },\n      end: function end(event) {\n        _this.handleDrag(event);\n      }\n    };\n\n    draggable(bar, dragConfig);\n    draggable(thumb, dragConfig);\n    this.update();\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_alpha_slidervue_type_script_lang_js_ = (alpha_slidervue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/alpha-slider.vue\n\n\n\n\n\n/* normalize component */\n\nvar alpha_slider_component = Object(componentNormalizer["a" /* default */])(\n  components_alpha_slidervue_type_script_lang_js_,\n  alpha_slidervue_type_template_id_068c66cb_render,\n  alpha_slidervue_type_template_id_068c66cb_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var alpha_slider_api; }\nalpha_slider_component.options.__file = "packages/color-picker/src/components/alpha-slider.vue"\n/* harmony default export */ var alpha_slider = (alpha_slider_component.exports);\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=template&id=06e03093&\nvar predefinevue_type_template_id_06e03093_render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c("div", { staticClass: "el-color-predefine" }, [\n    _c(\n      "div",\n      { staticClass: "el-color-predefine__colors" },\n      _vm._l(_vm.rgbaColors, function(item, index) {\n        return _c(\n          "div",\n          {\n            key: _vm.colors[index],\n            staticClass: "el-color-predefine__color-selector",\n            class: { selected: item.selected, "is-alpha": item._alpha < 100 },\n            on: {\n              click: function($event) {\n                _vm.handleSelect(index)\n              }\n            }\n          },\n          [_c("div", { style: { "background-color": item.value } })]\n        )\n      }),\n      0\n    )\n  ])\n}\nvar predefinevue_type_template_id_06e03093_staticRenderFns = []\npredefinevue_type_template_id_06e03093_render._withStripped = true\n\n\n// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=template&id=06e03093&\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var predefinevue_type_script_lang_js_ = ({\n  props: {\n    colors: { type: Array, required: true },\n    color: { required: true }\n  },\n  data: function data() {\n    return {\n      rgbaColors: this.parseColors(this.colors, this.color)\n    };\n  },\n\n  methods: {\n    handleSelect: function handleSelect(index) {\n      this.color.fromString(this.colors[index]);\n    },\n    parseColors: function parseColors(colors, color) {\n      return colors.map(function (value) {\n        var c = new src_color();\n        c.enableAlpha = true;\n        c.format = \'rgba\';\n        c.fromString(value);\n        c.selected = c.value === color.value;\n        return c;\n      });\n    }\n  },\n  watch: {\n    \'$parent.currentColor\': function $parentCurrentColor(val) {\n      var color = new src_color();\n      color.fromString(val);\n\n      this.rgbaColors.forEach(function (item) {\n        item.selected = color.compare(item);\n      });\n    },\n    colors: function colors(newVal) {\n      this.rgbaColors = this.parseColors(newVal, this.color);\n    },\n    color: function color(newVal) {\n      this.rgbaColors = this.parseColors(this.colors, newVal);\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_predefinevue_type_script_lang_js_ = (predefinevue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/predefine.vue\n\n\n\n\n\n/* normalize component */\n\nvar predefine_component = Object(componentNormalizer["a" /* default */])(\n  components_predefinevue_type_script_lang_js_,\n  predefinevue_type_template_id_06e03093_render,\n  predefinevue_type_template_id_06e03093_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var predefine_api; }\npredefine_component.options.__file = "packages/color-picker/src/components/predefine.vue"\n/* harmony default export */ var predefine = (predefine_component.exports);\n// EXTERNAL MODULE: external "element-ui/lib/utils/vue-popper"\nvar vue_popper_ = __webpack_require__(5);\nvar vue_popper_default = /*#__PURE__*/__webpack_require__.n(vue_popper_);\n\n// EXTERNAL MODULE: external "element-ui/lib/mixins/locale"\nvar locale_ = __webpack_require__(6);\nvar locale_default = /*#__PURE__*/__webpack_require__.n(locale_);\n\n// EXTERNAL MODULE: external "element-ui/lib/input"\nvar input_ = __webpack_require__(10);\nvar input_default = /*#__PURE__*/__webpack_require__.n(input_);\n\n// EXTERNAL MODULE: external "element-ui/lib/button"\nvar button_ = __webpack_require__(14);\nvar button_default = /*#__PURE__*/__webpack_require__.n(button_);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ var picker_dropdownvue_type_script_lang_js_ = ({\n  name: \'el-color-picker-dropdown\',\n\n  mixins: [vue_popper_default.a, locale_default.a],\n\n  components: {\n    SvPanel: sv_panel,\n    HueSlider: hue_slider,\n    AlphaSlider: alpha_slider,\n    ElInput: input_default.a,\n    ElButton: button_default.a,\n    Predefine: predefine\n  },\n\n  props: {\n    color: {\n      required: true\n    },\n    showAlpha: Boolean,\n    predefine: Array\n  },\n\n  data: function data() {\n    return {\n      customInput: \'\'\n    };\n  },\n\n\n  computed: {\n    currentColor: function currentColor() {\n      var parent = this.$parent;\n      return !parent.value && !parent.showPanelColor ? \'\' : parent.color.value;\n    }\n  },\n\n  methods: {\n    confirmValue: function confirmValue() {\n      this.$emit(\'pick\');\n    },\n    handleConfirm: function handleConfirm() {\n      this.color.fromString(this.customInput);\n    }\n  },\n\n  mounted: function mounted() {\n    this.$parent.popperElm = this.popperElm = this.$el;\n    this.referenceElm = this.$parent.$el;\n  },\n\n\n  watch: {\n    showPopper: function showPopper(val) {\n      var _this = this;\n\n      if (val === true) {\n        this.$nextTick(function () {\n          var _$refs = _this.$refs,\n              sl = _$refs.sl,\n              hue = _$refs.hue,\n              alpha = _$refs.alpha;\n\n          sl && sl.update();\n          hue && hue.update();\n          alpha && alpha.update();\n        });\n      }\n    },\n\n\n    currentColor: {\n      immediate: true,\n      handler: function handler(val) {\n        this.customInput = val;\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue?vue&type=script&lang=js&\n /* harmony default export */ var components_picker_dropdownvue_type_script_lang_js_ = (picker_dropdownvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/components/picker-dropdown.vue\n\n\n\n\n\n/* normalize component */\n\nvar picker_dropdown_component = Object(componentNormalizer["a" /* default */])(\n  components_picker_dropdownvue_type_script_lang_js_,\n  picker_dropdownvue_type_template_id_06601625_render,\n  picker_dropdownvue_type_template_id_06601625_staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var picker_dropdown_api; }\npicker_dropdown_component.options.__file = "packages/color-picker/src/components/picker-dropdown.vue"\n/* harmony default export */ var picker_dropdown = (picker_dropdown_component.exports);\n// EXTERNAL MODULE: external "element-ui/lib/utils/clickoutside"\nvar clickoutside_ = __webpack_require__(12);\nvar clickoutside_default = /*#__PURE__*/__webpack_require__.n(clickoutside_);\n\n// EXTERNAL MODULE: external "element-ui/lib/mixins/emitter"\nvar emitter_ = __webpack_require__(4);\nvar emitter_default = /*#__PURE__*/__webpack_require__.n(emitter_);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib??vue-loader-options!./packages/color-picker/src/main.vue?vue&type=script&lang=js&\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n\n\n/* harmony default export */ var mainvue_type_script_lang_js_ = ({\n  name: \'ElColorPicker\',\n\n  mixins: [emitter_default.a],\n\n  props: {\n    value: String,\n    showAlpha: Boolean,\n    colorFormat: String,\n    disabled: Boolean,\n    size: String,\n    popperClass: String,\n    predefine: Array\n  },\n\n  inject: {\n    elForm: {\n      default: \'\'\n    },\n    elFormItem: {\n      default: \'\'\n    }\n  },\n\n  directives: { Clickoutside: clickoutside_default.a },\n\n  computed: {\n    displayedColor: function displayedColor() {\n      if (!this.value && !this.showPanelColor) {\n        return \'transparent\';\n      }\n\n      return this.displayedRgb(this.color, this.showAlpha);\n    },\n    _elFormItemSize: function _elFormItemSize() {\n      return (this.elFormItem || {}).elFormItemSize;\n    },\n    colorSize: function colorSize() {\n      return this.size || this._elFormItemSize || (this.$ELEMENT || {}).size;\n    },\n    colorDisabled: function colorDisabled() {\n      return this.disabled || (this.elForm || {}).disabled;\n    }\n  },\n\n  watch: {\n    value: function value(val) {\n      if (!val) {\n        this.showPanelColor = false;\n      } else if (val && val !== this.color.value) {\n        this.color.fromString(val);\n      }\n    },\n\n    color: {\n      deep: true,\n      handler: function handler() {\n        this.showPanelColor = true;\n      }\n    },\n    displayedColor: function displayedColor(val) {\n      if (!this.showPicker) return;\n      var currentValueColor = new src_color({\n        enableAlpha: this.showAlpha,\n        format: this.colorFormat\n      });\n      currentValueColor.fromString(this.value);\n\n      var currentValueColorRgb = this.displayedRgb(currentValueColor, this.showAlpha);\n      if (val !== currentValueColorRgb) {\n        this.$emit(\'active-change\', val);\n      }\n    }\n  },\n\n  methods: {\n    handleTrigger: function handleTrigger() {\n      if (this.colorDisabled) return;\n      this.showPicker = !this.showPicker;\n    },\n    confirmValue: function confirmValue() {\n      var value = this.color.value;\n      this.$emit(\'input\', value);\n      this.$emit(\'change\', value);\n      this.dispatch(\'ElFormItem\', \'el.form.change\', value);\n      this.showPicker = false;\n    },\n    clearValue: function clearValue() {\n      this.$emit(\'input\', null);\n      this.$emit(\'change\', null);\n      if (this.value !== null) {\n        this.dispatch(\'ElFormItem\', \'el.form.change\', null);\n      }\n      this.showPanelColor = false;\n      this.showPicker = false;\n      this.resetColor();\n    },\n    hide: function hide() {\n      this.showPicker = false;\n      this.resetColor();\n    },\n    resetColor: function resetColor() {\n      var _this = this;\n\n      this.$nextTick(function (_) {\n        if (_this.value) {\n          _this.color.fromString(_this.value);\n        } else {\n          _this.showPanelColor = false;\n        }\n      });\n    },\n    displayedRgb: function displayedRgb(color, showAlpha) {\n      if (!(color instanceof src_color)) {\n        throw Error(\'color should be instance of Color Class\');\n      }\n\n      var _color$toRgb = color.toRgb(),\n          r = _color$toRgb.r,\n          g = _color$toRgb.g,\n          b = _color$toRgb.b;\n\n      return showAlpha ? \'rgba(\' + r + \', \' + g + \', \' + b + \', \' + color.get(\'alpha\') / 100 + \')\' : \'rgb(\' + r + \', \' + g + \', \' + b + \')\';\n    }\n  },\n\n  mounted: function mounted() {\n    var value = this.value;\n    if (value) {\n      this.color.fromString(value);\n    }\n    this.popperElm = this.$refs.dropdown.$el;\n  },\n  data: function data() {\n    var color = new src_color({\n      enableAlpha: this.showAlpha,\n      format: this.colorFormat\n    });\n\n    return {\n      color: color,\n      showPicker: false,\n      showPanelColor: false\n    };\n  },\n\n\n  components: {\n    PickerDropdown: picker_dropdown\n  }\n});\n// CONCATENATED MODULE: ./packages/color-picker/src/main.vue?vue&type=script&lang=js&\n /* harmony default export */ var src_mainvue_type_script_lang_js_ = (mainvue_type_script_lang_js_); \n// CONCATENATED MODULE: ./packages/color-picker/src/main.vue\n\n\n\n\n\n/* normalize component */\n\nvar main_component = Object(componentNormalizer["a" /* default */])(\n  src_mainvue_type_script_lang_js_,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var main_api; }\nmain_component.options.__file = "packages/color-picker/src/main.vue"\n/* harmony default export */ var main = (main_component.exports);\n// CONCATENATED MODULE: ./packages/color-picker/index.js\n\n\n/* istanbul ignore next */\nmain.install = function (Vue) {\n  Vue.component(main.name, main);\n};\n\n/* harmony default export */ var color_picker = __webpack_exports__["default"] = (main);\n\n/***/ }),\n\n/***/ 6:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(30);\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, exports) {\n\nmodule.exports = __webpack_require__(0);\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZWxlbWVudC11aS9saWIvY29sb3ItcGlja2VyLmpzPzc0NjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsZ0NBQWdDO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxrQkFBa0I7QUFDbEY7QUFDQSx5REFBeUQsY0FBYztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxpQ0FBaUM7QUFDbEYsd0hBQXdILG1CQUFtQixFQUFFO0FBQzdJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQywwQkFBMEIsRUFBRTtBQUMvRCx5Q0FBeUMsZUFBZTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELCtEQUErRDtBQUM3SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwyRkFBMkYsMkJBQTJCLEVBQUU7QUFDeEg7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxPQUFPOztBQUVQO0FBQ0E7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsRUFBc0I7O0FBRS9DLE9BQU87O0FBRVA7QUFDQTs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFtQzs7QUFFNUQsT0FBTzs7QUFFUDtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLEVBQXVCOztBQUVoRCxPQUFPOztBQUVQO0FBQ0E7O0FBRUEsaUJBQWlCLG1CQUFPLENBQUMsQ0FBK0I7O0FBRXhELE9BQU87O0FBRVA7QUFDQTs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFpQzs7QUFFMUQsT0FBTzs7QUFFUDtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQXVDO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGFBQWEsZ0RBQWdEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBLG9HQUFvRyxtQkFBbUIsRUFBRSxtQkFBbUIsOEhBQThIOztBQUUxUSxpREFBaUQsMENBQTBDLDBEQUEwRCxFQUFFOztBQUV2SjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG1CQUFtQjs7QUFFbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsbUJBQW1COztBQUVuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsVUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFVBQVU7QUFDVjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFVBQVU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxPQUFPOztBQUVQO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDRCQUE0QixFQUFFLEVBQUUsSUFBSSxhQUFhLEVBQUU7QUFDbkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLFNBQVMseUJBQXlCLE9BQU8sK0JBQStCLEVBQUU7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpREFBaUQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlCQUFpQjtBQUMvQyx3QkFBd0I7QUFDeEIsZUFBZTtBQUNmLDhCQUE4QixvQkFBb0IsbUJBQW1CLEVBQUU7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsdUJBQXVCLG1CQUFtQixFQUFFO0FBQzlFO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5Q0FBeUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDBDQUEwQztBQUMzRDtBQUNBO0FBQ0EsNEJBQTRCLHdDQUF3QztBQUNwRSx5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNkJBQTZCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDBCQUEwQjtBQUNwRCx1QkFBdUI7QUFDdkIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpQkFBaUIseUNBQXlDO0FBQzFELGlCQUFpQix5Q0FBeUM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG1IO0FBQ0E7QUFDQTs7QUFFQTs7Ozs7O0FBTUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSx1SDtBQUNBOzs7Ozs7QUFNQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsV0FBVyx1QkFBdUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULGFBQWE7QUFDYixPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwySDtBQUNBOzs7Ozs7QUFNQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsV0FBVyx5QkFBeUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0NBQW9DO0FBQ3hEO0FBQ0E7QUFDQSxPQUFPLDRDQUE0QztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseURBQXlEO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsc0JBQXNCLFNBQVMsaUNBQWlDLEVBQUU7QUFDbEU7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQSxhQUFhLDhCQUE4QjtBQUMzQyxZQUFZO0FBQ1osR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EscUg7QUFDQTs7Ozs7O0FBTUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUFXQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUFHSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7OztBQUdMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsaUk7QUFDQTs7Ozs7O0FBTUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUgsZUFBZSx1Q0FBdUM7O0FBRXREO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQSxtQ0FBbUM7QUFDbkMsS0FBSztBQUNMO0FBQ0Esc0VBQXNFO0FBQ3RFLEtBQUs7QUFDTDtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7OztBQUdIO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLG9HO0FBQ0E7Ozs7OztBQU1BOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLE9BQU87O0FBRVA7QUFDQTs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUE4Qjs7QUFFdkQsT0FBTzs7QUFFUDtBQUNBOztBQUVBLGlCQUFpQixtQkFBTyxDQUFDLENBQUs7O0FBRTlCLE9BQU87O0FBRVAsVUFBVSIsImZpbGUiOiIxNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9XG4vKioqKioqLyAoZnVuY3Rpb24obW9kdWxlcykgeyAvLyB3ZWJwYWNrQm9vdHN0cmFwXG4vKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4vKioqKioqLyBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4vKioqKioqLyBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbi8qKioqKiovIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuLyoqKioqKi8gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbi8qKioqKiovIFx0XHRcdGk6IG1vZHVsZUlkLFxuLyoqKioqKi8gXHRcdFx0bDogZmFsc2UsXG4vKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fVxuLyoqKioqKi8gXHRcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuLyoqKioqKi8gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4vKioqKioqLyBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuLyoqKioqKi9cbi8qKioqKiovIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuLyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbi8qKioqKiovIFx0fVxuLyoqKioqKi9cbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuLyoqKioqKi8gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbi8qKioqKiovIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuLyoqKioqKi8gXHRcdH1cbi8qKioqKiovIFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuLyoqKioqKi8gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuLyoqKioqKi8gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4vKioqKioqLyBcdFx0fVxuLyoqKioqKi8gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4vKioqKioqLyBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuLyoqKioqKi8gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3Rcbi8qKioqKiovIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4vKioqKioqLyBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbi8qKioqKiovIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4vKioqKioqLyBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuLyoqKioqKi8gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gbnM7XG4vKioqKioqLyBcdH07XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbi8qKioqKiovIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbi8qKioqKiovIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4vKioqKioqLyBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuLyoqKioqKi8gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbi8qKioqKiovIFx0XHRyZXR1cm4gZ2V0dGVyO1xuLyoqKioqKi8gXHR9O1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL2Rpc3QvXCI7XG4vKioqKioqL1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vKioqKioqLyBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDU0KTtcbi8qKioqKiovIH0pXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKi8gKHtcblxuLyoqKi8gMDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcblxuXCJ1c2Ugc3RyaWN0XCI7XG4vKiBoYXJtb255IGV4cG9ydCAoYmluZGluZykgKi8gX193ZWJwYWNrX3JlcXVpcmVfXy5kKF9fd2VicGFja19leHBvcnRzX18sIFwiYVwiLCBmdW5jdGlvbigpIHsgcmV0dXJuIG5vcm1hbGl6ZUNvbXBvbmVudDsgfSk7XG4vKiBnbG9iYWxzIF9fVlVFX1NTUl9DT05URVhUX18gKi9cblxuLy8gSU1QT1JUQU5UOiBEbyBOT1QgdXNlIEVTMjAxNSBmZWF0dXJlcyBpbiB0aGlzIGZpbGUgKGV4Y2VwdCBmb3IgbW9kdWxlcykuXG4vLyBUaGlzIG1vZHVsZSBpcyBhIHJ1bnRpbWUgdXRpbGl0eSBmb3IgY2xlYW5lciBjb21wb25lbnQgbW9kdWxlIG91dHB1dCBhbmQgd2lsbFxuLy8gYmUgaW5jbHVkZWQgaW4gdGhlIGZpbmFsIHdlYnBhY2sgdXNlciBidW5kbGUuXG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUNvbXBvbmVudCAoXG4gIHNjcmlwdEV4cG9ydHMsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmdW5jdGlvbmFsVGVtcGxhdGUsXG4gIGluamVjdFN0eWxlcyxcbiAgc2NvcGVJZCxcbiAgbW9kdWxlSWRlbnRpZmllciwgLyogc2VydmVyIG9ubHkgKi9cbiAgc2hhZG93TW9kZSAvKiB2dWUtY2xpIG9ubHkgKi9cbikge1xuICAvLyBWdWUuZXh0ZW5kIGNvbnN0cnVjdG9yIGV4cG9ydCBpbnRlcm9wXG4gIHZhciBvcHRpb25zID0gdHlwZW9mIHNjcmlwdEV4cG9ydHMgPT09ICdmdW5jdGlvbidcbiAgICA/IHNjcmlwdEV4cG9ydHMub3B0aW9uc1xuICAgIDogc2NyaXB0RXhwb3J0c1xuXG4gIC8vIHJlbmRlciBmdW5jdGlvbnNcbiAgaWYgKHJlbmRlcikge1xuICAgIG9wdGlvbnMucmVuZGVyID0gcmVuZGVyXG4gICAgb3B0aW9ucy5zdGF0aWNSZW5kZXJGbnMgPSBzdGF0aWNSZW5kZXJGbnNcbiAgICBvcHRpb25zLl9jb21waWxlZCA9IHRydWVcbiAgfVxuXG4gIC8vIGZ1bmN0aW9uYWwgdGVtcGxhdGVcbiAgaWYgKGZ1bmN0aW9uYWxUZW1wbGF0ZSkge1xuICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWVcbiAgfVxuXG4gIC8vIHNjb3BlZElkXG4gIGlmIChzY29wZUlkKSB7XG4gICAgb3B0aW9ucy5fc2NvcGVJZCA9ICdkYXRhLXYtJyArIHNjb3BlSWRcbiAgfVxuXG4gIHZhciBob29rXG4gIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7IC8vIHNlcnZlciBidWlsZFxuICAgIGhvb2sgPSBmdW5jdGlvbiAoY29udGV4dCkge1xuICAgICAgLy8gMi4zIGluamVjdGlvblxuICAgICAgY29udGV4dCA9XG4gICAgICAgIGNvbnRleHQgfHwgLy8gY2FjaGVkIGNhbGxcbiAgICAgICAgKHRoaXMuJHZub2RlICYmIHRoaXMuJHZub2RlLnNzckNvbnRleHQpIHx8IC8vIHN0YXRlZnVsXG4gICAgICAgICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC4kdm5vZGUgJiYgdGhpcy5wYXJlbnQuJHZub2RlLnNzckNvbnRleHQpIC8vIGZ1bmN0aW9uYWxcbiAgICAgIC8vIDIuMiB3aXRoIHJ1bkluTmV3Q29udGV4dDogdHJ1ZVxuICAgICAgaWYgKCFjb250ZXh0ICYmIHR5cGVvZiBfX1ZVRV9TU1JfQ09OVEVYVF9fICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfX1xuICAgICAgfVxuICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCBzdHlsZXNcbiAgICAgIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICAgICAgaW5qZWN0U3R5bGVzLmNhbGwodGhpcywgY29udGV4dClcbiAgICAgIH1cbiAgICAgIC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJyZW5jZVxuICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHtcbiAgICAgICAgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMuYWRkKG1vZHVsZUlkZW50aWZpZXIpXG4gICAgICB9XG4gICAgfVxuICAgIC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlXG4gICAgLy8gbmV2ZXIgZ2V0cyBjYWxsZWRcbiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2tcbiAgfSBlbHNlIGlmIChpbmplY3RTdHlsZXMpIHtcbiAgICBob29rID0gc2hhZG93TW9kZVxuICAgICAgPyBmdW5jdGlvbiAoKSB7IGluamVjdFN0eWxlcy5jYWxsKHRoaXMsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkgfVxuICAgICAgOiBpbmplY3RTdHlsZXNcbiAgfVxuXG4gIGlmIChob29rKSB7XG4gICAgaWYgKG9wdGlvbnMuZnVuY3Rpb25hbCkge1xuICAgICAgLy8gZm9yIHRlbXBsYXRlLW9ubHkgaG90LXJlbG9hZCBiZWNhdXNlIGluIHRoYXQgY2FzZSB0aGUgcmVuZGVyIGZuIGRvZXNuJ3RcbiAgICAgIC8vIGdvIHRocm91Z2ggdGhlIG5vcm1hbGl6ZXJcbiAgICAgIG9wdGlvbnMuX2luamVjdFN0eWxlcyA9IGhvb2tcbiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvYWwgY29tcG9uZW50IGluIHZ1ZSBmaWxlXG4gICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlclxuICAgICAgb3B0aW9ucy5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXJXaXRoU3R5bGVJbmplY3Rpb24gKGgsIGNvbnRleHQpIHtcbiAgICAgICAgaG9vay5jYWxsKGNvbnRleHQpXG4gICAgICAgIHJldHVybiBvcmlnaW5hbFJlbmRlcihoLCBjb250ZXh0KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBpbmplY3QgY29tcG9uZW50IHJlZ2lzdHJhdGlvbiBhcyBiZWZvcmVDcmVhdGUgaG9va1xuICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGVcbiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmdcbiAgICAgICAgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spXG4gICAgICAgIDogW2hvb2tdXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBleHBvcnRzOiBzY3JpcHRFeHBvcnRzLFxuICAgIG9wdGlvbnM6IG9wdGlvbnNcbiAgfVxufVxuXG5cbi8qKiovIH0pLFxuXG4vKioqLyAxMDpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvaW5wdXRcIik7XG5cbi8qKiovIH0pLFxuXG4vKioqLyAxMjpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvdXRpbHMvY2xpY2tvdXRzaWRlXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gMTQ6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL2J1dHRvblwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDQ6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImVsZW1lbnQtdWkvbGliL21peGlucy9lbWl0dGVyXCIpO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gNTpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvdXRpbHMvdnVlLXBvcHBlclwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDU0OlxuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cInVzZSBzdHJpY3RcIjtcbl9fd2VicGFja19yZXF1aXJlX18ucihfX3dlYnBhY2tfZXhwb3J0c19fKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL21haW4udnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTU1YzhhZGU3JlxudmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICB2YXIgX3ZtID0gdGhpc1xuICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnRcbiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIHtcbiAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwiY2xpY2tvdXRzaWRlXCIsXG4gICAgICAgICAgcmF3TmFtZTogXCJ2LWNsaWNrb3V0c2lkZVwiLFxuICAgICAgICAgIHZhbHVlOiBfdm0uaGlkZSxcbiAgICAgICAgICBleHByZXNzaW9uOiBcImhpZGVcIlxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgY2xhc3M6IFtcbiAgICAgICAgXCJlbC1jb2xvci1waWNrZXJcIixcbiAgICAgICAgX3ZtLmNvbG9yRGlzYWJsZWQgPyBcImlzLWRpc2FibGVkXCIgOiBcIlwiLFxuICAgICAgICBfdm0uY29sb3JTaXplID8gXCJlbC1jb2xvci1waWNrZXItLVwiICsgX3ZtLmNvbG9yU2l6ZSA6IFwiXCJcbiAgICAgIF1cbiAgICB9LFxuICAgIFtcbiAgICAgIF92bS5jb2xvckRpc2FibGVkXG4gICAgICAgID8gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1waWNrZXJfX21hc2tcIiB9KVxuICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1waWNrZXJfX3RyaWdnZXJcIixcbiAgICAgICAgICBvbjogeyBjbGljazogX3ZtLmhhbmRsZVRyaWdnZXIgfVxuICAgICAgICB9LFxuICAgICAgICBbXG4gICAgICAgICAgX2MoXG4gICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZWwtY29sb3ItcGlja2VyX19jb2xvclwiLFxuICAgICAgICAgICAgICBjbGFzczogeyBcImlzLWFscGhhXCI6IF92bS5zaG93QWxwaGEgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgX2MoXCJzcGFuXCIsIHtcbiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1waWNrZXJfX2NvbG9yLWlubmVyXCIsXG4gICAgICAgICAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogX3ZtLmRpc3BsYXllZENvbG9yXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgIV92bS52YWx1ZSAmJiAhX3ZtLnNob3dQYW5lbENvbG9yXG4gICAgICAgICAgICAgICAgPyBfYyhcInNwYW5cIiwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1waWNrZXJfX2VtcHR5IGVsLWljb24tY2xvc2VcIlxuICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICA6IF92bS5fZSgpXG4gICAgICAgICAgICBdXG4gICAgICAgICAgKSxcbiAgICAgICAgICBfYyhcInNwYW5cIiwge1xuICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LXNob3dcIixcbiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLnZhbHVlIHx8IF92bS5zaG93UGFuZWxDb2xvcixcbiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcInZhbHVlIHx8IHNob3dQYW5lbENvbG9yXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWNvbG9yLXBpY2tlcl9faWNvbiBlbC1pY29uLWFycm93LWRvd25cIlxuICAgICAgICAgIH0pXG4gICAgICAgIF1cbiAgICAgICksXG4gICAgICBfYyhcInBpY2tlci1kcm9wZG93blwiLCB7XG4gICAgICAgIHJlZjogXCJkcm9wZG93blwiLFxuICAgICAgICBjbGFzczogW1wiZWwtY29sb3ItcGlja2VyX19wYW5lbFwiLCBfdm0ucG9wcGVyQ2xhc3MgfHwgXCJcIl0sXG4gICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgY29sb3I6IF92bS5jb2xvcixcbiAgICAgICAgICBcInNob3ctYWxwaGFcIjogX3ZtLnNob3dBbHBoYSxcbiAgICAgICAgICBwcmVkZWZpbmU6IF92bS5wcmVkZWZpbmVcbiAgICAgICAgfSxcbiAgICAgICAgb246IHsgcGljazogX3ZtLmNvbmZpcm1WYWx1ZSwgY2xlYXI6IF92bS5jbGVhclZhbHVlIH0sXG4gICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgdmFsdWU6IF92bS5zaG93UGlja2VyLFxuICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHtcbiAgICAgICAgICAgIF92bS5zaG93UGlja2VyID0gJCR2XG4gICAgICAgICAgfSxcbiAgICAgICAgICBleHByZXNzaW9uOiBcInNob3dQaWNrZXJcIlxuICAgICAgICB9XG4gICAgICB9KVxuICAgIF0sXG4gICAgMVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9tYWluLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01NWM4YWRlNyZcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbG9yLmpzXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbnZhciBoc3YyaHNsID0gZnVuY3Rpb24gaHN2MmhzbChodWUsIHNhdCwgdmFsKSB7XG4gIHJldHVybiBbaHVlLCBzYXQgKiB2YWwgLyAoKGh1ZSA9ICgyIC0gc2F0KSAqIHZhbCkgPCAxID8gaHVlIDogMiAtIGh1ZSkgfHwgMCwgaHVlIC8gMl07XG59O1xuXG4vLyBOZWVkIHRvIGhhbmRsZSAxLjAgYXMgMTAwJSwgc2luY2Ugb25jZSBpdCBpcyBhIG51bWJlciwgdGhlcmUgaXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIGl0IGFuZCAxXG4vLyA8aHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy83NDIyMDcyL2phdmFzY3JpcHQtaG93LXRvLWRldGVjdC1udW1iZXItYXMtYS1kZWNpbWFsLWluY2x1ZGluZy0xLTA+XG52YXIgaXNPbmVQb2ludFplcm8gPSBmdW5jdGlvbiBpc09uZVBvaW50WmVybyhuKSB7XG4gIHJldHVybiB0eXBlb2YgbiA9PT0gJ3N0cmluZycgJiYgbi5pbmRleE9mKCcuJykgIT09IC0xICYmIHBhcnNlRmxvYXQobikgPT09IDE7XG59O1xuXG52YXIgaXNQZXJjZW50YWdlID0gZnVuY3Rpb24gaXNQZXJjZW50YWdlKG4pIHtcbiAgcmV0dXJuIHR5cGVvZiBuID09PSAnc3RyaW5nJyAmJiBuLmluZGV4T2YoJyUnKSAhPT0gLTE7XG59O1xuXG4vLyBUYWtlIGlucHV0IGZyb20gWzAsIG5dIGFuZCByZXR1cm4gaXQgYXMgWzAsIDFdXG52YXIgYm91bmQwMSA9IGZ1bmN0aW9uIGJvdW5kMDEodmFsdWUsIG1heCkge1xuICBpZiAoaXNPbmVQb2ludFplcm8odmFsdWUpKSB2YWx1ZSA9ICcxMDAlJztcblxuICB2YXIgcHJvY2Vzc1BlcmNlbnQgPSBpc1BlcmNlbnRhZ2UodmFsdWUpO1xuICB2YWx1ZSA9IE1hdGgubWluKG1heCwgTWF0aC5tYXgoMCwgcGFyc2VGbG9hdCh2YWx1ZSkpKTtcblxuICAvLyBBdXRvbWF0aWNhbGx5IGNvbnZlcnQgcGVyY2VudGFnZSBpbnRvIG51bWJlclxuICBpZiAocHJvY2Vzc1BlcmNlbnQpIHtcbiAgICB2YWx1ZSA9IHBhcnNlSW50KHZhbHVlICogbWF4LCAxMCkgLyAxMDA7XG4gIH1cblxuICAvLyBIYW5kbGUgZmxvYXRpbmcgcG9pbnQgcm91bmRpbmcgZXJyb3JzXG4gIGlmIChNYXRoLmFicyh2YWx1ZSAtIG1heCkgPCAwLjAwMDAwMSkge1xuICAgIHJldHVybiAxO1xuICB9XG5cbiAgLy8gQ29udmVydCBpbnRvIFswLCAxXSByYW5nZSBpZiBpdCBpc24ndCBhbHJlYWR5XG4gIHJldHVybiB2YWx1ZSAlIG1heCAvIHBhcnNlRmxvYXQobWF4KTtcbn07XG5cbnZhciBJTlRfSEVYX01BUCA9IHsgMTA6ICdBJywgMTE6ICdCJywgMTI6ICdDJywgMTM6ICdEJywgMTQ6ICdFJywgMTU6ICdGJyB9O1xuXG52YXIgdG9IZXggPSBmdW5jdGlvbiB0b0hleChfcmVmKSB7XG4gIHZhciByID0gX3JlZi5yLFxuICAgICAgZyA9IF9yZWYuZyxcbiAgICAgIGIgPSBfcmVmLmI7XG5cbiAgdmFyIGhleE9uZSA9IGZ1bmN0aW9uIGhleE9uZSh2YWx1ZSkge1xuICAgIHZhbHVlID0gTWF0aC5taW4oTWF0aC5yb3VuZCh2YWx1ZSksIDI1NSk7XG4gICAgdmFyIGhpZ2ggPSBNYXRoLmZsb29yKHZhbHVlIC8gMTYpO1xuICAgIHZhciBsb3cgPSB2YWx1ZSAlIDE2O1xuICAgIHJldHVybiAnJyArIChJTlRfSEVYX01BUFtoaWdoXSB8fCBoaWdoKSArIChJTlRfSEVYX01BUFtsb3ddIHx8IGxvdyk7XG4gIH07XG5cbiAgaWYgKGlzTmFOKHIpIHx8IGlzTmFOKGcpIHx8IGlzTmFOKGIpKSByZXR1cm4gJyc7XG5cbiAgcmV0dXJuICcjJyArIGhleE9uZShyKSArIGhleE9uZShnKSArIGhleE9uZShiKTtcbn07XG5cbnZhciBIRVhfSU5UX01BUCA9IHsgQTogMTAsIEI6IDExLCBDOiAxMiwgRDogMTMsIEU6IDE0LCBGOiAxNSB9O1xuXG52YXIgcGFyc2VIZXhDaGFubmVsID0gZnVuY3Rpb24gcGFyc2VIZXhDaGFubmVsKGhleCkge1xuICBpZiAoaGV4Lmxlbmd0aCA9PT0gMikge1xuICAgIHJldHVybiAoSEVYX0lOVF9NQVBbaGV4WzBdLnRvVXBwZXJDYXNlKCldIHx8ICtoZXhbMF0pICogMTYgKyAoSEVYX0lOVF9NQVBbaGV4WzFdLnRvVXBwZXJDYXNlKCldIHx8ICtoZXhbMV0pO1xuICB9XG5cbiAgcmV0dXJuIEhFWF9JTlRfTUFQW2hleFsxXS50b1VwcGVyQ2FzZSgpXSB8fCAraGV4WzFdO1xufTtcblxudmFyIGhzbDJoc3YgPSBmdW5jdGlvbiBoc2wyaHN2KGh1ZSwgc2F0LCBsaWdodCkge1xuICBzYXQgPSBzYXQgLyAxMDA7XG4gIGxpZ2h0ID0gbGlnaHQgLyAxMDA7XG4gIHZhciBzbWluID0gc2F0O1xuICB2YXIgbG1pbiA9IE1hdGgubWF4KGxpZ2h0LCAwLjAxKTtcbiAgdmFyIHN2ID0gdm9pZCAwO1xuICB2YXIgdiA9IHZvaWQgMDtcblxuICBsaWdodCAqPSAyO1xuICBzYXQgKj0gbGlnaHQgPD0gMSA/IGxpZ2h0IDogMiAtIGxpZ2h0O1xuICBzbWluICo9IGxtaW4gPD0gMSA/IGxtaW4gOiAyIC0gbG1pbjtcbiAgdiA9IChsaWdodCArIHNhdCkgLyAyO1xuICBzdiA9IGxpZ2h0ID09PSAwID8gMiAqIHNtaW4gLyAobG1pbiArIHNtaW4pIDogMiAqIHNhdCAvIChsaWdodCArIHNhdCk7XG5cbiAgcmV0dXJuIHtcbiAgICBoOiBodWUsXG4gICAgczogc3YgKiAxMDAsXG4gICAgdjogdiAqIDEwMFxuICB9O1xufTtcblxuLy8gYHJnYlRvSHN2YFxuLy8gQ29udmVydHMgYW4gUkdCIGNvbG9yIHZhbHVlIHRvIEhTVlxuLy8gKkFzc3VtZXM6KiByLCBnLCBhbmQgYiBhcmUgY29udGFpbmVkIGluIHRoZSBzZXQgWzAsIDI1NV0gb3IgWzAsIDFdXG4vLyAqUmV0dXJuczoqIHsgaCwgcywgdiB9IGluIFswLDFdXG52YXIgcmdiMmhzdiA9IGZ1bmN0aW9uIHJnYjJoc3YociwgZywgYikge1xuICByID0gYm91bmQwMShyLCAyNTUpO1xuICBnID0gYm91bmQwMShnLCAyNTUpO1xuICBiID0gYm91bmQwMShiLCAyNTUpO1xuXG4gIHZhciBtYXggPSBNYXRoLm1heChyLCBnLCBiKTtcbiAgdmFyIG1pbiA9IE1hdGgubWluKHIsIGcsIGIpO1xuICB2YXIgaCA9IHZvaWQgMCxcbiAgICAgIHMgPSB2b2lkIDA7XG4gIHZhciB2ID0gbWF4O1xuXG4gIHZhciBkID0gbWF4IC0gbWluO1xuICBzID0gbWF4ID09PSAwID8gMCA6IGQgLyBtYXg7XG5cbiAgaWYgKG1heCA9PT0gbWluKSB7XG4gICAgaCA9IDA7IC8vIGFjaHJvbWF0aWNcbiAgfSBlbHNlIHtcbiAgICBzd2l0Y2ggKG1heCkge1xuICAgICAgY2FzZSByOlxuICAgICAgICBoID0gKGcgLSBiKSAvIGQgKyAoZyA8IGIgPyA2IDogMCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBnOlxuICAgICAgICBoID0gKGIgLSByKSAvIGQgKyAyO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgYjpcbiAgICAgICAgaCA9IChyIC0gZykgLyBkICsgNDtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIGggLz0gNjtcbiAgfVxuXG4gIHJldHVybiB7IGg6IGggKiAzNjAsIHM6IHMgKiAxMDAsIHY6IHYgKiAxMDAgfTtcbn07XG5cbi8vIGBoc3ZUb1JnYmBcbi8vIENvbnZlcnRzIGFuIEhTViBjb2xvciB2YWx1ZSB0byBSR0IuXG4vLyAqQXNzdW1lczoqIGggaXMgY29udGFpbmVkIGluIFswLCAxXSBvciBbMCwgMzYwXSBhbmQgcyBhbmQgdiBhcmUgY29udGFpbmVkIGluIFswLCAxXSBvciBbMCwgMTAwXVxuLy8gKlJldHVybnM6KiB7IHIsIGcsIGIgfSBpbiB0aGUgc2V0IFswLCAyNTVdXG52YXIgaHN2MnJnYiA9IGZ1bmN0aW9uIGhzdjJyZ2IoaCwgcywgdikge1xuICBoID0gYm91bmQwMShoLCAzNjApICogNjtcbiAgcyA9IGJvdW5kMDEocywgMTAwKTtcbiAgdiA9IGJvdW5kMDEodiwgMTAwKTtcblxuICB2YXIgaSA9IE1hdGguZmxvb3IoaCk7XG4gIHZhciBmID0gaCAtIGk7XG4gIHZhciBwID0gdiAqICgxIC0gcyk7XG4gIHZhciBxID0gdiAqICgxIC0gZiAqIHMpO1xuICB2YXIgdCA9IHYgKiAoMSAtICgxIC0gZikgKiBzKTtcbiAgdmFyIG1vZCA9IGkgJSA2O1xuICB2YXIgciA9IFt2LCBxLCBwLCBwLCB0LCB2XVttb2RdO1xuICB2YXIgZyA9IFt0LCB2LCB2LCBxLCBwLCBwXVttb2RdO1xuICB2YXIgYiA9IFtwLCBwLCB0LCB2LCB2LCBxXVttb2RdO1xuXG4gIHJldHVybiB7XG4gICAgcjogTWF0aC5yb3VuZChyICogMjU1KSxcbiAgICBnOiBNYXRoLnJvdW5kKGcgKiAyNTUpLFxuICAgIGI6IE1hdGgucm91bmQoYiAqIDI1NSlcbiAgfTtcbn07XG5cbnZhciBDb2xvciA9IGZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gQ29sb3Iob3B0aW9ucykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb2xvcik7XG5cbiAgICB0aGlzLl9odWUgPSAwO1xuICAgIHRoaXMuX3NhdHVyYXRpb24gPSAxMDA7XG4gICAgdGhpcy5fdmFsdWUgPSAxMDA7XG4gICAgdGhpcy5fYWxwaGEgPSAxMDA7XG5cbiAgICB0aGlzLmVuYWJsZUFscGhhID0gZmFsc2U7XG4gICAgdGhpcy5mb3JtYXQgPSAnaGV4JztcbiAgICB0aGlzLnZhbHVlID0gJyc7XG5cbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcblxuICAgIGZvciAodmFyIG9wdGlvbiBpbiBvcHRpb25zKSB7XG4gICAgICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShvcHRpb24pKSB7XG4gICAgICAgIHRoaXNbb3B0aW9uXSA9IG9wdGlvbnNbb3B0aW9uXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmRvT25DaGFuZ2UoKTtcbiAgfVxuXG4gIENvbG9yLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiBzZXQocHJvcCwgdmFsdWUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSAmJiAodHlwZW9mIHByb3AgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKHByb3ApKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGZvciAodmFyIHAgaW4gcHJvcCkge1xuICAgICAgICBpZiAocHJvcC5oYXNPd25Qcm9wZXJ0eShwKSkge1xuICAgICAgICAgIHRoaXMuc2V0KHAsIHByb3BbcF0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzWydfJyArIHByb3BdID0gdmFsdWU7XG4gICAgdGhpcy5kb09uQ2hhbmdlKCk7XG4gIH07XG5cbiAgQ29sb3IucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIGdldChwcm9wKSB7XG4gICAgcmV0dXJuIHRoaXNbJ18nICsgcHJvcF07XG4gIH07XG5cbiAgQ29sb3IucHJvdG90eXBlLnRvUmdiID0gZnVuY3Rpb24gdG9SZ2IoKSB7XG4gICAgcmV0dXJuIGhzdjJyZ2IodGhpcy5faHVlLCB0aGlzLl9zYXR1cmF0aW9uLCB0aGlzLl92YWx1ZSk7XG4gIH07XG5cbiAgQ29sb3IucHJvdG90eXBlLmZyb21TdHJpbmcgPSBmdW5jdGlvbiBmcm9tU3RyaW5nKHZhbHVlKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmICghdmFsdWUpIHtcbiAgICAgIHRoaXMuX2h1ZSA9IDA7XG4gICAgICB0aGlzLl9zYXR1cmF0aW9uID0gMTAwO1xuICAgICAgdGhpcy5fdmFsdWUgPSAxMDA7XG5cbiAgICAgIHRoaXMuZG9PbkNoYW5nZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBmcm9tSFNWID0gZnVuY3Rpb24gZnJvbUhTVihoLCBzLCB2KSB7XG4gICAgICBfdGhpcy5faHVlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMzYwLCBoKSk7XG4gICAgICBfdGhpcy5fc2F0dXJhdGlvbiA9IE1hdGgubWF4KDAsIE1hdGgubWluKDEwMCwgcykpO1xuICAgICAgX3RoaXMuX3ZhbHVlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4oMTAwLCB2KSk7XG5cbiAgICAgIF90aGlzLmRvT25DaGFuZ2UoKTtcbiAgICB9O1xuXG4gICAgaWYgKHZhbHVlLmluZGV4T2YoJ2hzbCcpICE9PSAtMSkge1xuICAgICAgdmFyIHBhcnRzID0gdmFsdWUucmVwbGFjZSgvaHNsYXxoc2x8XFwofFxcKS9nbSwgJycpLnNwbGl0KC9cXHN8LC9nKS5maWx0ZXIoZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICByZXR1cm4gdmFsICE9PSAnJztcbiAgICAgIH0pLm1hcChmdW5jdGlvbiAodmFsLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gaW5kZXggPiAyID8gcGFyc2VGbG9hdCh2YWwpIDogcGFyc2VJbnQodmFsLCAxMCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gNCkge1xuICAgICAgICB0aGlzLl9hbHBoYSA9IE1hdGguZmxvb3IocGFyc2VGbG9hdChwYXJ0c1szXSkgKiAxMDApO1xuICAgICAgfSBlbHNlIGlmIChwYXJ0cy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgdGhpcy5fYWxwaGEgPSAxMDA7XG4gICAgICB9XG4gICAgICBpZiAocGFydHMubGVuZ3RoID49IDMpIHtcbiAgICAgICAgdmFyIF9oc2wyaHN2ID0gaHNsMmhzdihwYXJ0c1swXSwgcGFydHNbMV0sIHBhcnRzWzJdKSxcbiAgICAgICAgICAgIGggPSBfaHNsMmhzdi5oLFxuICAgICAgICAgICAgcyA9IF9oc2wyaHN2LnMsXG4gICAgICAgICAgICB2ID0gX2hzbDJoc3YudjtcblxuICAgICAgICBmcm9tSFNWKGgsIHMsIHYpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodmFsdWUuaW5kZXhPZignaHN2JykgIT09IC0xKSB7XG4gICAgICB2YXIgX3BhcnRzID0gdmFsdWUucmVwbGFjZSgvaHN2YXxoc3Z8XFwofFxcKS9nbSwgJycpLnNwbGl0KC9cXHN8LC9nKS5maWx0ZXIoZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICByZXR1cm4gdmFsICE9PSAnJztcbiAgICAgIH0pLm1hcChmdW5jdGlvbiAodmFsLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gaW5kZXggPiAyID8gcGFyc2VGbG9hdCh2YWwpIDogcGFyc2VJbnQodmFsLCAxMCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKF9wYXJ0cy5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgdGhpcy5fYWxwaGEgPSBNYXRoLmZsb29yKHBhcnNlRmxvYXQoX3BhcnRzWzNdKSAqIDEwMCk7XG4gICAgICB9IGVsc2UgaWYgKF9wYXJ0cy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgdGhpcy5fYWxwaGEgPSAxMDA7XG4gICAgICB9XG4gICAgICBpZiAoX3BhcnRzLmxlbmd0aCA+PSAzKSB7XG4gICAgICAgIGZyb21IU1YoX3BhcnRzWzBdLCBfcGFydHNbMV0sIF9wYXJ0c1syXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh2YWx1ZS5pbmRleE9mKCdyZ2InKSAhPT0gLTEpIHtcbiAgICAgIHZhciBfcGFydHMyID0gdmFsdWUucmVwbGFjZSgvcmdiYXxyZ2J8XFwofFxcKS9nbSwgJycpLnNwbGl0KC9cXHN8LC9nKS5maWx0ZXIoZnVuY3Rpb24gKHZhbCkge1xuICAgICAgICByZXR1cm4gdmFsICE9PSAnJztcbiAgICAgIH0pLm1hcChmdW5jdGlvbiAodmFsLCBpbmRleCkge1xuICAgICAgICByZXR1cm4gaW5kZXggPiAyID8gcGFyc2VGbG9hdCh2YWwpIDogcGFyc2VJbnQodmFsLCAxMCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKF9wYXJ0czIubGVuZ3RoID09PSA0KSB7XG4gICAgICAgIHRoaXMuX2FscGhhID0gTWF0aC5mbG9vcihwYXJzZUZsb2F0KF9wYXJ0czJbM10pICogMTAwKTtcbiAgICAgIH0gZWxzZSBpZiAoX3BhcnRzMi5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgdGhpcy5fYWxwaGEgPSAxMDA7XG4gICAgICB9XG4gICAgICBpZiAoX3BhcnRzMi5sZW5ndGggPj0gMykge1xuICAgICAgICB2YXIgX3JnYjJoc3YgPSByZ2IyaHN2KF9wYXJ0czJbMF0sIF9wYXJ0czJbMV0sIF9wYXJ0czJbMl0pLFxuICAgICAgICAgICAgX2ggPSBfcmdiMmhzdi5oLFxuICAgICAgICAgICAgX3MgPSBfcmdiMmhzdi5zLFxuICAgICAgICAgICAgX3YgPSBfcmdiMmhzdi52O1xuXG4gICAgICAgIGZyb21IU1YoX2gsIF9zLCBfdik7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh2YWx1ZS5pbmRleE9mKCcjJykgIT09IC0xKSB7XG4gICAgICB2YXIgaGV4ID0gdmFsdWUucmVwbGFjZSgnIycsICcnKS50cmltKCk7XG4gICAgICBpZiAoIS9eKD86WzAtOWEtZkEtRl17M30pezEsMn18WzAtOWEtZkEtRl17OH0kLy50ZXN0KGhleCkpIHJldHVybjtcbiAgICAgIHZhciByID0gdm9pZCAwLFxuICAgICAgICAgIGcgPSB2b2lkIDAsXG4gICAgICAgICAgYiA9IHZvaWQgMDtcblxuICAgICAgaWYgKGhleC5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgciA9IHBhcnNlSGV4Q2hhbm5lbChoZXhbMF0gKyBoZXhbMF0pO1xuICAgICAgICBnID0gcGFyc2VIZXhDaGFubmVsKGhleFsxXSArIGhleFsxXSk7XG4gICAgICAgIGIgPSBwYXJzZUhleENoYW5uZWwoaGV4WzJdICsgaGV4WzJdKTtcbiAgICAgIH0gZWxzZSBpZiAoaGV4Lmxlbmd0aCA9PT0gNiB8fCBoZXgubGVuZ3RoID09PSA4KSB7XG4gICAgICAgIHIgPSBwYXJzZUhleENoYW5uZWwoaGV4LnN1YnN0cmluZygwLCAyKSk7XG4gICAgICAgIGcgPSBwYXJzZUhleENoYW5uZWwoaGV4LnN1YnN0cmluZygyLCA0KSk7XG4gICAgICAgIGIgPSBwYXJzZUhleENoYW5uZWwoaGV4LnN1YnN0cmluZyg0LCA2KSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChoZXgubGVuZ3RoID09PSA4KSB7XG4gICAgICAgIHRoaXMuX2FscGhhID0gTWF0aC5mbG9vcihwYXJzZUhleENoYW5uZWwoaGV4LnN1YnN0cmluZyg2KSkgLyAyNTUgKiAxMDApO1xuICAgICAgfSBlbHNlIGlmIChoZXgubGVuZ3RoID09PSAzIHx8IGhleC5sZW5ndGggPT09IDYpIHtcbiAgICAgICAgdGhpcy5fYWxwaGEgPSAxMDA7XG4gICAgICB9XG5cbiAgICAgIHZhciBfcmdiMmhzdjIgPSByZ2IyaHN2KHIsIGcsIGIpLFxuICAgICAgICAgIF9oMiA9IF9yZ2IyaHN2Mi5oLFxuICAgICAgICAgIF9zMiA9IF9yZ2IyaHN2Mi5zLFxuICAgICAgICAgIF92MiA9IF9yZ2IyaHN2Mi52O1xuXG4gICAgICBmcm9tSFNWKF9oMiwgX3MyLCBfdjIpO1xuICAgIH1cbiAgfTtcblxuICBDb2xvci5wcm90b3R5cGUuY29tcGFyZSA9IGZ1bmN0aW9uIGNvbXBhcmUoY29sb3IpIHtcbiAgICByZXR1cm4gTWF0aC5hYnMoY29sb3IuX2h1ZSAtIHRoaXMuX2h1ZSkgPCAyICYmIE1hdGguYWJzKGNvbG9yLl9zYXR1cmF0aW9uIC0gdGhpcy5fc2F0dXJhdGlvbikgPCAxICYmIE1hdGguYWJzKGNvbG9yLl92YWx1ZSAtIHRoaXMuX3ZhbHVlKSA8IDEgJiYgTWF0aC5hYnMoY29sb3IuX2FscGhhIC0gdGhpcy5fYWxwaGEpIDwgMTtcbiAgfTtcblxuICBDb2xvci5wcm90b3R5cGUuZG9PbkNoYW5nZSA9IGZ1bmN0aW9uIGRvT25DaGFuZ2UoKSB7XG4gICAgdmFyIF9odWUgPSB0aGlzLl9odWUsXG4gICAgICAgIF9zYXR1cmF0aW9uID0gdGhpcy5fc2F0dXJhdGlvbixcbiAgICAgICAgX3ZhbHVlID0gdGhpcy5fdmFsdWUsXG4gICAgICAgIF9hbHBoYSA9IHRoaXMuX2FscGhhLFxuICAgICAgICBmb3JtYXQgPSB0aGlzLmZvcm1hdDtcblxuXG4gICAgaWYgKHRoaXMuZW5hYmxlQWxwaGEpIHtcbiAgICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICAgIGNhc2UgJ2hzbCc6XG4gICAgICAgICAgdmFyIGhzbCA9IGhzdjJoc2woX2h1ZSwgX3NhdHVyYXRpb24gLyAxMDAsIF92YWx1ZSAvIDEwMCk7XG4gICAgICAgICAgdGhpcy52YWx1ZSA9ICdoc2xhKCcgKyBfaHVlICsgJywgJyArIE1hdGgucm91bmQoaHNsWzFdICogMTAwKSArICclLCAnICsgTWF0aC5yb3VuZChoc2xbMl0gKiAxMDApICsgJyUsICcgKyBfYWxwaGEgLyAxMDAgKyAnKSc7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ2hzdic6XG4gICAgICAgICAgdGhpcy52YWx1ZSA9ICdoc3ZhKCcgKyBfaHVlICsgJywgJyArIE1hdGgucm91bmQoX3NhdHVyYXRpb24pICsgJyUsICcgKyBNYXRoLnJvdW5kKF92YWx1ZSkgKyAnJSwgJyArIF9hbHBoYSAvIDEwMCArICcpJztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB2YXIgX2hzdjJyZ2IgPSBoc3YycmdiKF9odWUsIF9zYXR1cmF0aW9uLCBfdmFsdWUpLFxuICAgICAgICAgICAgICByID0gX2hzdjJyZ2IucixcbiAgICAgICAgICAgICAgZyA9IF9oc3YycmdiLmcsXG4gICAgICAgICAgICAgIGIgPSBfaHN2MnJnYi5iO1xuXG4gICAgICAgICAgdGhpcy52YWx1ZSA9ICdyZ2JhKCcgKyByICsgJywgJyArIGcgKyAnLCAnICsgYiArICcsICcgKyBfYWxwaGEgLyAxMDAgKyAnKSc7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHN3aXRjaCAoZm9ybWF0KSB7XG4gICAgICAgIGNhc2UgJ2hzbCc6XG4gICAgICAgICAgdmFyIF9oc2wgPSBoc3YyaHNsKF9odWUsIF9zYXR1cmF0aW9uIC8gMTAwLCBfdmFsdWUgLyAxMDApO1xuICAgICAgICAgIHRoaXMudmFsdWUgPSAnaHNsKCcgKyBfaHVlICsgJywgJyArIE1hdGgucm91bmQoX2hzbFsxXSAqIDEwMCkgKyAnJSwgJyArIE1hdGgucm91bmQoX2hzbFsyXSAqIDEwMCkgKyAnJSknO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdoc3YnOlxuICAgICAgICAgIHRoaXMudmFsdWUgPSAnaHN2KCcgKyBfaHVlICsgJywgJyArIE1hdGgucm91bmQoX3NhdHVyYXRpb24pICsgJyUsICcgKyBNYXRoLnJvdW5kKF92YWx1ZSkgKyAnJSknO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdyZ2InOlxuICAgICAgICAgIHZhciBfaHN2MnJnYjIgPSBoc3YycmdiKF9odWUsIF9zYXR1cmF0aW9uLCBfdmFsdWUpLFxuICAgICAgICAgICAgICBfciA9IF9oc3YycmdiMi5yLFxuICAgICAgICAgICAgICBfZyA9IF9oc3YycmdiMi5nLFxuICAgICAgICAgICAgICBfYiA9IF9oc3YycmdiMi5iO1xuXG4gICAgICAgICAgdGhpcy52YWx1ZSA9ICdyZ2IoJyArIF9yICsgJywgJyArIF9nICsgJywgJyArIF9iICsgJyknO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRoaXMudmFsdWUgPSB0b0hleChoc3YycmdiKF9odWUsIF9zYXR1cmF0aW9uLCBfdmFsdWUpKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIENvbG9yO1xufSgpO1xuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBzcmNfY29sb3IgPSAoQ29sb3IpO1xuO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcGlja2VyLWRyb3Bkb3duLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNjYwMTYyNSZcbnZhciBwaWNrZXJfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjYwMTYyNV9yZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJ0cmFuc2l0aW9uXCIsXG4gICAgeyBhdHRyczogeyBuYW1lOiBcImVsLXpvb20taW4tdG9wXCIgfSwgb246IHsgXCJhZnRlci1sZWF2ZVwiOiBfdm0uZG9EZXN0cm95IH0gfSxcbiAgICBbXG4gICAgICBfYyhcbiAgICAgICAgXCJkaXZcIixcbiAgICAgICAge1xuICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgICAgIHJhd05hbWU6IFwidi1zaG93XCIsXG4gICAgICAgICAgICAgIHZhbHVlOiBfdm0uc2hvd1BvcHBlcixcbiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJzaG93UG9wcGVyXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWNvbG9yLWRyb3Bkb3duXCJcbiAgICAgICAgfSxcbiAgICAgICAgW1xuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZWwtY29sb3ItZHJvcGRvd25fX21haW4td3JhcHBlclwiIH0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIF9jKFwiaHVlLXNsaWRlclwiLCB7XG4gICAgICAgICAgICAgICAgcmVmOiBcImh1ZVwiLFxuICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGZsb2F0OiBcInJpZ2h0XCIgfSxcbiAgICAgICAgICAgICAgICBhdHRyczogeyBjb2xvcjogX3ZtLmNvbG9yLCB2ZXJ0aWNhbDogXCJcIiB9XG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBfYyhcInN2LXBhbmVsXCIsIHsgcmVmOiBcInNsXCIsIGF0dHJzOiB7IGNvbG9yOiBfdm0uY29sb3IgfSB9KVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIDFcbiAgICAgICAgICApLFxuICAgICAgICAgIF92bS5zaG93QWxwaGFcbiAgICAgICAgICAgID8gX2MoXCJhbHBoYS1zbGlkZXJcIiwgeyByZWY6IFwiYWxwaGFcIiwgYXR0cnM6IHsgY29sb3I6IF92bS5jb2xvciB9IH0pXG4gICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgIF92bS5wcmVkZWZpbmVcbiAgICAgICAgICAgID8gX2MoXCJwcmVkZWZpbmVcIiwge1xuICAgICAgICAgICAgICAgIGF0dHJzOiB7IGNvbG9yOiBfdm0uY29sb3IsIGNvbG9yczogX3ZtLnByZWRlZmluZSB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgIF9jKFxuICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZWwtY29sb3ItZHJvcGRvd25fX2J0bnNcIiB9LFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcInNwYW5cIixcbiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImVsLWNvbG9yLWRyb3Bkb3duX192YWx1ZVwiIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX2MoXCJlbC1pbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IFwidmFsaWRhdGUtZXZlbnRcIjogZmFsc2UsIHNpemU6IFwibWluaVwiIH0sXG4gICAgICAgICAgICAgICAgICAgIG9uOiB7IGJsdXI6IF92bS5oYW5kbGVDb25maXJtIH0sXG4gICAgICAgICAgICAgICAgICAgIG5hdGl2ZU9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAga2V5dXA6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAhKFwiYnV0dG9uXCIgaW4gJGV2ZW50KSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2soXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LmtleUNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5rZXksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJFbnRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5oYW5kbGVDb25maXJtKCRldmVudClcbiAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5jdXN0b21JbnB1dCxcbiAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uY3VzdG9tSW5wdXQgPSAkJHZcbiAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiY3VzdG9tSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICBcImVsLWJ1dHRvblwiLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWNvbG9yLWRyb3Bkb3duX19saW5rLWJ0blwiLFxuICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc2l6ZTogXCJtaW5pXCIsIHR5cGU6IFwidGV4dFwiIH0sXG4gICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgX3ZtLiRlbWl0KFwiY2xlYXJcIilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0udChcImVsLmNvbG9ycGlja2VyLmNsZWFyXCIpKSArXG4gICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICBcIlxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgXCJlbC1idXR0b25cIixcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1kcm9wZG93bl9fYnRuXCIsXG4gICAgICAgICAgICAgICAgICBhdHRyczogeyBwbGFpbjogXCJcIiwgc2l6ZTogXCJtaW5pXCIgfSxcbiAgICAgICAgICAgICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uY29uZmlybVZhbHVlIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLnQoXCJlbC5jb2xvcnBpY2tlci5jb25maXJtXCIpKSArXG4gICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICBcIlxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIDFcbiAgICAgICAgICApXG4gICAgICAgIF0sXG4gICAgICAgIDFcbiAgICAgIClcbiAgICBdXG4gIClcbn1cbnZhciBwaWNrZXJfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjYwMTYyNV9zdGF0aWNSZW5kZXJGbnMgPSBbXVxucGlja2VyX2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY2MDE2MjVfcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcGlja2VyLWRyb3Bkb3duLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNjYwMTYyNSZcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvc3YtcGFuZWwudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPWQ4NTgzNTk2JlxudmFyIHN2X3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfZDg1ODM1OTZfcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgc3RhdGljQ2xhc3M6IFwiZWwtY29sb3Itc3ZwYW5lbFwiLFxuICAgICAgc3R5bGU6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBfdm0uYmFja2dyb3VuZFxuICAgICAgfVxuICAgIH0sXG4gICAgW1xuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1zdnBhbmVsX193aGl0ZVwiIH0pLFxuICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1zdnBhbmVsX19ibGFja1wiIH0pLFxuICAgICAgX2MoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHtcbiAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1zdnBhbmVsX19jdXJzb3JcIixcbiAgICAgICAgICBzdHlsZToge1xuICAgICAgICAgICAgdG9wOiBfdm0uY3Vyc29yVG9wICsgXCJweFwiLFxuICAgICAgICAgICAgbGVmdDogX3ZtLmN1cnNvckxlZnQgKyBcInB4XCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFtfYyhcImRpdlwiKV1cbiAgICAgIClcbiAgICBdXG4gIClcbn1cbnZhciBzdl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Q4NTgzNTk2X3N0YXRpY1JlbmRlckZucyA9IFtdXG5zdl9wYW5lbHZ1ZV90eXBlX3RlbXBsYXRlX2lkX2Q4NTgzNTk2X3JlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3N2LXBhbmVsLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD1kODU4MzU5NiZcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcInZ1ZVwiXG52YXIgZXh0ZXJuYWxfdnVlXyA9IF9fd2VicGFja19yZXF1aXJlX18oNyk7XG52YXIgZXh0ZXJuYWxfdnVlX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX193ZWJwYWNrX3JlcXVpcmVfXy5uKGV4dGVybmFsX3Z1ZV8pO1xuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvZHJhZ2dhYmxlLmpzXG5cbnZhciBpc0RyYWdnaW5nID0gZmFsc2U7XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIGRyYWdnYWJsZSA9IChmdW5jdGlvbiAoZWxlbWVudCwgb3B0aW9ucykge1xuICBpZiAoZXh0ZXJuYWxfdnVlX2RlZmF1bHQuYS5wcm90b3R5cGUuJGlzU2VydmVyKSByZXR1cm47XG4gIHZhciBtb3ZlRm4gPSBmdW5jdGlvbiBtb3ZlRm4oZXZlbnQpIHtcbiAgICBpZiAob3B0aW9ucy5kcmFnKSB7XG4gICAgICBvcHRpb25zLmRyYWcoZXZlbnQpO1xuICAgIH1cbiAgfTtcbiAgdmFyIHVwRm4gPSBmdW5jdGlvbiB1cEZuKGV2ZW50KSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgbW92ZUZuKTtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdtb3VzZXVwJywgdXBGbik7XG4gICAgZG9jdW1lbnQub25zZWxlY3RzdGFydCA9IG51bGw7XG4gICAgZG9jdW1lbnQub25kcmFnc3RhcnQgPSBudWxsO1xuXG4gICAgaXNEcmFnZ2luZyA9IGZhbHNlO1xuXG4gICAgaWYgKG9wdGlvbnMuZW5kKSB7XG4gICAgICBvcHRpb25zLmVuZChldmVudCk7XG4gICAgfVxuICB9O1xuICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uIChldmVudCkge1xuICAgIGlmIChpc0RyYWdnaW5nKSByZXR1cm47XG4gICAgZG9jdW1lbnQub25zZWxlY3RzdGFydCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIGRvY3VtZW50Lm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCBtb3ZlRm4pO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNldXAnLCB1cEZuKTtcbiAgICBpc0RyYWdnaW5nID0gdHJ1ZTtcblxuICAgIGlmIChvcHRpb25zLnN0YXJ0KSB7XG4gICAgICBvcHRpb25zLnN0YXJ0KGV2ZW50KTtcbiAgICB9XG4gIH0pO1xufSk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvc3YtcGFuZWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlxuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBzdl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9ICh7XG4gIG5hbWU6ICdlbC1zbC1wYW5lbCcsXG5cbiAgcHJvcHM6IHtcbiAgICBjb2xvcjoge1xuICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9XG4gIH0sXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBjb2xvclZhbHVlOiBmdW5jdGlvbiBjb2xvclZhbHVlKCkge1xuICAgICAgdmFyIGh1ZSA9IHRoaXMuY29sb3IuZ2V0KCdodWUnKTtcbiAgICAgIHZhciB2YWx1ZSA9IHRoaXMuY29sb3IuZ2V0KCd2YWx1ZScpO1xuICAgICAgcmV0dXJuIHsgaHVlOiBodWUsIHZhbHVlOiB2YWx1ZSB9O1xuICAgIH1cbiAgfSxcblxuICB3YXRjaDoge1xuICAgIGNvbG9yVmFsdWU6IGZ1bmN0aW9uIGNvbG9yVmFsdWUoKSB7XG4gICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgICB2YXIgc2F0dXJhdGlvbiA9IHRoaXMuY29sb3IuZ2V0KCdzYXR1cmF0aW9uJyk7XG4gICAgICB2YXIgdmFsdWUgPSB0aGlzLmNvbG9yLmdldCgndmFsdWUnKTtcblxuICAgICAgdmFyIGVsID0gdGhpcy4kZWw7XG4gICAgICB2YXIgd2lkdGggPSBlbC5jbGllbnRXaWR0aCxcbiAgICAgICAgICBoZWlnaHQgPSBlbC5jbGllbnRIZWlnaHQ7XG5cblxuICAgICAgdGhpcy5jdXJzb3JMZWZ0ID0gc2F0dXJhdGlvbiAqIHdpZHRoIC8gMTAwO1xuICAgICAgdGhpcy5jdXJzb3JUb3AgPSAoMTAwIC0gdmFsdWUpICogaGVpZ2h0IC8gMTAwO1xuXG4gICAgICB0aGlzLmJhY2tncm91bmQgPSAnaHNsKCcgKyB0aGlzLmNvbG9yLmdldCgnaHVlJykgKyAnLCAxMDAlLCA1MCUpJztcbiAgICB9LFxuICAgIGhhbmRsZURyYWc6IGZ1bmN0aW9uIGhhbmRsZURyYWcoZXZlbnQpIHtcbiAgICAgIHZhciBlbCA9IHRoaXMuJGVsO1xuICAgICAgdmFyIHJlY3QgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuICAgICAgdmFyIGxlZnQgPSBldmVudC5jbGllbnRYIC0gcmVjdC5sZWZ0O1xuICAgICAgdmFyIHRvcCA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcbiAgICAgIGxlZnQgPSBNYXRoLm1heCgwLCBsZWZ0KTtcbiAgICAgIGxlZnQgPSBNYXRoLm1pbihsZWZ0LCByZWN0LndpZHRoKTtcblxuICAgICAgdG9wID0gTWF0aC5tYXgoMCwgdG9wKTtcbiAgICAgIHRvcCA9IE1hdGgubWluKHRvcCwgcmVjdC5oZWlnaHQpO1xuXG4gICAgICB0aGlzLmN1cnNvckxlZnQgPSBsZWZ0O1xuICAgICAgdGhpcy5jdXJzb3JUb3AgPSB0b3A7XG4gICAgICB0aGlzLmNvbG9yLnNldCh7XG4gICAgICAgIHNhdHVyYXRpb246IGxlZnQgLyByZWN0LndpZHRoICogMTAwLFxuICAgICAgICB2YWx1ZTogMTAwIC0gdG9wIC8gcmVjdC5oZWlnaHQgKiAxMDBcbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBkcmFnZ2FibGUodGhpcy4kZWwsIHtcbiAgICAgIGRyYWc6IGZ1bmN0aW9uIGRyYWcoZXZlbnQpIHtcbiAgICAgICAgX3RoaXMuaGFuZGxlRHJhZyhldmVudCk7XG4gICAgICB9LFxuICAgICAgZW5kOiBmdW5jdGlvbiBlbmQoZXZlbnQpIHtcbiAgICAgICAgX3RoaXMuaGFuZGxlRHJhZyhldmVudCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLnVwZGF0ZSgpO1xuICB9LFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjdXJzb3JUb3A6IDAsXG4gICAgICBjdXJzb3JMZWZ0OiAwLFxuICAgICAgYmFja2dyb3VuZDogJ2hzbCgwLCAxMDAlLCA1MCUpJ1xuICAgIH07XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvc3YtcGFuZWwudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlxuIC8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIGNvbXBvbmVudHNfc3ZfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoc3ZfcGFuZWx2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18pOyBcbi8vIEVYVEVSTkFMIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXG52YXIgY29tcG9uZW50Tm9ybWFsaXplciA9IF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3N2LXBhbmVsLnZ1ZVxuXG5cblxuXG5cbi8qIG5vcm1hbGl6ZSBjb21wb25lbnQgKi9cblxudmFyIGNvbXBvbmVudCA9IE9iamVjdChjb21wb25lbnROb3JtYWxpemVyW1wiYVwiIC8qIGRlZmF1bHQgKi9dKShcbiAgY29tcG9uZW50c19zdl9wYW5lbHZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxcbiAgc3ZfcGFuZWx2dWVfdHlwZV90ZW1wbGF0ZV9pZF9kODU4MzU5Nl9yZW5kZXIsXG4gIHN2X3BhbmVsdnVlX3R5cGVfdGVtcGxhdGVfaWRfZDg1ODM1OTZfc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBhcGk7IH1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3N2LXBhbmVsLnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBzdl9wYW5lbCA9IChjb21wb25lbnQuZXhwb3J0cyk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9odWUtc2xpZGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD01Y2RjNDNiMSZcbnZhciBodWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfcmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gIHZhciBfdm0gPSB0aGlzXG4gIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudFxuICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2hcbiAgcmV0dXJuIF9jKFxuICAgIFwiZGl2XCIsXG4gICAge1xuICAgICAgc3RhdGljQ2xhc3M6IFwiZWwtY29sb3ItaHVlLXNsaWRlclwiLFxuICAgICAgY2xhc3M6IHsgXCJpcy12ZXJ0aWNhbFwiOiBfdm0udmVydGljYWwgfVxuICAgIH0sXG4gICAgW1xuICAgICAgX2MoXCJkaXZcIiwge1xuICAgICAgICByZWY6IFwiYmFyXCIsXG4gICAgICAgIHN0YXRpY0NsYXNzOiBcImVsLWNvbG9yLWh1ZS1zbGlkZXJfX2JhclwiLFxuICAgICAgICBvbjogeyBjbGljazogX3ZtLmhhbmRsZUNsaWNrIH1cbiAgICAgIH0pLFxuICAgICAgX2MoXCJkaXZcIiwge1xuICAgICAgICByZWY6IFwidGh1bWJcIixcbiAgICAgICAgc3RhdGljQ2xhc3M6IFwiZWwtY29sb3ItaHVlLXNsaWRlcl9fdGh1bWJcIixcbiAgICAgICAgc3R5bGU6IHtcbiAgICAgICAgICBsZWZ0OiBfdm0udGh1bWJMZWZ0ICsgXCJweFwiLFxuICAgICAgICAgIHRvcDogX3ZtLnRodW1iVG9wICsgXCJweFwiXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgXVxuICApXG59XG52YXIgaHVlX3NsaWRlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzVjZGM0M2IxX3N0YXRpY1JlbmRlckZucyA9IFtdXG5odWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvaHVlLXNsaWRlci52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NWNkYzQzYjEmXG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9odWUtc2xpZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBodWVfc2xpZGVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfID0gKHtcbiAgbmFtZTogJ2VsLWNvbG9yLWh1ZS1zbGlkZXInLFxuXG4gIHByb3BzOiB7XG4gICAgY29sb3I6IHtcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcblxuICAgIHZlcnRpY2FsOiBCb29sZWFuXG4gIH0sXG5cbiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGh1bWJMZWZ0OiAwLFxuICAgICAgdGh1bWJUb3A6IDBcbiAgICB9O1xuICB9LFxuXG5cbiAgY29tcHV0ZWQ6IHtcbiAgICBodWVWYWx1ZTogZnVuY3Rpb24gaHVlVmFsdWUoKSB7XG4gICAgICB2YXIgaHVlID0gdGhpcy5jb2xvci5nZXQoJ2h1ZScpO1xuICAgICAgcmV0dXJuIGh1ZTtcbiAgICB9XG4gIH0sXG5cbiAgd2F0Y2g6IHtcbiAgICBodWVWYWx1ZTogZnVuY3Rpb24gaHVlVmFsdWUoKSB7XG4gICAgICB0aGlzLnVwZGF0ZSgpO1xuICAgIH1cbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUNsaWNrKGV2ZW50KSB7XG4gICAgICB2YXIgdGh1bWIgPSB0aGlzLiRyZWZzLnRodW1iO1xuICAgICAgdmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDtcblxuICAgICAgaWYgKHRhcmdldCAhPT0gdGh1bWIpIHtcbiAgICAgICAgdGhpcy5oYW5kbGVEcmFnKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZURyYWc6IGZ1bmN0aW9uIGhhbmRsZURyYWcoZXZlbnQpIHtcbiAgICAgIHZhciByZWN0ID0gdGhpcy4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICB2YXIgdGh1bWIgPSB0aGlzLiRyZWZzLnRodW1iO1xuXG4gICAgICB2YXIgaHVlID0gdm9pZCAwO1xuXG4gICAgICBpZiAoIXRoaXMudmVydGljYWwpIHtcbiAgICAgICAgdmFyIGxlZnQgPSBldmVudC5jbGllbnRYIC0gcmVjdC5sZWZ0O1xuICAgICAgICBsZWZ0ID0gTWF0aC5taW4obGVmdCwgcmVjdC53aWR0aCAtIHRodW1iLm9mZnNldFdpZHRoIC8gMik7XG4gICAgICAgIGxlZnQgPSBNYXRoLm1heCh0aHVtYi5vZmZzZXRXaWR0aCAvIDIsIGxlZnQpO1xuXG4gICAgICAgIGh1ZSA9IE1hdGgucm91bmQoKGxlZnQgLSB0aHVtYi5vZmZzZXRXaWR0aCAvIDIpIC8gKHJlY3Qud2lkdGggLSB0aHVtYi5vZmZzZXRXaWR0aCkgKiAzNjApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHRvcCA9IGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcDtcbiAgICAgICAgdG9wID0gTWF0aC5taW4odG9wLCByZWN0LmhlaWdodCAtIHRodW1iLm9mZnNldEhlaWdodCAvIDIpO1xuICAgICAgICB0b3AgPSBNYXRoLm1heCh0aHVtYi5vZmZzZXRIZWlnaHQgLyAyLCB0b3ApO1xuXG4gICAgICAgIGh1ZSA9IE1hdGgucm91bmQoKHRvcCAtIHRodW1iLm9mZnNldEhlaWdodCAvIDIpIC8gKHJlY3QuaGVpZ2h0IC0gdGh1bWIub2Zmc2V0SGVpZ2h0KSAqIDM2MCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuY29sb3Iuc2V0KCdodWUnLCBodWUpO1xuICAgIH0sXG4gICAgZ2V0VGh1bWJMZWZ0OiBmdW5jdGlvbiBnZXRUaHVtYkxlZnQoKSB7XG4gICAgICBpZiAodGhpcy52ZXJ0aWNhbCkgcmV0dXJuIDA7XG4gICAgICB2YXIgZWwgPSB0aGlzLiRlbDtcbiAgICAgIHZhciBodWUgPSB0aGlzLmNvbG9yLmdldCgnaHVlJyk7XG5cbiAgICAgIGlmICghZWwpIHJldHVybiAwO1xuICAgICAgdmFyIHRodW1iID0gdGhpcy4kcmVmcy50aHVtYjtcbiAgICAgIHJldHVybiBNYXRoLnJvdW5kKGh1ZSAqIChlbC5vZmZzZXRXaWR0aCAtIHRodW1iLm9mZnNldFdpZHRoIC8gMikgLyAzNjApO1xuICAgIH0sXG4gICAgZ2V0VGh1bWJUb3A6IGZ1bmN0aW9uIGdldFRodW1iVG9wKCkge1xuICAgICAgaWYgKCF0aGlzLnZlcnRpY2FsKSByZXR1cm4gMDtcbiAgICAgIHZhciBlbCA9IHRoaXMuJGVsO1xuICAgICAgdmFyIGh1ZSA9IHRoaXMuY29sb3IuZ2V0KCdodWUnKTtcblxuICAgICAgaWYgKCFlbCkgcmV0dXJuIDA7XG4gICAgICB2YXIgdGh1bWIgPSB0aGlzLiRyZWZzLnRodW1iO1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQoaHVlICogKGVsLm9mZnNldEhlaWdodCAtIHRodW1iLm9mZnNldEhlaWdodCAvIDIpIC8gMzYwKTtcbiAgICB9LFxuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge1xuICAgICAgdGhpcy50aHVtYkxlZnQgPSB0aGlzLmdldFRodW1iTGVmdCgpO1xuICAgICAgdGhpcy50aHVtYlRvcCA9IHRoaXMuZ2V0VGh1bWJUb3AoKTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIF8kcmVmcyA9IHRoaXMuJHJlZnMsXG4gICAgICAgIGJhciA9IF8kcmVmcy5iYXIsXG4gICAgICAgIHRodW1iID0gXyRyZWZzLnRodW1iO1xuXG5cbiAgICB2YXIgZHJhZ0NvbmZpZyA9IHtcbiAgICAgIGRyYWc6IGZ1bmN0aW9uIGRyYWcoZXZlbnQpIHtcbiAgICAgICAgX3RoaXMuaGFuZGxlRHJhZyhldmVudCk7XG4gICAgICB9LFxuICAgICAgZW5kOiBmdW5jdGlvbiBlbmQoZXZlbnQpIHtcbiAgICAgICAgX3RoaXMuaGFuZGxlRHJhZyhldmVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGRyYWdnYWJsZShiYXIsIGRyYWdDb25maWcpO1xuICAgIGRyYWdnYWJsZSh0aHVtYiwgZHJhZ0NvbmZpZyk7XG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxufSk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9odWUtc2xpZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbiAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBjb21wb25lbnRzX2h1ZV9zbGlkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoaHVlX3NsaWRlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyk7IFxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvaHVlLXNsaWRlci52dWVcblxuXG5cblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5cbnZhciBodWVfc2xpZGVyX2NvbXBvbmVudCA9IE9iamVjdChjb21wb25lbnROb3JtYWxpemVyW1wiYVwiIC8qIGRlZmF1bHQgKi9dKShcbiAgY29tcG9uZW50c19odWVfc2xpZGVydnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLFxuICBodWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfcmVuZGVyLFxuICBodWVfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfNWNkYzQzYjFfc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBodWVfc2xpZGVyX2FwaTsgfVxuaHVlX3NsaWRlcl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9odWUtc2xpZGVyLnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBodWVfc2xpZGVyID0gKGh1ZV9zbGlkZXJfY29tcG9uZW50LmV4cG9ydHMpO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvYWxwaGEtc2xpZGVyLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNjhjNjZjYiZcbnZhciBhbHBoYV9zbGlkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjhjNjZjYl9yZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXG4gICAgXCJkaXZcIixcbiAgICB7XG4gICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1hbHBoYS1zbGlkZXJcIixcbiAgICAgIGNsYXNzOiB7IFwiaXMtdmVydGljYWxcIjogX3ZtLnZlcnRpY2FsIH1cbiAgICB9LFxuICAgIFtcbiAgICAgIF9jKFwiZGl2XCIsIHtcbiAgICAgICAgcmVmOiBcImJhclwiLFxuICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1hbHBoYS1zbGlkZXJfX2JhclwiLFxuICAgICAgICBzdHlsZToge1xuICAgICAgICAgIGJhY2tncm91bmQ6IF92bS5iYWNrZ3JvdW5kXG4gICAgICAgIH0sXG4gICAgICAgIG9uOiB7IGNsaWNrOiBfdm0uaGFuZGxlQ2xpY2sgfVxuICAgICAgfSksXG4gICAgICBfYyhcImRpdlwiLCB7XG4gICAgICAgIHJlZjogXCJ0aHVtYlwiLFxuICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1hbHBoYS1zbGlkZXJfX3RodW1iXCIsXG4gICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgbGVmdDogX3ZtLnRodW1iTGVmdCArIFwicHhcIixcbiAgICAgICAgICB0b3A6IF92bS50aHVtYlRvcCArIFwicHhcIlxuICAgICAgICB9XG4gICAgICB9KVxuICAgIF1cbiAgKVxufVxudmFyIGFscGhhX3NsaWRlcnZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2OGM2NmNiX3N0YXRpY1JlbmRlckZucyA9IFtdXG5hbHBoYV9zbGlkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjhjNjZjYl9yZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWVcblxuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9hbHBoYS1zbGlkZXIudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTA2OGM2NmNiJlxuXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvYWxwaGEtc2xpZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBhbHBoYV9zbGlkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoe1xuICBuYW1lOiAnZWwtY29sb3ItYWxwaGEtc2xpZGVyJyxcblxuICBwcm9wczoge1xuICAgIGNvbG9yOiB7XG4gICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgdmVydGljYWw6IEJvb2xlYW5cbiAgfSxcblxuICB3YXRjaDoge1xuICAgICdjb2xvci5fYWxwaGEnOiBmdW5jdGlvbiBjb2xvcl9hbHBoYSgpIHtcbiAgICAgIHRoaXMudXBkYXRlKCk7XG4gICAgfSxcbiAgICAnY29sb3IudmFsdWUnOiBmdW5jdGlvbiBjb2xvclZhbHVlKCkge1xuICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGhhbmRsZUNsaWNrOiBmdW5jdGlvbiBoYW5kbGVDbGljayhldmVudCkge1xuICAgICAgdmFyIHRodW1iID0gdGhpcy4kcmVmcy50aHVtYjtcbiAgICAgIHZhciB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG5cbiAgICAgIGlmICh0YXJnZXQgIT09IHRodW1iKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlRHJhZyhldmVudCk7XG4gICAgICB9XG4gICAgfSxcbiAgICBoYW5kbGVEcmFnOiBmdW5jdGlvbiBoYW5kbGVEcmFnKGV2ZW50KSB7XG4gICAgICB2YXIgcmVjdCA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdmFyIHRodW1iID0gdGhpcy4kcmVmcy50aHVtYjtcblxuXG4gICAgICBpZiAoIXRoaXMudmVydGljYWwpIHtcbiAgICAgICAgdmFyIGxlZnQgPSBldmVudC5jbGllbnRYIC0gcmVjdC5sZWZ0O1xuICAgICAgICBsZWZ0ID0gTWF0aC5tYXgodGh1bWIub2Zmc2V0V2lkdGggLyAyLCBsZWZ0KTtcbiAgICAgICAgbGVmdCA9IE1hdGgubWluKGxlZnQsIHJlY3Qud2lkdGggLSB0aHVtYi5vZmZzZXRXaWR0aCAvIDIpO1xuXG4gICAgICAgIHRoaXMuY29sb3Iuc2V0KCdhbHBoYScsIE1hdGgucm91bmQoKGxlZnQgLSB0aHVtYi5vZmZzZXRXaWR0aCAvIDIpIC8gKHJlY3Qud2lkdGggLSB0aHVtYi5vZmZzZXRXaWR0aCkgKiAxMDApKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciB0b3AgPSBldmVudC5jbGllbnRZIC0gcmVjdC50b3A7XG4gICAgICAgIHRvcCA9IE1hdGgubWF4KHRodW1iLm9mZnNldEhlaWdodCAvIDIsIHRvcCk7XG4gICAgICAgIHRvcCA9IE1hdGgubWluKHRvcCwgcmVjdC5oZWlnaHQgLSB0aHVtYi5vZmZzZXRIZWlnaHQgLyAyKTtcblxuICAgICAgICB0aGlzLmNvbG9yLnNldCgnYWxwaGEnLCBNYXRoLnJvdW5kKCh0b3AgLSB0aHVtYi5vZmZzZXRIZWlnaHQgLyAyKSAvIChyZWN0LmhlaWdodCAtIHRodW1iLm9mZnNldEhlaWdodCkgKiAxMDApKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGdldFRodW1iTGVmdDogZnVuY3Rpb24gZ2V0VGh1bWJMZWZ0KCkge1xuICAgICAgaWYgKHRoaXMudmVydGljYWwpIHJldHVybiAwO1xuICAgICAgdmFyIGVsID0gdGhpcy4kZWw7XG4gICAgICB2YXIgYWxwaGEgPSB0aGlzLmNvbG9yLl9hbHBoYTtcblxuICAgICAgaWYgKCFlbCkgcmV0dXJuIDA7XG4gICAgICB2YXIgdGh1bWIgPSB0aGlzLiRyZWZzLnRodW1iO1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQoYWxwaGEgKiAoZWwub2Zmc2V0V2lkdGggLSB0aHVtYi5vZmZzZXRXaWR0aCAvIDIpIC8gMTAwKTtcbiAgICB9LFxuICAgIGdldFRodW1iVG9wOiBmdW5jdGlvbiBnZXRUaHVtYlRvcCgpIHtcbiAgICAgIGlmICghdGhpcy52ZXJ0aWNhbCkgcmV0dXJuIDA7XG4gICAgICB2YXIgZWwgPSB0aGlzLiRlbDtcbiAgICAgIHZhciBhbHBoYSA9IHRoaXMuY29sb3IuX2FscGhhO1xuXG4gICAgICBpZiAoIWVsKSByZXR1cm4gMDtcbiAgICAgIHZhciB0aHVtYiA9IHRoaXMuJHJlZnMudGh1bWI7XG4gICAgICByZXR1cm4gTWF0aC5yb3VuZChhbHBoYSAqIChlbC5vZmZzZXRIZWlnaHQgLSB0aHVtYi5vZmZzZXRIZWlnaHQgLyAyKSAvIDEwMCk7XG4gICAgfSxcbiAgICBnZXRCYWNrZ3JvdW5kOiBmdW5jdGlvbiBnZXRCYWNrZ3JvdW5kKCkge1xuICAgICAgaWYgKHRoaXMuY29sb3IgJiYgdGhpcy5jb2xvci52YWx1ZSkge1xuICAgICAgICB2YXIgX2NvbG9yJHRvUmdiID0gdGhpcy5jb2xvci50b1JnYigpLFxuICAgICAgICAgICAgciA9IF9jb2xvciR0b1JnYi5yLFxuICAgICAgICAgICAgZyA9IF9jb2xvciR0b1JnYi5nLFxuICAgICAgICAgICAgYiA9IF9jb2xvciR0b1JnYi5iO1xuXG4gICAgICAgIHJldHVybiAnbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKCcgKyByICsgJywgJyArIGcgKyAnLCAnICsgYiArICcsIDApIDAlLCByZ2JhKCcgKyByICsgJywgJyArIGcgKyAnLCAnICsgYiArICcsIDEpIDEwMCUpJztcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0sXG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7XG4gICAgICB0aGlzLnRodW1iTGVmdCA9IHRoaXMuZ2V0VGh1bWJMZWZ0KCk7XG4gICAgICB0aGlzLnRodW1iVG9wID0gdGhpcy5nZXRUaHVtYlRvcCgpO1xuICAgICAgdGhpcy5iYWNrZ3JvdW5kID0gdGhpcy5nZXRCYWNrZ3JvdW5kKCk7XG4gICAgfVxuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRodW1iTGVmdDogMCxcbiAgICAgIHRodW1iVG9wOiAwLFxuICAgICAgYmFja2dyb3VuZDogbnVsbFxuICAgIH07XG4gIH0sXG4gIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIHZhciBfJHJlZnMgPSB0aGlzLiRyZWZzLFxuICAgICAgICBiYXIgPSBfJHJlZnMuYmFyLFxuICAgICAgICB0aHVtYiA9IF8kcmVmcy50aHVtYjtcblxuXG4gICAgdmFyIGRyYWdDb25maWcgPSB7XG4gICAgICBkcmFnOiBmdW5jdGlvbiBkcmFnKGV2ZW50KSB7XG4gICAgICAgIF90aGlzLmhhbmRsZURyYWcoZXZlbnQpO1xuICAgICAgfSxcbiAgICAgIGVuZDogZnVuY3Rpb24gZW5kKGV2ZW50KSB7XG4gICAgICAgIF90aGlzLmhhbmRsZURyYWcoZXZlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBkcmFnZ2FibGUoYmFyLCBkcmFnQ29uZmlnKTtcbiAgICBkcmFnZ2FibGUodGh1bWIsIGRyYWdDb25maWcpO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvYWxwaGEtc2xpZGVyLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbiAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBjb21wb25lbnRzX2FscGhhX3NsaWRlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9IChhbHBoYV9zbGlkZXJ2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18pOyBcbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL2FscGhhLXNsaWRlci52dWVcblxuXG5cblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5cbnZhciBhbHBoYV9zbGlkZXJfY29tcG9uZW50ID0gT2JqZWN0KGNvbXBvbmVudE5vcm1hbGl6ZXJbXCJhXCIgLyogZGVmYXVsdCAqL10pKFxuICBjb21wb25lbnRzX2FscGhhX3NsaWRlcnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxcbiAgYWxwaGFfc2xpZGVydnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY4YzY2Y2JfcmVuZGVyLFxuICBhbHBoYV9zbGlkZXJ2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjhjNjZjYl9zdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAoZmFsc2UpIHsgdmFyIGFscGhhX3NsaWRlcl9hcGk7IH1cbmFscGhhX3NsaWRlcl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9hbHBoYS1zbGlkZXIudnVlXCJcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIGFscGhhX3NsaWRlciA9IChhbHBoYV9zbGlkZXJfY29tcG9uZW50LmV4cG9ydHMpO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcHJlZGVmaW5lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNmUwMzA5MyZcbnZhciBwcmVkZWZpbmV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNmUwMzA5M19yZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1wcmVkZWZpbmVcIiB9LCBbXG4gICAgX2MoXG4gICAgICBcImRpdlwiLFxuICAgICAgeyBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1wcmVkZWZpbmVfX2NvbG9yc1wiIH0sXG4gICAgICBfdm0uX2woX3ZtLnJnYmFDb2xvcnMsIGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG4gICAgICAgIHJldHVybiBfYyhcbiAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGtleTogX3ZtLmNvbG9yc1tpbmRleF0sXG4gICAgICAgICAgICBzdGF0aWNDbGFzczogXCJlbC1jb2xvci1wcmVkZWZpbmVfX2NvbG9yLXNlbGVjdG9yXCIsXG4gICAgICAgICAgICBjbGFzczogeyBzZWxlY3RlZDogaXRlbS5zZWxlY3RlZCwgXCJpcy1hbHBoYVwiOiBpdGVtLl9hbHBoYSA8IDEwMCB9LFxuICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkge1xuICAgICAgICAgICAgICAgIF92bS5oYW5kbGVTZWxlY3QoaW5kZXgpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFtfYyhcImRpdlwiLCB7IHN0eWxlOiB7IFwiYmFja2dyb3VuZC1jb2xvclwiOiBpdGVtLnZhbHVlIH0gfSldXG4gICAgICAgIClcbiAgICAgIH0pLFxuICAgICAgMFxuICAgIClcbiAgXSlcbn1cbnZhciBwcmVkZWZpbmV2dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNmUwMzA5M19zdGF0aWNSZW5kZXJGbnMgPSBbXVxucHJlZGVmaW5ldnVlX3R5cGVfdGVtcGxhdGVfaWRfMDZlMDMwOTNfcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5cblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcHJlZGVmaW5lLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wNmUwMzA5MyZcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3ByZWRlZmluZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwcmVkZWZpbmV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoe1xuICBwcm9wczoge1xuICAgIGNvbG9yczogeyB0eXBlOiBBcnJheSwgcmVxdWlyZWQ6IHRydWUgfSxcbiAgICBjb2xvcjogeyByZXF1aXJlZDogdHJ1ZSB9XG4gIH0sXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJnYmFDb2xvcnM6IHRoaXMucGFyc2VDb2xvcnModGhpcy5jb2xvcnMsIHRoaXMuY29sb3IpXG4gICAgfTtcbiAgfSxcblxuICBtZXRob2RzOiB7XG4gICAgaGFuZGxlU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVTZWxlY3QoaW5kZXgpIHtcbiAgICAgIHRoaXMuY29sb3IuZnJvbVN0cmluZyh0aGlzLmNvbG9yc1tpbmRleF0pO1xuICAgIH0sXG4gICAgcGFyc2VDb2xvcnM6IGZ1bmN0aW9uIHBhcnNlQ29sb3JzKGNvbG9ycywgY29sb3IpIHtcbiAgICAgIHJldHVybiBjb2xvcnMubWFwKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICB2YXIgYyA9IG5ldyBzcmNfY29sb3IoKTtcbiAgICAgICAgYy5lbmFibGVBbHBoYSA9IHRydWU7XG4gICAgICAgIGMuZm9ybWF0ID0gJ3JnYmEnO1xuICAgICAgICBjLmZyb21TdHJpbmcodmFsdWUpO1xuICAgICAgICBjLnNlbGVjdGVkID0gYy52YWx1ZSA9PT0gY29sb3IudmFsdWU7XG4gICAgICAgIHJldHVybiBjO1xuICAgICAgfSk7XG4gICAgfVxuICB9LFxuICB3YXRjaDoge1xuICAgICckcGFyZW50LmN1cnJlbnRDb2xvcic6IGZ1bmN0aW9uICRwYXJlbnRDdXJyZW50Q29sb3IodmFsKSB7XG4gICAgICB2YXIgY29sb3IgPSBuZXcgc3JjX2NvbG9yKCk7XG4gICAgICBjb2xvci5mcm9tU3RyaW5nKHZhbCk7XG5cbiAgICAgIHRoaXMucmdiYUNvbG9ycy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICAgIGl0ZW0uc2VsZWN0ZWQgPSBjb2xvci5jb21wYXJlKGl0ZW0pO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICBjb2xvcnM6IGZ1bmN0aW9uIGNvbG9ycyhuZXdWYWwpIHtcbiAgICAgIHRoaXMucmdiYUNvbG9ycyA9IHRoaXMucGFyc2VDb2xvcnMobmV3VmFsLCB0aGlzLmNvbG9yKTtcbiAgICB9LFxuICAgIGNvbG9yOiBmdW5jdGlvbiBjb2xvcihuZXdWYWwpIHtcbiAgICAgIHRoaXMucmdiYUNvbG9ycyA9IHRoaXMucGFyc2VDb2xvcnModGhpcy5jb2xvcnMsIG5ld1ZhbCk7XG4gICAgfVxuICB9XG59KTtcbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3ByZWRlZmluZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgY29tcG9uZW50c19wcmVkZWZpbmV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAocHJlZGVmaW5ldnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfKTsgXG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9wcmVkZWZpbmUudnVlXG5cblxuXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuXG52YXIgcHJlZGVmaW5lX2NvbXBvbmVudCA9IE9iamVjdChjb21wb25lbnROb3JtYWxpemVyW1wiYVwiIC8qIGRlZmF1bHQgKi9dKShcbiAgY29tcG9uZW50c19wcmVkZWZpbmV2dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18sXG4gIHByZWRlZmluZXZ1ZV90eXBlX3RlbXBsYXRlX2lkXzA2ZTAzMDkzX3JlbmRlcixcbiAgcHJlZGVmaW5ldnVlX3R5cGVfdGVtcGxhdGVfaWRfMDZlMDMwOTNfc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgbnVsbCxcbiAgbnVsbFxuICBcbilcblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKGZhbHNlKSB7IHZhciBwcmVkZWZpbmVfYXBpOyB9XG5wcmVkZWZpbmVfY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcHJlZGVmaW5lLnZ1ZVwiXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwcmVkZWZpbmUgPSAocHJlZGVmaW5lX2NvbXBvbmVudC5leHBvcnRzKTtcbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi91dGlscy92dWUtcG9wcGVyXCJcbnZhciB2dWVfcG9wcGVyXyA9IF9fd2VicGFja19yZXF1aXJlX18oNSk7XG52YXIgdnVlX3BvcHBlcl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubih2dWVfcG9wcGVyXyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi9taXhpbnMvbG9jYWxlXCJcbnZhciBsb2NhbGVfID0gX193ZWJwYWNrX3JlcXVpcmVfXyg2KTtcbnZhciBsb2NhbGVfZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4obG9jYWxlXyk7XG5cbi8vIEVYVEVSTkFMIE1PRFVMRTogZXh0ZXJuYWwgXCJlbGVtZW50LXVpL2xpYi9pbnB1dFwiXG52YXIgaW5wdXRfID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCk7XG52YXIgaW5wdXRfZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9fX3dlYnBhY2tfcmVxdWlyZV9fLm4oaW5wdXRfKTtcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL2J1dHRvblwiXG52YXIgYnV0dG9uXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTQpO1xudmFyIGJ1dHRvbl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihidXR0b25fKTtcblxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYj8/dnVlLWxvYWRlci1vcHRpb25zIS4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3BpY2tlci1kcm9wZG93bi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuXG5cblxuXG5cblxuXG5cblxuXG4vKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBwaWNrZXJfZHJvcGRvd252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoe1xuICBuYW1lOiAnZWwtY29sb3ItcGlja2VyLWRyb3Bkb3duJyxcblxuICBtaXhpbnM6IFt2dWVfcG9wcGVyX2RlZmF1bHQuYSwgbG9jYWxlX2RlZmF1bHQuYV0sXG5cbiAgY29tcG9uZW50czoge1xuICAgIFN2UGFuZWw6IHN2X3BhbmVsLFxuICAgIEh1ZVNsaWRlcjogaHVlX3NsaWRlcixcbiAgICBBbHBoYVNsaWRlcjogYWxwaGFfc2xpZGVyLFxuICAgIEVsSW5wdXQ6IGlucHV0X2RlZmF1bHQuYSxcbiAgICBFbEJ1dHRvbjogYnV0dG9uX2RlZmF1bHQuYSxcbiAgICBQcmVkZWZpbmU6IHByZWRlZmluZVxuICB9LFxuXG4gIHByb3BzOiB7XG4gICAgY29sb3I6IHtcbiAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBzaG93QWxwaGE6IEJvb2xlYW4sXG4gICAgcHJlZGVmaW5lOiBBcnJheVxuICB9LFxuXG4gIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGN1c3RvbUlucHV0OiAnJ1xuICAgIH07XG4gIH0sXG5cblxuICBjb21wdXRlZDoge1xuICAgIGN1cnJlbnRDb2xvcjogZnVuY3Rpb24gY3VycmVudENvbG9yKCkge1xuICAgICAgdmFyIHBhcmVudCA9IHRoaXMuJHBhcmVudDtcbiAgICAgIHJldHVybiAhcGFyZW50LnZhbHVlICYmICFwYXJlbnQuc2hvd1BhbmVsQ29sb3IgPyAnJyA6IHBhcmVudC5jb2xvci52YWx1ZTtcbiAgICB9XG4gIH0sXG5cbiAgbWV0aG9kczoge1xuICAgIGNvbmZpcm1WYWx1ZTogZnVuY3Rpb24gY29uZmlybVZhbHVlKCkge1xuICAgICAgdGhpcy4kZW1pdCgncGljaycpO1xuICAgIH0sXG4gICAgaGFuZGxlQ29uZmlybTogZnVuY3Rpb24gaGFuZGxlQ29uZmlybSgpIHtcbiAgICAgIHRoaXMuY29sb3IuZnJvbVN0cmluZyh0aGlzLmN1c3RvbUlucHV0KTtcbiAgICB9XG4gIH0sXG5cbiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHtcbiAgICB0aGlzLiRwYXJlbnQucG9wcGVyRWxtID0gdGhpcy5wb3BwZXJFbG0gPSB0aGlzLiRlbDtcbiAgICB0aGlzLnJlZmVyZW5jZUVsbSA9IHRoaXMuJHBhcmVudC4kZWw7XG4gIH0sXG5cblxuICB3YXRjaDoge1xuICAgIHNob3dQb3BwZXI6IGZ1bmN0aW9uIHNob3dQb3BwZXIodmFsKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICBpZiAodmFsID09PSB0cnVlKSB7XG4gICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICB2YXIgXyRyZWZzID0gX3RoaXMuJHJlZnMsXG4gICAgICAgICAgICAgIHNsID0gXyRyZWZzLnNsLFxuICAgICAgICAgICAgICBodWUgPSBfJHJlZnMuaHVlLFxuICAgICAgICAgICAgICBhbHBoYSA9IF8kcmVmcy5hbHBoYTtcblxuICAgICAgICAgIHNsICYmIHNsLnVwZGF0ZSgpO1xuICAgICAgICAgIGh1ZSAmJiBodWUudXBkYXRlKCk7XG4gICAgICAgICAgYWxwaGEgJiYgYWxwaGEudXBkYXRlKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0sXG5cblxuICAgIGN1cnJlbnRDb2xvcjoge1xuICAgICAgaW1tZWRpYXRlOiB0cnVlLFxuICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcih2YWwpIHtcbiAgICAgICAgdGhpcy5jdXN0b21JbnB1dCA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL2NvbXBvbmVudHMvcGlja2VyLWRyb3Bkb3duLnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcbiAvKiBoYXJtb255IGRlZmF1bHQgZXhwb3J0ICovIHZhciBjb21wb25lbnRzX3BpY2tlcl9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyA9IChwaWNrZXJfZHJvcGRvd252dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18pOyBcbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vcGFja2FnZXMvY29sb3ItcGlja2VyL3NyYy9jb21wb25lbnRzL3BpY2tlci1kcm9wZG93bi52dWVcblxuXG5cblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5cbnZhciBwaWNrZXJfZHJvcGRvd25fY29tcG9uZW50ID0gT2JqZWN0KGNvbXBvbmVudE5vcm1hbGl6ZXJbXCJhXCIgLyogZGVmYXVsdCAqL10pKFxuICBjb21wb25lbnRzX3BpY2tlcl9kcm9wZG93bnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyxcbiAgcGlja2VyX2Ryb3Bkb3dudnVlX3R5cGVfdGVtcGxhdGVfaWRfMDY2MDE2MjVfcmVuZGVyLFxuICBwaWNrZXJfZHJvcGRvd252dWVfdHlwZV90ZW1wbGF0ZV9pZF8wNjYwMTYyNV9zdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAoZmFsc2UpIHsgdmFyIHBpY2tlcl9kcm9wZG93bl9hcGk7IH1cbnBpY2tlcl9kcm9wZG93bl9jb21wb25lbnQub3B0aW9ucy5fX2ZpbGUgPSBcInBhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvY29tcG9uZW50cy9waWNrZXItZHJvcGRvd24udnVlXCJcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIHBpY2tlcl9kcm9wZG93biA9IChwaWNrZXJfZHJvcGRvd25fY29tcG9uZW50LmV4cG9ydHMpO1xuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL3V0aWxzL2NsaWNrb3V0c2lkZVwiXG52YXIgY2xpY2tvdXRzaWRlXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTIpO1xudmFyIGNsaWNrb3V0c2lkZV9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihjbGlja291dHNpZGVfKTtcblxuLy8gRVhURVJOQUwgTU9EVUxFOiBleHRlcm5hbCBcImVsZW1lbnQtdWkvbGliL21peGlucy9lbWl0dGVyXCJcbnZhciBlbWl0dGVyXyA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG52YXIgZW1pdHRlcl9kZWZhdWx0ID0gLyojX19QVVJFX18qL19fd2VicGFja19yZXF1aXJlX18ubihlbWl0dGVyXyk7XG5cbi8vIENPTkNBVEVOQVRFRCBNT0RVTEU6IC4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWI/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cblxuXG5cblxuXG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIG1haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAoe1xuICBuYW1lOiAnRWxDb2xvclBpY2tlcicsXG5cbiAgbWl4aW5zOiBbZW1pdHRlcl9kZWZhdWx0LmFdLFxuXG4gIHByb3BzOiB7XG4gICAgdmFsdWU6IFN0cmluZyxcbiAgICBzaG93QWxwaGE6IEJvb2xlYW4sXG4gICAgY29sb3JGb3JtYXQ6IFN0cmluZyxcbiAgICBkaXNhYmxlZDogQm9vbGVhbixcbiAgICBzaXplOiBTdHJpbmcsXG4gICAgcG9wcGVyQ2xhc3M6IFN0cmluZyxcbiAgICBwcmVkZWZpbmU6IEFycmF5XG4gIH0sXG5cbiAgaW5qZWN0OiB7XG4gICAgZWxGb3JtOiB7XG4gICAgICBkZWZhdWx0OiAnJ1xuICAgIH0sXG4gICAgZWxGb3JtSXRlbToge1xuICAgICAgZGVmYXVsdDogJydcbiAgICB9XG4gIH0sXG5cbiAgZGlyZWN0aXZlczogeyBDbGlja291dHNpZGU6IGNsaWNrb3V0c2lkZV9kZWZhdWx0LmEgfSxcblxuICBjb21wdXRlZDoge1xuICAgIGRpc3BsYXllZENvbG9yOiBmdW5jdGlvbiBkaXNwbGF5ZWRDb2xvcigpIHtcbiAgICAgIGlmICghdGhpcy52YWx1ZSAmJiAhdGhpcy5zaG93UGFuZWxDb2xvcikge1xuICAgICAgICByZXR1cm4gJ3RyYW5zcGFyZW50JztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuZGlzcGxheWVkUmdiKHRoaXMuY29sb3IsIHRoaXMuc2hvd0FscGhhKTtcbiAgICB9LFxuICAgIF9lbEZvcm1JdGVtU2l6ZTogZnVuY3Rpb24gX2VsRm9ybUl0ZW1TaXplKCkge1xuICAgICAgcmV0dXJuICh0aGlzLmVsRm9ybUl0ZW0gfHwge30pLmVsRm9ybUl0ZW1TaXplO1xuICAgIH0sXG4gICAgY29sb3JTaXplOiBmdW5jdGlvbiBjb2xvclNpemUoKSB7XG4gICAgICByZXR1cm4gdGhpcy5zaXplIHx8IHRoaXMuX2VsRm9ybUl0ZW1TaXplIHx8ICh0aGlzLiRFTEVNRU5UIHx8IHt9KS5zaXplO1xuICAgIH0sXG4gICAgY29sb3JEaXNhYmxlZDogZnVuY3Rpb24gY29sb3JEaXNhYmxlZCgpIHtcbiAgICAgIHJldHVybiB0aGlzLmRpc2FibGVkIHx8ICh0aGlzLmVsRm9ybSB8fCB7fSkuZGlzYWJsZWQ7XG4gICAgfVxuICB9LFxuXG4gIHdhdGNoOiB7XG4gICAgdmFsdWU6IGZ1bmN0aW9uIHZhbHVlKHZhbCkge1xuICAgICAgaWYgKCF2YWwpIHtcbiAgICAgICAgdGhpcy5zaG93UGFuZWxDb2xvciA9IGZhbHNlO1xuICAgICAgfSBlbHNlIGlmICh2YWwgJiYgdmFsICE9PSB0aGlzLmNvbG9yLnZhbHVlKSB7XG4gICAgICAgIHRoaXMuY29sb3IuZnJvbVN0cmluZyh2YWwpO1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBjb2xvcjoge1xuICAgICAgZGVlcDogdHJ1ZSxcbiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIoKSB7XG4gICAgICAgIHRoaXMuc2hvd1BhbmVsQ29sb3IgPSB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gICAgZGlzcGxheWVkQ29sb3I6IGZ1bmN0aW9uIGRpc3BsYXllZENvbG9yKHZhbCkge1xuICAgICAgaWYgKCF0aGlzLnNob3dQaWNrZXIpIHJldHVybjtcbiAgICAgIHZhciBjdXJyZW50VmFsdWVDb2xvciA9IG5ldyBzcmNfY29sb3Ioe1xuICAgICAgICBlbmFibGVBbHBoYTogdGhpcy5zaG93QWxwaGEsXG4gICAgICAgIGZvcm1hdDogdGhpcy5jb2xvckZvcm1hdFxuICAgICAgfSk7XG4gICAgICBjdXJyZW50VmFsdWVDb2xvci5mcm9tU3RyaW5nKHRoaXMudmFsdWUpO1xuXG4gICAgICB2YXIgY3VycmVudFZhbHVlQ29sb3JSZ2IgPSB0aGlzLmRpc3BsYXllZFJnYihjdXJyZW50VmFsdWVDb2xvciwgdGhpcy5zaG93QWxwaGEpO1xuICAgICAgaWYgKHZhbCAhPT0gY3VycmVudFZhbHVlQ29sb3JSZ2IpIHtcbiAgICAgICAgdGhpcy4kZW1pdCgnYWN0aXZlLWNoYW5nZScsIHZhbCk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIG1ldGhvZHM6IHtcbiAgICBoYW5kbGVUcmlnZ2VyOiBmdW5jdGlvbiBoYW5kbGVUcmlnZ2VyKCkge1xuICAgICAgaWYgKHRoaXMuY29sb3JEaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgdGhpcy5zaG93UGlja2VyID0gIXRoaXMuc2hvd1BpY2tlcjtcbiAgICB9LFxuICAgIGNvbmZpcm1WYWx1ZTogZnVuY3Rpb24gY29uZmlybVZhbHVlKCkge1xuICAgICAgdmFyIHZhbHVlID0gdGhpcy5jb2xvci52YWx1ZTtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdmFsdWUpO1xuICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsdWUpO1xuICAgICAgdGhpcy5kaXNwYXRjaCgnRWxGb3JtSXRlbScsICdlbC5mb3JtLmNoYW5nZScsIHZhbHVlKTtcbiAgICAgIHRoaXMuc2hvd1BpY2tlciA9IGZhbHNlO1xuICAgIH0sXG4gICAgY2xlYXJWYWx1ZTogZnVuY3Rpb24gY2xlYXJWYWx1ZSgpIHtcbiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgbnVsbCk7XG4gICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCBudWxsKTtcbiAgICAgIGlmICh0aGlzLnZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2goJ0VsRm9ybUl0ZW0nLCAnZWwuZm9ybS5jaGFuZ2UnLCBudWxsKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuc2hvd1BhbmVsQ29sb3IgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2hvd1BpY2tlciA9IGZhbHNlO1xuICAgICAgdGhpcy5yZXNldENvbG9yKCk7XG4gICAgfSxcbiAgICBoaWRlOiBmdW5jdGlvbiBoaWRlKCkge1xuICAgICAgdGhpcy5zaG93UGlja2VyID0gZmFsc2U7XG4gICAgICB0aGlzLnJlc2V0Q29sb3IoKTtcbiAgICB9LFxuICAgIHJlc2V0Q29sb3I6IGZ1bmN0aW9uIHJlc2V0Q29sb3IoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoXykge1xuICAgICAgICBpZiAoX3RoaXMudmFsdWUpIHtcbiAgICAgICAgICBfdGhpcy5jb2xvci5mcm9tU3RyaW5nKF90aGlzLnZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBfdGhpcy5zaG93UGFuZWxDb2xvciA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRpc3BsYXllZFJnYjogZnVuY3Rpb24gZGlzcGxheWVkUmdiKGNvbG9yLCBzaG93QWxwaGEpIHtcbiAgICAgIGlmICghKGNvbG9yIGluc3RhbmNlb2Ygc3JjX2NvbG9yKSkge1xuICAgICAgICB0aHJvdyBFcnJvcignY29sb3Igc2hvdWxkIGJlIGluc3RhbmNlIG9mIENvbG9yIENsYXNzJyk7XG4gICAgICB9XG5cbiAgICAgIHZhciBfY29sb3IkdG9SZ2IgPSBjb2xvci50b1JnYigpLFxuICAgICAgICAgIHIgPSBfY29sb3IkdG9SZ2IucixcbiAgICAgICAgICBnID0gX2NvbG9yJHRvUmdiLmcsXG4gICAgICAgICAgYiA9IF9jb2xvciR0b1JnYi5iO1xuXG4gICAgICByZXR1cm4gc2hvd0FscGhhID8gJ3JnYmEoJyArIHIgKyAnLCAnICsgZyArICcsICcgKyBiICsgJywgJyArIGNvbG9yLmdldCgnYWxwaGEnKSAvIDEwMCArICcpJyA6ICdyZ2IoJyArIHIgKyAnLCAnICsgZyArICcsICcgKyBiICsgJyknO1xuICAgIH1cbiAgfSxcblxuICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge1xuICAgIHZhciB2YWx1ZSA9IHRoaXMudmFsdWU7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLmNvbG9yLmZyb21TdHJpbmcodmFsdWUpO1xuICAgIH1cbiAgICB0aGlzLnBvcHBlckVsbSA9IHRoaXMuJHJlZnMuZHJvcGRvd24uJGVsO1xuICB9LFxuICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkge1xuICAgIHZhciBjb2xvciA9IG5ldyBzcmNfY29sb3Ioe1xuICAgICAgZW5hYmxlQWxwaGE6IHRoaXMuc2hvd0FscGhhLFxuICAgICAgZm9ybWF0OiB0aGlzLmNvbG9yRm9ybWF0XG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgY29sb3I6IGNvbG9yLFxuICAgICAgc2hvd1BpY2tlcjogZmFsc2UsXG4gICAgICBzaG93UGFuZWxDb2xvcjogZmFsc2VcbiAgICB9O1xuICB9LFxuXG5cbiAgY29tcG9uZW50czoge1xuICAgIFBpY2tlckRyb3Bkb3duOiBwaWNrZXJfZHJvcGRvd25cbiAgfVxufSk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9zcmMvbWFpbi52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXG4gLyogaGFybW9ueSBkZWZhdWx0IGV4cG9ydCAqLyB2YXIgc3JjX21haW52dWVfdHlwZV9zY3JpcHRfbGFuZ19qc18gPSAobWFpbnZ1ZV90eXBlX3NjcmlwdF9sYW5nX2pzXyk7IFxuLy8gQ09OQ0FURU5BVEVEIE1PRFVMRTogLi9wYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL21haW4udnVlXG5cblxuXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuXG52YXIgbWFpbl9jb21wb25lbnQgPSBPYmplY3QoY29tcG9uZW50Tm9ybWFsaXplcltcImFcIiAvKiBkZWZhdWx0ICovXSkoXG4gIHNyY19tYWludnVlX3R5cGVfc2NyaXB0X2xhbmdfanNfLFxuICByZW5kZXIsXG4gIHN0YXRpY1JlbmRlckZucyxcbiAgZmFsc2UsXG4gIG51bGwsXG4gIG51bGwsXG4gIG51bGxcbiAgXG4pXG5cbi8qIGhvdCByZWxvYWQgKi9cbmlmIChmYWxzZSkgeyB2YXIgbWFpbl9hcGk7IH1cbm1haW5fY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJwYWNrYWdlcy9jb2xvci1waWNrZXIvc3JjL21haW4udnVlXCJcbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIG1haW4gPSAobWFpbl9jb21wb25lbnQuZXhwb3J0cyk7XG4vLyBDT05DQVRFTkFURUQgTU9EVUxFOiAuL3BhY2thZ2VzL2NvbG9yLXBpY2tlci9pbmRleC5qc1xuXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5tYWluLmluc3RhbGwgPSBmdW5jdGlvbiAoVnVlKSB7XG4gIFZ1ZS5jb21wb25lbnQobWFpbi5uYW1lLCBtYWluKTtcbn07XG5cbi8qIGhhcm1vbnkgZGVmYXVsdCBleHBvcnQgKi8gdmFyIGNvbG9yX3BpY2tlciA9IF9fd2VicGFja19leHBvcnRzX19bXCJkZWZhdWx0XCJdID0gKG1haW4pO1xuXG4vKioqLyB9KSxcblxuLyoqKi8gNjpcbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZWxlbWVudC11aS9saWIvbWl4aW5zL2xvY2FsZVwiKTtcblxuLyoqKi8gfSksXG5cbi8qKiovIDc6XG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInZ1ZVwiKTtcblxuLyoqKi8gfSlcblxuLyoqKioqKi8gfSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///166\n')}}]);